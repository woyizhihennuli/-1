-- @Author: baidwwy
-- @Date:   2023-04-21 16:16:46
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-01-18 22:13:25
--======================================================================--

--======================================================================--
local 充值礼包类 = class()

function 充值礼包类:初始化()
end
function 充值礼包类:获取礼包(id,内容)
    self.礼包物品={}
	self.礼包物品.首冲奖励={赞助36={},赞助120={},赞助300={},赞助500={}}
	self.礼包物品.首冲奖励1={赞助1000={},赞助2000={},赞助3000={},赞助5000={}}
	self.礼包物品.七日登录={星期1={},星期2={},星期3={},星期4={},星期5={},星期6={},星期7={}}
	self.礼包物品.等级礼包={等级50={},等级60={},等级70={},等级80={}}
	-- self.礼包物品.七日登录={}
	-- self.礼包物品.等级礼包={}

	for k,v in pairs(self.礼包物品.首冲奖励) do
	local a=数据库类:查询商城(k,"vip赞助")
	  if k =="赞助36" then
	       self.礼包物品.首冲奖励[1]=a
	  elseif k =="赞助120" then
	       self.礼包物品.首冲奖励[2]=a
	  elseif k =="赞助300" then
	       self.礼包物品.首冲奖励[3]=a
	  elseif k =="赞助500" then
	       self.礼包物品.首冲奖励[4]=a
	  end
    end
    for k,v in pairs(self.礼包物品.首冲奖励1) do
	local a=数据库类:查询商城(k,"vip赞助1")
	  if k =="赞助1000" then
	       self.礼包物品.首冲奖励1[1]=a
	  elseif k =="赞助2000" then
	       self.礼包物品.首冲奖励1[2]=a
	  elseif k =="赞助3000" then
	       self.礼包物品.首冲奖励1[3]=a
	  elseif k =="赞助5000" then
	       self.礼包物品.首冲奖励1[4]=a
	  end
    end

    for k,v in pairs(self.礼包物品.七日登录) do
	local a=数据库类:查询商城(k,"vip赞助")
	  if k =="星期1" then
	       self.礼包物品.七日登录[1]=a
	  elseif k =="星期2" then
	       self.礼包物品.七日登录[2]=a
	  elseif k =="星期3" then
	       self.礼包物品.七日登录[3]=a
	  elseif k =="星期4" then
	       self.礼包物品.七日登录[4]=a
	  elseif k =="星期5" then
	       self.礼包物品.七日登录[5]=a
	  elseif k =="星期6" then
	       self.礼包物品.七日登录[6]=a
	  elseif k =="星期7" then
	       self.礼包物品.七日登录[7]=a
	  end
    end

    for k,v in pairs(self.礼包物品.等级礼包) do
	local a=数据库类:查询商城(k,"vip赞助")
	  if k =="等级50" then
	       self.礼包物品.等级礼包[1]=a
	  elseif k =="等级60" then
	       self.礼包物品.等级礼包[2]=a
	  elseif k =="等级70" then
	       self.礼包物品.等级礼包[3]=a
	  elseif k =="等级80" then
	       self.礼包物品.等级礼包[4]=a
	  end
    end



-- 	self.礼包物品.首冲奖励[1]={
-- 	[1]={可叠加=true,名称="修炼果",数量=58},
-- 	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
-- 	[3]={名称="太阳石",数量=99},
-- 	[4]={名称="月亮石",数量=99},
-- 	[5]={名称="光芒石",数量=99},
-- }
-- 	self.礼包物品.首冲奖励[2]={
-- 	[1]={可叠加=true,名称="修炼果",数量=58},
-- 	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
-- 	[3]={名称="太阳石",数量=99},
-- 	[4]={名称="月亮石",数量=99},
-- 	[5]={名称="光芒石",数量=99},
-- }
-- 	self.礼包物品.首冲奖励[3]={
-- 	[1]={可叠加=true,名称="修炼果",数量=58},
-- 	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
-- 	[3]={名称="太阳石",数量=99},
-- 	[4]={名称="月亮石",数量=99},
-- 	[5]={名称="光芒石",数量=99},
-- }
-- 	self.礼包物品.首冲奖励[4]={
-- 	[1]={可叠加=true,名称="修炼果",数量=58},
-- 	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
-- 	[3]={名称="太阳石",数量=99},
-- 	[4]={名称="月亮石",数量=99},
-- 	[5]={名称="光芒石",数量=99},
-- }
	--[[self.礼包物品.七日登录[1]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[2]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[3]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[4]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[5]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[6]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.七日登录[7]={
	[1]={可叠加=true,名称="秘制红罗羹"},
	[2]={可叠加=true,名称="秘制绿罗羹"},
}
	self.礼包物品.等级礼包[1]={
	[1]={可叠加=true,名称="修炼果",数量=58},
	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
	[3]={名称="太阳石",数量=99},
	[4]={名称="月亮石",数量=99},
	[5]={名称="光芒石",数量=99},
}
	self.礼包物品.等级礼包[2]={
	[1]={可叠加=true,名称="修炼果",数量=58},
	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
	[3]={名称="太阳石",数量=99},
	[4]={名称="月亮石",数量=99},
	[5]={名称="光芒石",数量=99},
}
	self.礼包物品.等级礼包[3]={
	[1]={可叠加=true,名称="修炼果",数量=58},
	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
	[3]={名称="太阳石",数量=99},
	[4]={名称="月亮石",数量=99},
	[5]={名称="光芒石",数量=99},
}
	self.礼包物品.等级礼包[4]={
	[1]={可叠加=true,名称="修炼果",数量=58},
	[2]={可叠加=true,名称="九转金丹",数量=58,阶品=100},
	[3]={名称="太阳石",数量=99},
	[4]={名称="月亮石",数量=99},
	[5]={名称="光芒石",数量=99},
}--]]

local 类型=内容.类型
local 充值数据=获取新建数据(id,"充值数据")
发送数据(玩家数据[id].连接id,131.6,{数据=self.礼包物品[类型],充值=充值数据})
end
function 充值礼包类:领取七日礼包(id,内容)
	local 充值数据=获取新建数据(id,"充值数据")
	local 编号=内容.编号
	if 充值数据.当天充值==nil then
		充值数据.当天充值=false
	end
	if 充值数据.七日领取天数==nil then
		充值数据.七日领取天数=0
	end
	if 充值数据.当天领取==nil then
		充值数据.当天领取=0
	end
	if 充值数据.当天领取==os.date("%d")+0 then
		发送数据(玩家数据[id].连接id, 7, "#y/您今天领取过了,请明天领取#37")
		return
	end
	if 编号<=充值数据.七日领取天数 then
		发送数据(玩家数据[id].连接id, 7, "#y/您已经领取过了,无法重复领取#37")
		return
	end
	if 编号~=充值数据.七日领取天数+1 then
		发送数据(玩家数据[id].连接id, 7, "#y/您似乎前面的奖励还没有领取#37")
		return
	end
	if 编号>7 then
		发送数据(玩家数据[id].连接id, 7, "#y/无法领取#37")
		return
	end
	if 充值数据.当天充值==false then
		充值数据.当天领取=os.date("%d")+0
		充值数据.七日领取天数=充值数据.七日领取天数+1
		保存新建数据(id,"充值数据",充值数据)
					self.临时格子 = 玩家数据[id].角色:取道具格子()
					if self.临时格子 == 0 then
						发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
						return
					end
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.礼包物品.七日登录[编号][1]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.礼包物品.七日登录[编号][1].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.礼包物品.七日登录[编号][1].数量
					end
						-- 玩家数据[id].道具.数据[self.道具编号].不可交易=true
						-- 玩家数据[id].道具.数据[self.道具编号].专用=true
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
	                发送数据(玩家数据[id].连接id, 7, "#y/您领取了礼包奖励")
	                return
	 else
	 	充值数据.当天领取=os.date("%d")+0
	 	充值数据.当天充值=false
	  	充值数据.七日领取天数=充值数据.七日领取天数+1
		保存新建数据(id,"充值数据",充值数据)
	   for n=1,#self.礼包物品.七日登录[编号] do
					self.临时格子 = 玩家数据[id].角色:取道具格子()
					if self.临时格子 == 0 then
						发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
						return
					end
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.礼包物品.七日登录[编号][n]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.礼包物品.七日登录[编号][n].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.礼包物品.七日登录[编号][n].数量
					end
						-- 玩家数据[id].道具.数据[self.道具编号].不可交易=true
						-- 玩家数据[id].道具.数据[self.道具编号].专用=true
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
       end
	发送数据(玩家数据[id].连接id, 7, "#y/您领取了礼包奖励")
	end

end
function 充值礼包类:领取等级礼包(id,内容)
	local 充值数据=获取新建数据(id,"充值数据")
	local 编号=内容.编号
	local 等级档位={50,60,70,80}
	if 充值数据.等级礼包==nil then
		充值数据.等级礼包={}
	end
    if 充值数据.等级礼包[编号]==true then
    	常规提示(id,"#Y/您已经领取过该礼包,无法重复领取#37")
    	return
    end
    if 玩家数据[id].角色.数据.等级<等级档位[编号] then
    	常规提示(id,"#Y/您的等级无法领取该礼包#37")
    	return
    end
	-- if 玩家数据[id].角色.数据.vip时间==nil then
	-- 	玩家数据[id].角色.数据.vip时间=0
	-- end
	if 玩家数据[id].角色.数据.飞行时间限制 ==nil then
      玩家数据[id].角色.数据.飞行时间限制=os.time()
    end

	--if 玩家数据[id].角色.数据.vip时间< os.time()+0 then
	if 玩家数据[id].角色.数据.飞行时间限制< os.time() then
		常规提示(id,"#Y/你的VIP已经过期无法领取#37")
		return
	end
    充值数据.等级礼包[编号]=true
        保存新建数据(id,"充值数据",充值数据)
	   for n=1,#self.礼包物品.等级礼包[编号] do
					self.临时格子 = 玩家数据[id].角色:取道具格子()
					if self.临时格子 == 0 then
						发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
						return
					end
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.礼包物品.等级礼包[编号][n]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.礼包物品.等级礼包[编号][n].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.礼包物品.等级礼包[编号][n].数量
					end
						-- 玩家数据[id].道具.数据[self.道具编号].不可交易=true
						-- 玩家数据[id].道具.数据[self.道具编号].专用=true
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
       end
	发送数据(玩家数据[id].连接id, 7, "#y/您领取了礼包奖励")
end
function 充值礼包类:领取礼包(id,内容)
	local 充值数据=获取新建数据(id,"充值数据")
	local 编号=内容.编号
	local 充值档位={36,120,300,500}
	if 充值数据.领取记录==nil then
		充值数据.领取记录={}
	end

	if 充值数据.充值数额==nil then
		充值数据.充值数额=0
	end
    if 充值数据.充值数额<充值档位[编号] then
    	常规提示(id,"#Y/你的充值金额为"..充值数据.充值数额..",尚未达到该礼包的领取条件#37")
    	return
    end
    if 充值数据.领取记录[编号]==true then
    	常规提示(id,"#Y/您已经领取过该礼包,无法重复领取#37")
    	return
    end
    充值数据.领取记录[编号]=true
    保存新建数据(id,"充值数据",充值数据)
	   for n=1,#self.礼包物品.首冲奖励[编号] do
					self.临时格子 = 玩家数据[id].角色:取道具格子()
					if self.临时格子 == 0 then
						发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
						return
					end
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.礼包物品.首冲奖励[编号][n]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.礼包物品.首冲奖励[编号][n].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.礼包物品.首冲奖励[编号][n].数量
					end
						-- 玩家数据[id].道具.数据[self.道具编号].不可交易=true
						-- 玩家数据[id].道具.数据[self.道具编号].专用=true
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
       end
	发送数据(玩家数据[id].连接id, 7, "#y/您领取了礼包奖励")

end

function 充值礼包类:领取礼包1(id,内容)
	local 充值数据=获取新建数据(id,"充值数据")
	local 编号=内容.编号
	local 充值档位={1000,1500,3000,5000}
	if 充值数据.领取记录1==nil then
		充值数据.领取记录1={}
	end

	if 充值数据.充值数额==nil then
		充值数据.充值数额=0
	end
    if 充值数据.充值数额<充值档位[编号] then
    	常规提示(id,"#Y/你的充值金额为"..充值数据.充值数额..",尚未达到该礼包的领取条件#37")
    	return
    end
    if 充值数据.领取记录1[编号]==true then
    	常规提示(id,"#Y/您已经领取过该礼包,无法重复领取#37")
    	return
    end
    充值数据.领取记录1[编号]=true
    保存新建数据(id,"充值数据",充值数据)
	   for n=1,#self.礼包物品.首冲奖励1[编号] do
					self.临时格子 = 玩家数据[id].角色:取道具格子()
					if self.临时格子 == 0 then
						发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
						return
					end
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.礼包物品.首冲奖励1[编号][n]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.礼包物品.首冲奖励1[编号][n].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.礼包物品.首冲奖励1[编号][n].数量
					end

					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
       end
	发送数据(玩家数据[id].连接id, 7, "#y/您领取了礼包奖励")

end
function 充值礼包类:购买VIP(id)
	if 玩家数据[id].角色.数据.vip时间==nil then
		玩家数据[id].角色.数据.vip时间=0
	end
	if 判断货币(id,150,"点卡")==false then
		发送数据(玩家数据[id].连接id, 7, "#y/您的点卡不足")
		return
	end
	扣除货币(id,150,"点卡")
	if 玩家数据[id].角色.数据.vip时间> os.time() then
	玩家数据[id].角色.数据.vip时间=玩家数据[id].角色.数据.vip时间+604800
    else
    玩家数据[id].角色.数据.vip时间=os.time()+604800
    end
    发送数据(玩家数据[id].连接id, 7, "#y/VIP成功续费7天#37")
    发送数据(玩家数据[id].连接id,31,玩家数据[id].角色:取总数据())
    广播消息({内容=format("#S[全服广播]#R/%s#Y成功续费了VIP特权七天,获得了大量特权#37#37#37#37",玩家数据[id].角色.数据.名称),频道="jj"})
end
function 充值礼包类:更新(dt) end
function 充值礼包类:显示(x, y) end

return 充值礼包类
