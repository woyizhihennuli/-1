-- @Author: baidwwy
-- @Date:   2023-03-10 11:49:52
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-02-01 15:15:46
--======================================================================--

--======================================================================--
local 商城处理类 = class()
--代码函数=loadstring(读入文件([[代码.txt]]))
function 商城处理类:初始化()
	self.购买组号=nil
	self.购买编号=nil
	self.购买数量=nil
	self.购买分类=nil
end

function 商城处理类:加载商品()
	self.商品组 = {}
	self.商品组[18] = {杂货={},仙玉={},积分={},折扣={},宝宝={},法宝={},锦衣祥瑞={},锦衣={},祥瑞={},足迹={},足印={},比武积分={},种族积分={},副本积分={},妖魔积分={},帮战积分={},家园家具={},点卡商城={}}

	self.商品组[19] = {活跃兑换={}}
    self.商品组[20] = {杂货={},仙玉={},积分={},折扣={},宝宝={},法宝={},锦衣祥瑞={},锦衣={},祥瑞={},足迹={},足印={},比武积分={},种族积分={},副本积分={},妖魔积分={}}

--------------------------------------商城
 --   self.商品组[18]["帮战积分"]={
	--      {可叠加=false,名称="魔兽要诀",价格=100,"魔兽要诀"},
	--      {可叠加=false,名称="高级魔兽要诀",价格=200,"高级魔兽要诀"},
	-- }

   for k,v in pairs(self.商品组[18]) do
	local a=数据库类:查询商城(k,"商城数据")
	self.商品组[18][k]=a
   end


   for k,v in pairs(self.商品组[20]) do
	local a=数据库类:查询商城(k,"武神坛商城表")
	self.商品组[20][k]=a
   end

	self.商品组[18]["法宝"]={}
	local 名称={"定风珠","雷兽","迷魂灯","幽灵珠","缚妖索","碧玉葫芦","五色旗盒","飞剑","拭剑石","金甲仙衣","惊魂铃","嗜血幡","风袋","九黎战鼓","盘龙壁","神行飞剑","汇灵盏","天师符","织女扇","清心咒"}
	for i=1,#名称 do
		table.insert(self.商品组[18]["法宝"], self:商城取法宝(名称[i],1))
	end
	--隐藏的法宝
	名称={"发瘟匣","五彩娃娃","金刚杵","兽王令","摄魂","附灵玉","降魔斗篷","聚妖铃","万鬼幡","捆仙绳","罗汉珠","番天印","断线木偶","赤焰","天煞","宝烛","分水","七杀","神木宝鼎"}
	for i=1,#名称 do
	 	table.insert(self.商品组[18]["法宝"], self:商城取法宝(名称[i],2))
	end
	名称={"失心钹","五火神焰印","九幽","普渡","月光宝盒","混元伞","苍白纸人","无魂傀儡","聚宝盆","乾坤玄火塔","无尘扇","干将莫邪","慈悲","救命毫毛","伏魔天书","镇海珠","奇门五行令","月影","鬼泣","七宝玲珑灯"}
	for i=1,#名称 do
		table.insert(self.商品组[18]["法宝"], self:商城取法宝(名称[i],3))
	end
	名称={"流影云笛","宿幕星河","蟠龙玉璧","落星飞鸿","归元圣印","千斗金樽"}
	for i=1,#名称 do
		table.insert(self.商品组[18]["法宝"], self:商城取法宝(名称[i],4))
	end



 -- self.商品组[20]["杂货"]={----武神坛商城

	-- 	{可叠加=true,名称="灵箓",价格=0},
	--     {可叠加=true,名称="彩果",价格=0},
	-- 	{价格=0,可叠加=false,名称="顺逆神针",耐久=100,分类=100,总类=2000},
	-- 	{可叠加=false,名称="神兵图鉴",价格=0,子类=160},
	-- 	{可叠加=false,名称="灵宝图鉴",价格=0,子类=160},
	-- 	{可叠加=true,名称="月华露",价格=0,阶品=500000000},
	-- 	{可叠加=true,子类=1,总类=5,名称="青龙石",价格=0,分类=4},
	-- 	{可叠加=true,子类=2,总类=5,名称="白虎石",价格=0,分类=4},
	-- 	{可叠加=true,子类=3,总类=5,名称="朱雀石",价格=0,分类=4},
	-- 	{可叠加=true,子类=4,总类=5,名称="玄武石",价格=0,分类=4},
	-- 	{可叠加=false,名称="空白强化符",价格=0},
	-- 	{可叠加=true,子类=1,总类=3,名称="符石卷轴",价格=0,分类=2},
	-- 	--{可叠加=true,名称="天眼通符",价格=10000},


	-- 	{可叠加=true,子类=1,总类=3,名称="超级金柳露",价格=0,分类=2},
	-- 	{可叠加=true,子类=0,总类=3,名称="金柳露",价格=0,分类=2},

 --        {可叠加=false,名称="星辉石",总类=5,分类=6,子类=8,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="光芒石",总类=5,分类=6,子类=1,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="月亮石",总类=5,分类=6,子类=2,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="太阳石",总类=5,分类=6,子类=3,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="舍利子",总类=5,分类=6,子类=4,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="红玛瑙",总类=5,分类=6,子类=5,价格=0,级别限制=1},
	-- 	{可叠加=false,名称="黑宝石",总类=5,分类=6,子类=6,价格=0,级别限制=1},

	-- 	{可叠加=false,名称="长寿面",价格=0,阶品=100},
	-- 	{可叠加=false,名称="桂花丸",价格=0,阶品=100},
	-- 	{可叠加=false,名称="珍露酒",价格=0,阶品=100},
	-- 	{可叠加=false,名称="虎骨酒",价格=0,阶品=100},
	-- 	{可叠加=false,名称="女儿红",价格=0,阶品=100},
	-- 	{可叠加=false,名称="蛇胆酒",价格=0,阶品=100},
	-- 	{可叠加=false,名称="醉生梦死",价格=0,阶品=100},
	-- 	{可叠加=false,名称="梅花酒",价格=0,阶品=100},
	-- 	{可叠加=false,名称="百味酒",价格=0,阶品=100},
	-- 	{可叠加=false,名称="翡翠豆腐",价格=0,阶品=100},
	-- 	{可叠加=false,名称="佛跳墙",价格=0,阶品=100},
	-- 	{可叠加=false,名称="豆斋果",价格=0,阶品=100},
	-- 	{可叠加=false,名称="烤鸭",价格=0,阶品=100},
	-- 	{可叠加=false,名称="臭豆腐",价格=0,阶品=100},
	-- 	{可叠加=false,名称="烤肉",价格=0,阶品=100},

	-- 	{可叠加=false,名称="小还丹",价格=0,阶品=100},
	-- 	{可叠加=false,名称="千年保心丹",价格=0,阶品=100},
	-- 	{可叠加=false,名称="金香玉",价格=0,阶品=100},
	-- 	{可叠加=false,名称="五龙丹",价格=0,阶品=100},
	-- 	{可叠加=false,名称="蛇蝎美人",价格=0,阶品=100},
	-- 	{可叠加=false,名称="风水混元丹",价格=0,阶品=100},
	-- 	{可叠加=false,名称="定神香",价格=0,阶品=100},
	-- 	{可叠加=false,名称="十香返生丸",价格=0,阶品=100},
	-- 	{可叠加=false,名称="佛光舍利子",价格=0,阶品=100},
	-- 	{可叠加=false,名称="九转回魂丹",价格=0,阶品=100},

	-- 	{可叠加=true,名称="天龙水",价格=0},
 --        {可叠加=true,名称="餐风饮露",价格=0},
	-- 	{可叠加=true,名称="白露为霜",价格=0},
 --        {可叠加=true,名称="麝香",价格=0},
	-- 	{可叠加=true,名称="地狱灵芝",价格=0},
 --        {可叠加=true,名称="仙狐涎",价格=0},
	-- 	{可叠加=true,名称="月星子",价格=0},
 --        {可叠加=true,名称="孔雀红",价格=0},
 --        {可叠加=true,名称="血珊瑚",价格=0},
 --        {可叠加=true,名称="火凤之睛",价格=0},
 --        {可叠加=true,名称="龙之心屑",价格=0},
 --        {可叠加=true,名称="凤凰尾",价格=0},
 --        {可叠加=true,名称="鹿茸",价格=0},
 --        {可叠加=true,名称="熊胆",价格=0},
 --        {可叠加=true,名称="血色茶花",价格=0},
 --        {可叠加=true,名称="紫石英",价格=0},
 --        {可叠加=true,名称="天不老",价格=0},
 --        {可叠加=true,名称="六道轮回",价格=0},
 --        {可叠加=true,名称="丁香水",价格=0},
 --        {可叠加=true,名称="天不老",价格=0},
 --        {可叠加=true,名称="硫磺草",价格=0},

	-- }

	-- self.商品组[20]["仙玉"]={

	-- 	{可叠加=false,名称="魔兽要诀",价格=0},
	-- 	{可叠加=false,名称="高级魔兽要诀",价格=0},
	-- 	{可叠加=false,名称="召唤兽内丹",价格=0},
	-- 	{可叠加=false,名称="高级召唤兽内丹",价格=0},
	-- 	{可叠加=true,总类=9,名称="坐骑内丹",价格=0,"仙玉商城","坐骑内丹",分类=1,子类=1},
	-- 	{子类=0,总类=680,名称="宠物饰品通用丹",价格=0,分类=1},
	-- 	{可叠加=false,名称="点化石",价格=0,"仙玉商城","点化石",附带技能=nil,总类=5,分类=5,子类=1},
	-- 	{可叠加=false,名称="附魔宝珠",价格=0},
	-- 	 {可叠加=false,名称="战魂",价格=0},--隐藏的
	-- 	 {可叠加=false,名称="陨铁",价格=0},--隐藏的
 --        {可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","心源",级别限制=1,附加特性="心源"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","狂浪滔天",级别限制=1,附加特性="狂浪滔天"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","固若金汤",级别限制=1,附加特性="固若金汤"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","锐不可当",级别限制=1,附加特性="锐不可当"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","通真达灵",级别限制=1,附加特性="通真达灵"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","血气方刚",级别限制=1,附加特性="血气方刚"},
	-- 	{可叠加=false,名称="钟灵石",总类=5,分类=6,子类=8,价格=0,"仙玉商城","健步如飞",级别限制=1,附加特性="健步如飞"},
	-- 	{可叠加=false,名称="钨金",价格=0,总类=5,分类=6,子类=9},
	--     {可叠加=true,名称="易经丹",价格=0},
	-- 	{可叠加=true,名称="玉葫灵髓",价格=0},
	-- 	{可叠加=true,名称="清灵净瓶",价格=0},

	-- 	{可叠加=false,名称="5级宝石礼包",价格=0},
	-- {可叠加=false,名称="7级宝石礼包",价格=0},
	-- {可叠加=true,名称="随机宝石一",价格=0},
	-- {可叠加=false,名称="10级宝石礼包",价格=0},

	-- 	{可叠加=false,总类=3,级别限制=75,子类=1,种类="护腕",名称="炼妖石",分类=3,价格=0},
	--     {可叠加=false,总类=3,级别限制=115,子类=1,种类="护腕",名称="炼妖石",分类=3,价格=0},
 --        {可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="护腕",级别限制=75},
	-- 	{可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="铠甲",级别限制=75},
	-- 	{可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="项圈",级别限制=75},
	-- 	{可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="护腕",级别限制=115},
	-- 	{可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="铠甲",级别限制=115},
	-- 	{可叠加=false,名称="上古锻造图策",价格=0,总类=3,分类=10,子类=1,种类="项圈",级别限制=115},


	-- 	--{可叠加=true,名称="金银锦盒",价格=5},
	-- 	{可叠加=false,名称="星辉石",总类=5,分类=6,子类=8,价格=0,级别限制=3},
	-- 	{可叠加=false,名称="星辉石",总类=5,分类=6,子类=8,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="光芒石",总类=5,分类=6,子类=1,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="月亮石",总类=5,分类=6,子类=2,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="太阳石",总类=5,分类=6,子类=3,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="舍利子",总类=5,分类=6,子类=4,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="红玛瑙",总类=5,分类=6,子类=5,价格=0,级别限制=5},
	-- 	{可叠加=false,名称="黑宝石",总类=5,分类=6,子类=6,价格=0,级别限制=5},
	--     {可叠加=false,名称="光芒石",总类=5,分类=6,子类=1,价格=0,级别限制=8},
	-- 	{可叠加=false,名称="月亮石",总类=5,分类=6,子类=2,价格=0,级别限制=8},
	-- 	{可叠加=false,名称="太阳石",总类=5,分类=6,子类=3,价格=0,级别限制=8},
	-- 	{可叠加=false,名称="舍利子",总类=5,分类=6,子类=4,价格=0,级别限制=8},
	-- 	{可叠加=false,名称="红玛瑙",总类=5,分类=6,子类=5,价格=0,级别限制=8},
	-- 	{可叠加=false,名称="黑宝石",总类=5,分类=6,子类=6,价格=0,级别限制=8},
	--     {可叠加=true,名称="元宵",食材="芝麻沁香",价格=0},
	-- 	{可叠加=true,名称="元宵",食材="桂花酒酿",价格=0},
	-- 	{可叠加=true,名称="元宵",食材="细磨豆沙",价格=0},
	-- 	{可叠加=true,名称="元宵",食材="蜜糖腰果",价格=0},
	-- 	{可叠加=true,名称="元宵",食材="山楂拔丝",价格=0},
	-- 	{可叠加=true,名称="元宵",食材="滑玉莲蓉",价格=0},
	-- 	{可叠加=true,名称="炼兽真经",价格=0},
	-- 	--{可叠加=true,名称="修炼果",价格=1500},
	-- 	{可叠加=false,名称="100级装备礼包",价格=0},
	-- 	--{可叠加=true,名称="神兜兜",价格=200},
	-- 	{可叠加=false,名称="种族坐骑礼包",价格=0},


	-- }
	-- self.商品组[20]["积分"]={

 --         {可叠加=false,名称="种族坐骑礼包",价格=0},

	-- }
	-- self.商品组[20]["比武积分"]={  -- local 书铁范围 = {"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}

	-- 	{可叠加=false,名称="百炼精铁",总类=5,分类=2,子类=160,价格=0},

	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=1,价格=0},--特效对应书铁范围
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=2,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=3,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=4,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=5,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=6,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=7,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=8,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=9,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=10,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=11,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=12,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=13,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=14,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=15,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=16,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=17,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=18,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=19,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=20,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=21,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=22,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=23,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=24,价格=0},
	-- 	{可叠加=false,名称="制造指南书",总类=5,分类=1,子类=160,特效=25,价格=0},

	-- }
	-- self.商品组[20]["种族积分"]={
 --        {可叠加=false,名称="元灵晶石",总类=5,分类=21,子类=140,价格=0},
 --        {可叠加=false,名称="灵饰指南书",总类=5,分类=20,子类=140,特效="手镯",价格=0},
 --        {可叠加=false,名称="灵饰指南书",总类=5,分类=20,子类=140,特效="佩饰",价格=0},
 --        {可叠加=false,名称="灵饰指南书",总类=5,分类=20,子类=140,特效="戒指",价格=0},
 --        {可叠加=false,名称="灵饰指南书",总类=5,分类=20,子类=140,特效="耳饰",价格=0},
	-- }


	-- self.商品组[20]["副本积分"]={
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- }
	-- self.商品组[20]["妖魔积分"]={
	--      {可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	--      {可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},
	-- 	{可叠加=false,名称="魔兽要诀",价格=10000,"魔兽要诀"},

	-- }
	-- self.商品组[20]["折扣"]={
	-- 	{可叠加=false,名称="展翅高飞",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="旗开得胜",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="霸王雄风",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="独眼观天",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="威武不屈",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="深藏不露",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="异域浓情",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="流星天马",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="威猛将军",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="知情达理",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="气宇轩昂",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="如花似玉",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="傲视天下",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="铁血豪情",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="唯我独尊",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="叱咤风云",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="异域风情",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="假面勇者",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="霓裳魅影",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="披星戴月",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="烈焰燃情",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="天雨流芳",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="灵光再现",价格=0,总类="坐骑饰品"},
	-- 	{可叠加=false,名称="倾国倾城",价格=0,总类="坐骑饰品"},
	-- }
	-- self.商品组[20]["锦衣祥瑞"]={--全部隐藏
	-- 	 {名称="碧华锦凝雪",总类=2,分类=15,价格=0,锦衣=true,子类=1},
 --         {名称="黑浪淘纱",总类=2,分类=15,价格=0,锦衣=true,子类=1},
 --         {价格=0,名称="冰灵蝶翼·月笼沙",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="冰雪玉兔",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="锦绣幻梦",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="浪淘纱",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="浪淘纱·月白",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="铃儿叮当",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="萌狮闹春",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="蜜蜂嗡嗡",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="齐天大圣",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="顽皮小恶魔",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="尖叫男爵",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="夏日清凉黑",总类=2,分类=15,锦衣=true,子类=1},
	--      {价格=0,名称="纤云纱·墨黑",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="雁翎银钩·月笼沙",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="夜影红",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="夜之孤煞",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="萤雪轻裘",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="驭龙猎手",总类=2,分类=15,锦衣=true,子类=1},
	--      {价格=0,名称="重溟软甲",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="竹林熊猫",总类=2,分类=15,锦衣=true,子类=1},
	-- }
	-- self.商品组[20]["锦衣"]={

	-- 	{价格=0,名称="青花瓷",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="万灵夜游",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="羽仙歌",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="飞天舞",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{名称="碧华锦凝雪",总类=2,分类=15,价格=0,锦衣=true,子类=1},
 --         {名称="黑浪淘纱",总类=2,分类=15,价格=0,锦衣=true,子类=1},
 --         {价格=0,名称="冰灵蝶翼·月笼沙",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="冰雪玉兔",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="锦绣幻梦",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="浪淘纱",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="浪淘纱·月白",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="铃儿叮当",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="萌狮闹春",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="蜜蜂嗡嗡",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="齐天大圣",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="顽皮小恶魔",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="尖叫男爵",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="夏日清凉黑",总类=2,分类=15,锦衣=true,子类=1},
	--      {价格=0,名称="纤云纱·墨黑",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="雁翎银钩·月笼沙",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="夜影红",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="夜之孤煞",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="萤雪轻裘",总类=2,分类=15,锦衣=true,子类=1},
	-- 	{价格=0,名称="驭龙猎手",总类=2,分类=15,锦衣=true,子类=1},
	--      {价格=0,名称="重溟软甲",总类=2,分类=15,锦衣=true,子类=1},
	-- 	 {价格=0,名称="竹林熊猫",总类=2,分类=15,锦衣=true,子类=1},
	-- }
	-- self.商品组[20]["祥瑞"]={
	-- 	{可叠加=false,名称="种族坐骑礼包",价格=0},--没隐藏的
	-- 	{可叠加=false,名称="祥瑞坐骑礼包",价格=0},
	-- }
	-- self.商品组[20]["足迹"]={
	--      --{可叠加=false,名称="种族坐骑礼包",价格=5000},--没隐藏的
	-- 	{名称="龙卷风足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="皮球足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="雀屏足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	 {名称="旋律足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="枫叶足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="飞天足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="两心相悦足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="心花怒放",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="雷电足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="寒冰足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="星星祈愿",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="地狱焰火",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="元宝足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="光剑足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- 	{名称="雪花足迹",总类=2,分类=17,价格=0,锦衣=true,子类=3},
	-- }

	-- self.商品组[20]["足印"]={
	-- 	{名称="浩瀚星河",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="烈焰澜翻",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="水墨游龙",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="星光熠熠",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="双鲤寄情",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="凌波微步",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="荷塘涟漪",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="雪花飘落",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="月影婆娑",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	 {名称="祥云瑞气",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="花的海洋",总类=2,分类=16,价格=0,锦衣=true,子类=2},

	-- 	--{可叠加=false,名称="种族坐骑礼包",价格=5000},--没隐藏的
	-- 	{名称="爱的光影",总类=2,分类=16,价格=0,锦衣=true,子类=2},--没隐藏的

	-- 	{名称="珠落玉盘",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- 	{名称="红叶随风",总类=2,分类=16,价格=0,锦衣=true,子类=2},
	-- }

	-- self.商品组[20]["宝宝"]={
	-- {模型="超级神龙",名称="超级神龙",类型="神兽",价格=0},
	-- {模型="超级腾蛇",名称="超级腾蛇",类型="神兽",价格=0},
	-- {模型="超级青鸾",名称="超级青鸾",类型="神兽",价格=0},
	-- {模型="超级人参娃娃",名称="超级人参娃娃",类型="神兽",价格=0},
	-- {模型="超级海豚",名称="超级海豚",类型="神兽",价格=0},
	-- {模型="超级神牛",名称="超级神牛",类型="神兽",价格=0},
	-- {模型="超级神虎",名称="超级神虎",类型="神兽",价格=0},
	-- {模型="超级神兔",名称="超级神兔",类型="神兽",价格=0},
	-- {模型="超级泡泡",名称="超级泡泡",类型="神兽",价格=0},
	-- {模型="超级大熊猫",名称="超级大熊猫",类型="神兽",价格=0},
	-- {模型="超级金猴",名称="超级金猴",类型="神兽",价格=0},
	-- {模型="超级大象",名称="超级大象",类型="神兽",价格=0},
	-- {模型="超级灵鹿",名称="超级灵鹿",类型="神兽",价格=0},
	-- {模型="超级白泽",名称="超级白泽",类型="神兽",价格=0},
	-- {模型="超级赤焰兽",名称="超级赤焰兽",类型="神兽",价格=0},
	-- {模型="超级麒麟",名称="超级麒麟",类型="神兽",价格=0},
	-- {模型="超级大鹏",名称="超级大鹏",类型="神兽",价格=0},
	-- {模型="超级灵狐",名称="超级灵狐",类型="神兽",价格=0},
	-- {模型="超级孔雀",名称="超级孔雀",类型="神兽",价格=0},
	-- {模型="超级神马",名称="超级神马",类型="神兽",价格=0},
	-- {模型="超级六耳猕猴",名称="超级六耳猕猴",类型="神兽",价格=0},
	-- {模型="超级神羊",名称="超级神羊",类型="神兽",价格=0},
	-- {模型="超级土地公公",名称="超级土地公公",类型="神兽",价格=0},
	-- {模型="超级神猴",名称="超级神猴",类型="神兽",价格=0},
	-- {模型="超级玉兔",名称="超级玉兔",类型="神兽",价格=0},
	-- {模型="超级神鸡",名称="超级神鸡",类型="神兽",价格=0},
	-- {模型="超级筋斗云",名称="超级筋斗云",类型="神兽",价格=0},
	-- {模型="超级神蛇",名称="超级神蛇",类型="神兽",价格=0},
	-- {模型="超级神狗",名称="超级神狗",类型="神兽",价格=0},
	-- {模型="飞天",名称="飞天",类型="神兽",价格=0},
	-- {模型="超级神鼠",名称="超级神鼠",类型="神兽",价格=0},
	-- {模型="超级神猪",名称="超级神猪",类型="神兽",价格=0},
	-- {模型="超级小白龙",名称="超级小白龙",类型="神兽",价格=0},
	-- {模型="超级猪小戒",名称="超级猪小戒",类型="神兽",价格=0},

	-- }

	self.商品组[20]["法宝"]={}
	local 名称={"定风珠","雷兽","迷魂灯","幽灵珠","缚妖索","碧玉葫芦","五色旗盒","飞剑","拭剑石","金甲仙衣","惊魂铃","嗜血幡","风袋","九黎战鼓","盘龙壁","神行飞剑","汇灵盏","天师符","织女扇","清心咒"}
	for i=1,#名称 do
		table.insert(self.商品组[20]["法宝"], self:商城取法宝武神坛(名称[i],1))
	end
	--隐藏的法宝
	名称={"发瘟匣","五彩娃娃","金刚杵","兽王令","摄魂","附灵玉","降魔斗篷","聚妖铃","万鬼幡","捆仙绳","罗汉珠","番天印","断线木偶","赤焰","天煞","宝烛","分水","七杀","神木宝鼎"}
	for i=1,#名称 do
	 	table.insert(self.商品组[20]["法宝"], self:商城取法宝武神坛(名称[i],2))
	end
	名称={"失心钹","五火神焰印","九幽","普渡","月光宝盒","混元伞","苍白纸人","无魂傀儡","聚宝盆","乾坤玄火塔","无尘扇","干将莫邪","慈悲","救命毫毛","伏魔天书","镇海珠","奇门五行令","月影","鬼泣","七宝玲珑灯"}
	for i=1,#名称 do
		table.insert(self.商品组[20]["法宝"], self:商城取法宝武神坛(名称[i],3))
	end
	名称={"流影云笛","宿幕星河","蟠龙玉璧","落星飞鸿","归元圣印","千斗金樽"}
	for i=1,#名称 do
		table.insert(self.商品组[20]["法宝"], self:商城取法宝武神坛(名称[i],4))
	end


	self.商品组[19]["活跃兑换"]={
		{可叠加=true,名称="特赦令牌",价格=5000,"特赦令牌"},
		{可叠加=false,名称="召唤兽内丹",价格=15000},
		{可叠加=false,名称="高级召唤兽内丹",价格=30000},
		{可叠加=false,名称="高级魔兽要诀",价格=15000},
	}
end

function 商城处理类:商城取法宝(名称,等级)
  local 识别码=os.time().."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  local 法宝数据={}
  local 道具 = 取物品数据(名称)
  法宝数据.名称=名称
  法宝数据.总类=1000
  法宝数据.分类=道具[3]
  法宝数据.使用=道具[5]
  法宝数据.特技=道具[6]
  法宝数据.气血=0
  法宝数据.魔法=取灵气上限(道具[3])
  法宝数据.角色限制=道具[7] or 0
  法宝数据.五行=取五行()
  法宝数据.伤害=道具[8] or 0
  法宝数据.当前经验=0
  法宝数据.升级经验=法宝经验[法宝数据.分类][1]
  法宝数据.识别码=识别码
  法宝数据.价格=999999

  if 池定制 then
  	 法宝数据.价格=15000
  end
  return 法宝数据
end

function 商城处理类:商城取法宝武神坛(名称,等级)
  local 识别码=os.time().."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  local 法宝数据={}
  local 道具 = 取物品数据(名称)
  法宝数据.名称=名称
  法宝数据.总类=1000
  法宝数据.分类=道具[3]
  法宝数据.使用=道具[5]
  法宝数据.特技=道具[6]
  法宝数据.气血=0
  法宝数据.魔法=取灵气上限(道具[3])
  法宝数据.角色限制=道具[7] or 0
  法宝数据.五行=取五行()
  法宝数据.伤害=道具[8] or 0
  法宝数据.当前经验=0
  法宝数据.升级经验=法宝经验[法宝数据.分类][1]
  法宝数据.识别码=识别码
  法宝数据.价格=0
  return 法宝数据
end

function 商城处理类:数据处理(id,内容)
	self.允许购买 = true
	self.购买组号 = 内容.组号 + 0
	self.购买编号 = 内容.编号
	self.购买数量 = math.abs(math.floor(内容.数量))
	-- self.购买数量=1.2
	self.购买分类 = 内容.分类
	self.购买总量 = nil
	if id==nil or 内容==nil then
		--print(1111111111111)
		return 0
	end
	local 仙玉=f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","仙玉")+0
	local 点卡=f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡")+0
	local 银子=玩家数据[id].角色.数据.银子
	local 积分=玩家数据[id].角色.数据.比武积分.当前积分
	local 帮战积分=玩家数据[id].角色.数据.帮战积分
	local 当前活跃=玩家数据[id].角色.数据.累积活跃.当前活跃
	if self.购买数量 > 99 then
		发送数据(玩家数据[id].连接id, 7, "#y/您的购买的数量超过99个!")
		return 0
	end
		if self.购买数量 <= 0 then
		发送数据(玩家数据[id].连接id, 7, "#y/您的购买的数量小于0个!")
		return 0
	end
	if self.购买数量 == nil or self.购买分类== "宝宝" then
		self.购买数量 = 1
	elseif self.购买数量 == nil or (self.购买数量 ~= nil and self.购买数量 < 1) then
		self.购买数量 = 1
	elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
		self.购买总量 = math.abs(内容.数量)
		self.购买数量 = 1
	else
		self.购买数量 = self.购买数量 + 0
	end
	if math.floor(self.购买数量) ~= self.购买数量 then
		写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
	    发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
	    --__S服务:断开连接(玩家数据[id].连接id)
		return
	end
	local 购买价格 = self.商品组[self.购买组号][self.购买分类][self.购买编号].价格
	local 购买总价 = math.abs(self.商品组[self.购买组号][self.购买分类][self.购买编号].价格*(self.购买总量 or self.购买数量))
	--print(购买价格,购买总价)
	--获取我购买的价格 然后获取购买总价
	--------------摩托修改
	if math.floor(购买总价) ~= 购买总价 then
		写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
	    发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
	    --__S服务:断开连接(玩家数据[id].连接id)
		return
	end
	if self.购买分类== "宝宝" then  --类型如果是BB的话
		if #玩家数据[id].召唤兽.数据 >= 14 then  --大于数量不操作
			发送数据(玩家数据[id].连接id, 7, "#y/您当前无法携带更多的召唤兽了")
			self.允许购买 = false
			return 0
		elseif 仙玉 < 购买总价 then  --仙玉不足不操作
			发送数据(玩家数据[id].连接id, 7, "#y/您的仙玉不足")
			self.允许购买 = false
			return 0
		else   --扣除仙玉
			self:扣除仙玉(仙玉,购买价格,id)--这边已经加了仙玉了 负数的情况下
			玩家数据[id].召唤兽:添加召唤兽(self.商品组[self.购买组号][self.购买分类][self.购买编号].模型,nil,nil,true,0,内容.物法) --给了物品
		    发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买价格 .. "#Y/点仙玉购买了1个#R/" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
		end
		-- if 购买总价 <= 0 then --然后在给提示
		-- 	发送数据(玩家数据[id].连接id, 7, "#y/操你妈还想刷钱!")
		-- 	self.允许购买 = false
		-- 	return 0
		-- end


	elseif self.购买分类== "法宝" then
		if 仙玉 < 购买价格 then
			发送数据(玩家数据[id].连接id, 7, "#y/您的仙玉不足")
			self.允许购买 = false
		end
		-- if  购买总价 <= 0 then
		-- 发送数据(玩家数据[id].连接id, 7, "#y/操你妈还想刷钱!")
		-- self.允许购买 = false
		-- end
		if self.允许购买 then
			self:扣除仙玉(仙玉,购买价格,id)
			玩家数据[id].道具:给予法宝(id,self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
			发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买价格 .. "#Y/点仙玉购买了1个#R/" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
		end

		elseif self.购买分类 == "点卡商城" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			-- if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
			-- 				发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
			-- 	self.允许购买 = false
			-- 	return
			-- 	else
			--    self.允许购买 = true
			-- end
			if 点卡 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的点卡不足")
				self.允许购买 = false
				return
			end
			-- 			if  购买总价<= 0 then
			-- 	发送数据(玩家数据[id].连接id, 7, "#y/操你妈还想刷钱!")
			-- 	self.允许购买 = false
			-- 	return
			-- end
			if self.允许购买 then
				self:扣除仙玉(点卡,购买总价,id)
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "小额银票" then
				    玩家数据[id].角色:添加银子(100000000,"商城购买",1)
				    常规提示(id,"#Y/恭喜你从商城购买了#R/1亿两银子#Y/。")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "搏一搏" then
					if 玩家数据[id].角色.数据.抽奖积分==nil then
       				玩家数据[id].角色.数据.抽奖积分=0
    				end

							local 奖励参数=取随机数(1,16)
        					if 奖励参数<=1 then
         					local 名称="观照万象碎片"
         					local 数量=取随机数(1,10)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
        					elseif 奖励参数<=2 then
         					local 名称="扶摇万里碎片"
         					local 数量=取随机数(1,10)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=3 then
         					local 名称="贪狼令牌"
         					local 数量=取随机数(1,10)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
        				elseif 奖励参数<=4 then
          					local 名称="仙玉"
          					local 数量=取随机数(500,5000)
          					添加仙玉(数量,玩家数据[id].账号,id,"搏一搏")
          					--常规提示(id,"#Y/你获得了"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
         				elseif 奖励参数<=5 then
          					local 名称="点卡"
          					local 数量=取随机数(5,50)
          					添加点卡(数量,玩家数据[id].账号,id,"搏一搏")
          					--常规提示(id,"#Y/你获得了"..数量..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=6 then
         					local 名称="超级藏宝图"
         					local 数量=取随机数(1,1)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=7 then
         					local 名称="大额银票"
         					local 数量=取随机数(1,1)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=8 then
         					local 名称="小额银票"
         					local 数量=取随机数(1,1)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=9 then
         					local 名称="120-150级书铁"
    						玩家数据[id].道具:给予书铁(id,{12,15})
          					常规提示(id,"#Y/你获得了#G"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="hd"})
          				elseif 奖励参数<=10 then
         					local 名称="神兜兜"
         					local 数量=取随机数(5,20)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=11 then
         					local 名称="神兜兜"
         					local 数量=取随机数(5,20)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=12 then
          					local 名称="仙玉"
          					local 数量=取随机数(50,1000)
          					添加仙玉(数量,玩家数据[id].账号,id,"搏一搏")
          					--常规提示(id,"#Y/你获得了"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=13 then
          					local 名称="点卡"
          					local 数量=取随机数(5,20)
          					添加点卡(数量,玩家数据[id].账号,id,"搏一搏")
          					--常规提示(id,"#Y/你获得了"..数量..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=14 then
          					local 名称="点卡"
          					local 数量=取随机数(5,10)
          					添加点卡(数量,玩家数据[id].账号,id,"搏一搏")
          					--常规提示(id,"#Y/你获得了"..数量..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=15 then
          					local 名称="银子"
          					local 数量=取随机数(5000000,10000000)
          					玩家数据[id].角色:添加银子(数量,"搏一搏",1)
          					--常规提示(id,"#Y/你获得了"..数量..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})
          				elseif 奖励参数<=16 then
         					local 名称="附魔宝珠"
         					local 数量=取随机数(5,20)
          					玩家数据[id].道具:给予道具(id,名称,数量)
          					常规提示(id,"#Y/你获得了#G/"..数量.."个"..名称)
          					广播消息({内容=format("#S(搏一搏)#R/%s#Y运气爆棚，在 #R/抽奖活动#Y/ 中获得了#G/%s个%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,数量,名称),频道="hd"})




  						end
  						玩家数据[id].角色.数据.抽奖积分=玩家数据[id].角色.数据.抽奖积分+1
    					local aa=玩家数据[id].角色.数据.抽奖积分
    					常规提示(id,"你的抽奖积分增加了1点,目前剩余积分:"..aa)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "大额银票" then
					玩家数据[id].角色:添加银子(200000000,"商城购买",1)
					常规提示(id,"#Y/恭喜你从商城购买了#R/两亿两银子#Y/。")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{5,6},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机制造指南书" then
					玩家数据[id].道具:给予书铁(id,{5,6},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,9},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "150级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{15,15},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,10},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,10},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石1级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",1)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石2级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",2)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石3级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",3)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的星石" then
					玩家数据[id].道具:给予道具(id,"未激活的星石",1)
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))--复制物品(self.商品组[self.购买组号][self.购买分类][self.购买编号])--
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].总类 == 1001 then
						玩家数据[id].道具.数据[self.道具编号].不可交易=true
						玩家数据[id].道具.数据[self.道具编号].专用=true
					end
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].总类 == "祥瑞" then
					    if 玩家数据[id].角色.数据.坐骑列表~= nil and #玩家数据[id].角色.数据.坐骑列表==7 then
					      常规提示(id,"#Y/购买[#R/"..self.商品组[self.购买组号][self.购买分类][self.购买编号].名称.."#Y/]坐骑失败!携带坐骑数量已上限.")
					      return false
					    else
					      常规提示(id,"#Y/恭喜你购买了[#R/"..self.商品组[self.购买组号][self.购买分类][self.购买编号].名称.."#Y/]坐骑!")
					      全局坐骑资料:获取坐骑(id,self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
					      发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
					    end
					else
						玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "点化石" then
					玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀点化()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "点化石善恶" then
					玩家数据[id].道具.数据[self.道具编号].附带技能="善恶有报"
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "赌一赌观照万象" then
					if 取随机数()<=1 then
					玩家数据[id].道具.数据[self.道具编号].附带技能=观照万象()
					发送数据(玩家数据[id].连接id, 7, "#y/您获得了1本#R/观照万象")
					广播消息({内容=format("#Y/%s#W/在赌一赌观照万象活动中获得了一本#R/观照万象！#35",玩家数据[id].角色.数据.名称),频道="xt"})
					else
					local xx = 神兽要诀()
					玩家数据[id].道具.数据[self.道具编号].附带技能=xx
					发送数据(玩家数据[id].连接id, 7, "#y/您获得了1本#R/"..xx)
					广播消息({内容=format("#Y/%s#W/在 #C/赌一赌观照万象 #W/活动中获得了一本#R/ %s！#35",玩家数据[id].角色.数据.名称,xx),频道="cw"})
					end

						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
							玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "神兽兽决" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=神兽要诀()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
						 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
						elseif 玩家数据[id].道具.数据[self.道具编号].总类 == "坐骑饰品" then
							local 坐骑饰品 = 取物品数据(玩家数据[id].道具.数据[self.道具编号].名称)
							玩家数据[id].道具.数据[self.道具编号].子类=坐骑饰品[4]


					end
				end
			end
		end
		end
		if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称== "搏一搏" then

			else
			发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点卡购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
			end




	elseif self.购买分类 == "杂货" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
			end
			if  银子 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的银子不足")
				self.允许购买 = false
			end
			--  if  购买总价 <= 0 then
			-- 	发送数据(玩家数据[id].连接id, 7, "#y/操你妈还想刷钱!")
			-- 	self.允许购买 = false
			-- end
			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色:扣除银子(购买总价,0,0,"商店购买",1)
				else
					玩家数据[id].角色:扣除银子(购买价格,0,0,"商店购买",1)
				end
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,9},"指南书")




				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					-- if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					--  	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "神兽兽决" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=神兽要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "赌一赌观照万象" then
					if 取随机数()<=1 then
					玩家数据[id].道具.数据[self.道具编号].附带技能=观照万象()
					else
					玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					end
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				end
			end
		end
		if self.允许购买 then
			发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/两银子购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
		end
	elseif self.购买分类 == "比武积分" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
			end
			if  积分 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的积分不足")
				self.允许购买 = false
			end
			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色:扣除积分(购买总价,0,0,"积分商城",1)
				else
					玩家数据[id].角色:扣除积分(购买价格,0,0,"积分商城",1)
				end
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{7,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机制造指南书" then
					玩家数据[id].道具:给予书铁(id,{7,9},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "150级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{15,15},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100-140灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100-140元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120-140百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{12,14},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120-140制造指南书" then
					玩家数据[id].道具:给予书铁(id,{12,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{14,14},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140制造指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,9},"指南书")

				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
							玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "神兽兽决" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=神兽要诀()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
						 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				 end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点积分购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
	elseif self.购买分类=="活跃兑换" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
							发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
				self.允许购买 = false
				return
				else
			self.允许购买 = true
			end
			if  玩家数据[玩家数据[id].连接id].角色.数据.累积活跃.当前积分 < 购买总价 then
				--print(玩家数据[玩家数据[id].连接id].角色.数据.累积活跃.当前积分)
				发送数据(玩家数据[id].连接id, 7, "#y/您的可用活跃不足")
				self.允许购买 = false
			end
			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色:扣除活跃(购买总价,"活跃兑换",1)
				else
					玩家数据[id].角色:扣除活跃(购买价格,0,0,"活跃兑换",1)
				end
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10})
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点可用活跃购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
		elseif self.购买分类=="妖魔积分" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
							发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
				self.允许购买 = false
				return
				else
			self.允许购买 = true
			end
			if 妖魔积分[id]==nil then
               妖魔积分[id]={当前=0,总计=0,使用=0}
            end

			if  妖魔积分[id].当前 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的可用妖魔积分不足")
				self.允许购买 = false
				return
			end
			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色:扣除妖魔积分(购买总价,"妖魔积分",1)
				else
					玩家数据[id].角色:扣除妖魔积分(购买价格,0,0,"妖魔积分",1)
				end
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10})
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点可用妖魔积分购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)


    elseif self.购买分类=="副本积分" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
							发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
				self.允许购买 = false
				return
				else
			self.允许购买 = true
			end


			if  玩家数据[id].角色.数据.副本积分 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的可用副本积分不足")
				self.允许购买 = false
				return
			end

			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色.数据.副本积分=玩家数据[id].角色.数据.副本积分-购买总价
				else
					玩家数据[id].角色.数据.副本积分=玩家数据[id].角色.数据.副本积分-购买价格
				end


				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10})
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点可用副本积分购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)


    elseif self.购买分类=="种族积分" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
							发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
				self.允许购买 = false
				return
				else
			self.允许购买 = true
			end


			if  玩家数据[id].角色.数据.种族积分 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的可用种族积分不足")
				self.允许购买 = false
				return
			end

			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色.数据.种族积分=玩家数据[id].角色.数据.种族积分-购买总价
				else
					玩家数据[id].角色.数据.种族积分=玩家数据[id].角色.数据.种族积分-购买价格
				end


				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "80级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10})
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点可用种族积分购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)





    elseif self.购买分类 == "帮战积分" then
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
			end
			if  帮战积分 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的帮战积分不足")
				self.允许购买 = false
			end
			if self.允许购买 then
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
				    玩家数据[id].角色:扣除帮战积分(购买总价,"帮战积分商城",1)
				else
					玩家数据[id].角色:扣除帮战积分(购买价格,0,0,"帮战积分商城",1)
				end
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{7,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机制造指南书" then
					玩家数据[id].道具:给予书铁(id,{7,9},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "150级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{15,15},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100-140灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{10,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "100-140元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{10,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120-140百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{12,14},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120-140制造指南书" then
					玩家数据[id].道具:给予书铁(id,{12,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14,14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{14,14},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140制造指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,9},"指南书")

				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
							玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "神兽兽决" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=神兽要诀()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
						 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
					end
				 end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点帮战积分购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)


	else
		for n = 1, self.购买数量 do
			self.临时格子 = 玩家数据[id].角色:取道具格子()
			if self.临时格子 == 0 then
				发送数据(玩家数据[id].连接id, 7, "#y/您身上似乎没有多余的道具存放空间")
				self.允许购买 = false
				return
			end
			if  self.购买数量 >1  and  self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 ~= nil then
							发送数据(玩家数据[id].连接id, 7, "#y/贵重物品每次买一个")
				self.允许购买 = false
				return
				else
			self.允许购买 = true
			end
			if 仙玉 < 购买总价 then
				发送数据(玩家数据[id].连接id, 7, "#y/您的仙玉不足")
				self.允许购买 = false
				return
			end
			-- 			if  购买总价<= 0 then
			-- 	发送数据(玩家数据[id].连接id, 7, "#y/操你妈还想刷钱!")
			-- 	self.允许购买 = false
			-- 	return
			-- end
			if self.允许购买 then
				self:扣除仙玉(仙玉,购买总价,id)
				if self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "小额银票" then
				    玩家数据[id].角色:添加银子(100000000,"商城购买",1)
				    常规提示(id,"#Y/恭喜你从商城购买了#R/1亿两银子#Y/。")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "大额银票" then
					玩家数据[id].角色:添加银子(200000000,"商城购买",1)
					常规提示(id,"#Y/恭喜你从商城购买了#R/两亿两银子#Y/。")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-80元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{5,6},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "随机制造指南书" then
					玩家数据[id].道具:给予书铁(id,{5,6},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,9},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-90制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,9},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机灵饰指南书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "120级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{12})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级元灵晶石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{14})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "140级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "150级随机指南书" then
					玩家数据[id].道具:给予书铁(id,{15,15},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100灵饰书" then
					玩家数据[id].道具:给予道具(id,"灵饰指南书",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100元灵石" then
					玩家数据[id].道具:给予道具(id,"元灵晶石",{6,8,10})
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100百炼精铁" then
					玩家数据[id].道具:给予书铁(id,{6,10},"精铁")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "60-100制造指南书" then
					玩家数据[id].道具:给予书铁(id,{6,10},"指南书")
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石1级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",1)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石2级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",2)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的符石3级" then
					玩家数据[id].道具:给予道具(id,"未激活的符石",3)
				elseif self.商品组[self.购买组号][self.购买分类][self.购买编号].名称 == "未激活的星石" then
					玩家数据[id].道具:给予道具(id,"未激活的星石",1)
				else
					self.道具编号 = 玩家数据[id].道具:取新编号()
					玩家数据[id].道具.数据[self.道具编号] = table.loadstring(table.tostring(self.商品组[self.购买组号][self.购买分类][self.购买编号]))--复制物品(self.商品组[self.购买组号][self.购买分类][self.购买编号])--
					玩家数据[id].道具.数据[self.道具编号].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].可叠加 then
					    玩家数据[id].道具.数据[self.道具编号].数量=self.购买总量
					end
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].总类 == 1001 then
						玩家数据[id].道具.数据[self.道具编号].不可交易=true
						玩家数据[id].道具.数据[self.道具编号].专用=true
					end
					if self.商品组[self.购买组号][self.购买分类][self.购买编号].总类 == "祥瑞" then
					    if 玩家数据[id].角色.数据.坐骑列表~= nil and #玩家数据[id].角色.数据.坐骑列表==7 then
					      常规提示(id,"#Y/购买[#R/"..self.商品组[self.购买组号][self.购买分类][self.购买编号].名称.."#Y/]坐骑失败!携带坐骑数量已上限.")
					      return false
					    else
					      常规提示(id,"#Y/恭喜你购买了[#R/"..self.商品组[self.购买组号][self.购买分类][self.购买编号].名称.."#Y/]坐骑!")
					      全局坐骑资料:获取坐骑(id,self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
					      发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
					    end
					else
						玩家数据[id].角色.数据.道具[self.临时格子]=self.道具编号
					if 玩家数据[id].道具.数据[self.道具编号].名称 == "高级魔兽要诀" then--可以参考 道具处理类:给予道具 函数
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "点化石" then
					玩家数据[id].道具.数据[self.道具编号].附带技能=取高级要诀点化()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "点化石善恶" then
					玩家数据[id].道具.数据[self.道具编号].附带技能="善恶有报"
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "特殊魔兽要诀" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=取特殊要诀10()
					elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "赌一赌观照万象" then
					if 取随机数()<=1 then
					玩家数据[id].道具.数据[self.道具编号].附带技能=观照万象()
					else
					玩家数据[id].道具.数据[self.道具编号].附带技能=取低级要诀()
					end
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "召唤兽内丹" then
							玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "神兽兽决" then
					 	玩家数据[id].道具.数据[self.道具编号].附带技能=神兽要诀()
						elseif 玩家数据[id].道具.数据[self.道具编号].名称 == "高级召唤兽内丹" then
						 	玩家数据[id].道具.数据[self.道具编号].附带技能=取内丹("高级")
						elseif 玩家数据[id].道具.数据[self.道具编号].总类 == "坐骑饰品" then
							local 坐骑饰品 = 取物品数据(玩家数据[id].道具.数据[self.道具编号].名称)
							玩家数据[id].道具.数据[self.道具编号].子类=坐骑饰品[4]
						end
					end
				end
			end
		end
		发送数据(玩家数据[id].连接id, 7, "#y/您花费了#R/" .. 购买总价 .. "#Y/点仙玉购买了#R/"..math.abs(内容.数量).."个" .. self.商品组[self.购买组号][self.购买分类][self.购买编号].名称)
	end
end

function 内存加密(内容)
	return 内容
end

function 商城处理类:扣除仙玉(仙玉,扣除价格,id)
   仙玉=仙玉-扣除价格
   f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","仙玉",仙玉)
end

function 商城处理类:扣除仙玉(仙玉,扣除价格,id)
	local 点卡=f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡")+0
   点卡1=点卡-扣除价格
   f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡",点卡1)
end


function 商城处理类:取商品组数据(id, 序号,积分商城)
	self.发送消息 = {}
	序号 = 序号 + 0
	local 妖魔兑换积分=0
	local 副本积分=0
	local 种族积分=0
	local 累积活跃=0
	local 当前活跃=0
	if 玩家数据[id].角色.数据.副本积分~=nil then
	    副本积分=玩家数据[id].角色.数据.副本积分
	end
	if 妖魔积分~=nil and 妖魔积分[id]~=nil then
		妖魔兑换积分=妖魔积分[id].当前
	end
	if 玩家数据[id].角色.数据.种族积分 == nil then
	   玩家数据[id].角色.数据.种族积分=0
	end
	if 玩家数据[id].角色.数据.累积活跃~=nil then
	    累积活跃=玩家数据[id].角色.数据.累积活跃.总积分
	    当前活跃=玩家数据[id].角色.数据.累积活跃.当前积分
	end
	if 玩家数据[id].账号==nil or id==nil or 序号==nil or self.商品组[序号]==nil then
		--print(1111111111111)
		return 0
	end

	self.商品组[序号].银子 = 玩家数据[id].角色.数据.银子
	self.商品组[序号].积分数 = {帮战积分=玩家数据[id].角色.数据.帮战积分,比武积分=玩家数据[id].角色.数据.比武积分.当前积分,种族积分=玩家数据[id].角色.数据.种族积分,副本积分=副本积分,妖魔积分=妖魔兑换积分,累积活跃=累积活跃,当前活跃=当前活跃}
	self.商品组[序号].组号 = 序号
	self.商品组[序号].仙灵玉 = f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","仙玉")+0
	self.商品组[序号].点卡 = f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡")+0
	if 积分商城~=nil then
	    self.商品组[序号].序列=2
	elseif 点卡商城~=nil then
	    self.商品组[序号].序列=3
	else
		self.商品组[序号].序列=1
	end
	if 序号==18 then
		发送数据(玩家数据[id].连接id, 3700, self.商品组[序号])
	elseif 序号==19 then
		发送数据(玩家数据[id].连接id, 3701, self.商品组[序号])
	elseif 序号==20 then--武神坛商城
		发送数据(玩家数据[id].连接id, 3700.1, self.商品组[序号])
	end

end
function 商城处理类:更新(dt) end
function 商城处理类:显示(x, y) end

return 商城处理类
