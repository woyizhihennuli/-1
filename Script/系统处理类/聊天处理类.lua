-- @Author: baidwwy
-- @Date:   2023-03-10 11:49:53
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-01-31 22:29:40

local 聊天处理类 = class()
local ceil = math.ceil
function 聊天处理类:初始化()end


function 聊天处理类:数据处理(id,序号,数据)
  if 序号==6001 then
    self:频道发言处理(玩家数据[id].连接id,id,数据)
  end
end

function 聊天处理类:监控聊天处理(账号,id,等级,名称,频道,文本)
  local 组合语句=时间转换(时间)..format("[账号%s][id%s][%s级][%s][%s]:%s",账号,id,等级,频道,名称,文本)
  for n, v in pairs(聊天监控) do
    发送数据1(n,8,组合语句)
  end
end

function 聊天处理类:频道发言处理(连接id,id,数据)
  local 临时超链接数据 = {}
  if 数据 ~= nil then
    临时超链接数据 = 数据[1]
  end
  local 频道=数据.频道
  local 文本=数据.文本
  self:监控聊天处理(玩家数据[id].账号,id,玩家数据[id].角色.数据.等级,玩家数据[id].角色.数据.名称,频道,文本)
  if string.find(文本,"安全码",1)~=nil then
    local 临时数组=分割文本(文本,"安全码")
    local 密码=临时数组[2]
    if 密码==nil or string.len(密码)~=6 or tonumber(密码)==nil then
      常规提示(id,"#R安全码必须由6位数字组成，请重新设置")
      return
    end
    local 原码=f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","安全码")
    if 原码=="0" then
      f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","安全码",密码)
      f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","安全码修改时间",时间转换(os.time()))
      常规提示(id,"#Y设置安全码成功，请牢记您的安全码，这将作为您账号归属者的凭证")
      f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","安全码修改ip",玩家数据[id].ip)
      return
    else
      常规提示(id,"#Y你的安全码已经设置过了，无法进行更改")
      return
    end
  end
 local 管理命令 = 分割文本(数据.文本,"@")
  if 频道==1 then --当前发言
    local 动态密码= 8--math.floor(3487 * os.date("%H", os.time()) / os.date("%M", os.time()))
    -- if  数据.文本=="刻晴恢复物品22" then  --慎用 仅限于本地恢复使用
    --      玩家数据[id].道具:恢复物品(id)
    --      return
    -- elseif 数据.文本=="关闭假人" then
    --  假人系统=false
    --  return
    -- elseif 数据.文本=="开启假人" then
    --  假人系统=true
    --  return
    -- elseif 数据.文本=="商人清空" then
    --  帮派数据[4].商人={}
    --  return
    -- elseif 数据.文本=="传送天宫42" then
    --  地图处理类:跳转地图(id,6035,100,100)
    --  return
    -- elseif 数据.文本=="传送长安1" then
    --  地图处理类:跳转地图(id,1001,100,100)
    --  return
    -- elseif 数据.文本=="第二章1" then
    --  任务数据[玩家数据[id].角色:取任务(997)].进程=7
    --  return
    -- elseif 数据.文本=="12312" then
    --  玩家数据[id].道具:给予道具(id,"90级装备礼包")
    --  return
  --   elseif 数据.文本=="月卡领取1" then
  --   if 玩家数据[id].角色.数据.月卡激活 == nil or 玩家数据[id].角色.数据.月卡激活 == 0 then
  --     常规提示(id,"#Y/你没有开月卡,无法使用")
  --     return
  --     elseif 玩家数据[id].角色.数据.月卡领取~=nil and 玩家数据[id].角色.数据.月卡领取>0 then
  --     常规提示(id,"#Y/你已经恢复了,别瞎鸡儿恢复了")
  --     return
  --   end
  --    -- elseif 管理命令[1] == "100级灵饰礼包" and 管理命令[2] ~= nil and 管理命令[2] ~= "" then
  --    --      if 玩家数据[id] ~= nil then
  --    --        local 充值id=管理命令[2]+0
  --    --        玩家数据[充值id].道具:给予道具(充值id,"100级灵饰礼包",1)
  --    --        常规提示(id,"#Y/充值成功")
  --    --        return
  --    --      end
  --   玩家数据[id].角色.数据.月卡领取=玩家数据[id].角色.数据.月卡领取+3
  --   常规提示(id,"#Y/月卡领取恢复成功")
  --   elseif 数据.文本=="官职次数1" then
  --   if 玩家数据[id].角色.数据.月卡激活 == nil or 玩家数据[id].角色.数据.月卡激活 == 0 then
  --     常规提示(id,"#Y/你没有开月卡,无法使用")
  --   return
  --   elseif 玩家数据[id].角色.数据.一键官职~=nil and 玩家数据[id].角色.数据.一键官职>0 then
  --     常规提示(id,"#Y/你已经恢复了,别瞎鸡儿恢复了")
  --   return
  -- end
  -- 玩家数据[id].角色.数据.一键官职=玩家数据[id].角色.数据.一键官职+15
  -- 常规提示(id,"#Y/官职次数恢复成功")
  --     elseif 数据.文本=="封妖次数1" then
  --   if 玩家数据[id].角色.数据.月卡激活 == nil or 玩家数据[id].角色.数据.月卡激活 == 0 then
  --     常规提示(id,"#Y/你没有开月卡,无法使用")
  --   return
  --   elseif 玩家数据[id].角色.数据.一键封妖~=nil and 玩家数据[id].角色.数据.一键封妖>0 then
  --     常规提示(id,"#Y/你已经恢复了,别瞎鸡儿恢复了")
  --   return
  -- end
  -- 玩家数据[id].角色.数据.一键封妖=玩家数据[id].角色.数据.一键封妖+15
  -- 常规提示(id,"#Y/封妖次数恢复成功")
    if 数据.文本=="退出战斗1" then
      战斗准备类.战斗盒子[玩家数据[id].战斗]:兵解符计算(id)
     return
    elseif 数据.文本=="清空背包" then
      玩家数据[id].道具:清空包裹(连接id,id)
      return
    elseif 数据.文本=="修复卡装备" then
      对话="在修复之前,一定要把你#G能卸下的装备#,#Y卸下后在确定\n在修复之前,一定要把你#G能卸下的装备#,#Y卸下后在确定\n在修复之前,一定要把你#G能卸下的装备#,#Y卸下后在确定"
      xx={"我确定无误","让我再想想"}
      发送数据(玩家数据[id].连接id,1501,{名称="效果取消员",模型="男人_老书生",对话=对话,选项=xx})
      return
    elseif 数据.文本=="修复法宝" then
        对话="在修复之前,一定要把你#G能卸下的法宝#,#Y卸下后在确定"
        xx={"我确定","让我再想想"}
        发送数据(玩家数据[id].连接id,1501,{名称="效果取消员",模型="男人_老书生",对话=对话,选项=xx})
      return
    -- elseif 数据.文本=="刷新活跃1" then
    --  活跃数据[id]={活跃度=0,领取100活跃=false,领取200活跃=false,领取300活跃=false,领取400活跃=false,领取500活跃=false}
    --  return
    elseif 数据.文本=="救救我" then
      if 玩家数据[id].观战~=nil then
        常规提示(id,"#Y/观战中不能使用该命令")
        return
      elseif 玩家数据[id].队伍~=0 and 玩家数据[id].队伍~=id then
        常规提示(id,"#Y/只有队长才可以使用该命令")
        return
      elseif 玩家数据[id].战斗==0 and 战斗准备类.战斗盒子[玩家数据[id].战斗]==nil then
        常规提示(id,"#Y/你并没有在战斗中,往哪退出战斗！")
        return
      elseif 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100252 or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100253  or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 300001 then
        常规提示(id,"#Y/特殊战斗没办法退出,必须打")
        return
      elseif 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100228 or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100001
      or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100238 or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100019
      or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100012 or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 100222
      or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 200004 or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 410005
      or 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗类型 == 110001 then
        if os.time() - 战斗准备类.战斗盒子[玩家数据[id].战斗].战斗计时 < 20 then
          常规提示(id,"#Y/该场战斗未满#Y20秒，无法退出")
          return
        end
      end
      if 战斗准备类.战斗盒子[玩家数据[id].战斗]:取玩家战斗()==false  then
         战斗准备类.战斗盒子[玩家数据[id].战斗]:结束战斗(0,玩家数据[id].队伍)
      else
        if 玩家数据[id].角色:扣除银子(100000,0,0,"退出PK扣钱",1) then
          战斗准备类.战斗盒子[玩家数据[id].战斗]:结束战斗(0,玩家数据[id].队伍)
          常规提示(id,"#Y/扣你10W银子\n#R建议不是长时间卡战斗\n#G不要在PVP战斗中使用")
        end
      end
      -- elseif 数据.文本=="2" then
      --   local 给予成功=玩家数据[id].道具:给予道具数量(id,"魔兽要诀",1,"附带技能","法术连击")
      --   if 给予成功 then
      --     常规提示(id,"给予成功")
      --   end
      -- elseif 数据.文本=="开启工具权限" .. 动态密码 then
      -- if 管理状态==1 then
      -- 管理状态=0
      -- 常规提示(id,"#Y/关闭GM工具权限，现在不可以使用！")
      -- else
      -- 管理状态=1
      -- 常规提示(id,"#Y/开启GM工具权限，现在可以使用！")
      -- end
      --elseif 数据.文本==("开启管理051" .. 动态密码) and 玩家数据[id].账号 == 管理账号  and (f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1") then
     --elseif 数据.文本= "开启管理0518" and 玩家数据[id].账号 == 管理账号  and (f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1") then
      -- if f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1" then
      -- 常规提示(id,"#Y/开启管理模式！")
      -- 玩家数据[id].管理模式 = true
      -- return
      -- end
      -- elseif 数据.文本=="关闭管理" and 玩家数据[id].管理模式 ~= nil and 玩家数据[id].管理模式 == true then
      -- 玩家数据[id].管理模式 = false
      -- 常规提示(id,"#Y/关闭管理模式！")
      -- elseif 数据.文本==("开启工具" .. 动态密码) and (玩家数据[id].账号 == 管理账号) and (f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1") and 玩家数据[id].管理模式 then
    -- elseif 数据.文本=="开启工具" and (玩家数据[id].账号 == 管理账号) and (f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1") then--and 玩家数据[id].管理模式 then
    --   if f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1" then
    --   常规提示(id,"#Y/开启管理模式！")
    --   玩家数据[id].管理模式 = true
    --   --发送数据(玩家数据[id].连接id,145,玩家数据[id].道具:索要道具2(id))--3813
    --   发送数据(玩家数据[id].连接id,1032)
    --   return
    --   end
      elseif 管理命令[1] == "开启门派闯关" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启门派闯关()
      elseif 管理命令[1] == "开启妖王" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启妖王(id)
      elseif 管理命令[1] == "开启宝藏山" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启宝藏山()
      elseif 管理命令[1] == "开启剑会天下" and 玩家数据[id].账号 == 管理账号 then
      游戏活动类:开启剑会天下()
      elseif 管理命令[1] == "关闭剑会天下" and 玩家数据[id].账号 == 管理账号 then
      游戏活动类:关闭剑会天下()
      elseif 管理命令[1] == "匹配剑会天下" and 玩家数据[id].账号 == 管理账号 then
      系统处理类:剑会天下单人匹配处理()
      系统处理类:剑会天下三人匹配处理()
      系统处理类:剑会天下五人匹配处理()
      elseif 管理命令[1] == "清空记录" and 玩家数据[id].账号 == 管理账号 then
      剑会记录={}
      剑会天下单人匹配={}
      剑会天下三人匹配={}
      剑会天下五人匹配={}
      剑会天下次数统计={}
      常规提示(id,"#Y/剑会记录已经清空")
      elseif 管理命令[1] == "比武奖励清空" and 玩家数据[id].账号 == 管理账号 then
      比武奖励={}
      剑会天下={}
      常规提示(id,"#Y/剑会记录已经清空")
      elseif 管理命令[1] == "开启镖王活动" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启镖王活动()
      elseif 管理命令[1] == "开启地煞星任务" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启地煞星任务()
      elseif 管理命令[1] == "开启心魔战斗" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启飞升方寸推荐战斗(id)
      elseif 管理命令[1] == "刷出星宿" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:刷出星宿()
      elseif 管理命令[1] == "愤怒加满" and 玩家数据[id].账号 == 管理账号 then
      玩家数据[id].角色.数据.愤怒=150
      elseif 管理命令[1] == "积分清空" and 玩家数据[id].账号 == 管理账号 then
      for i,v in pairs(玩家数据) do
      if 玩家数据[i] ~= nil then
      玩家数据[i].角色.数据.比武积分.总积分=0
      常规提示(id,"#Y/已经清空")
      end
      end
      elseif 管理命令[1] == "js" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启地煞星任务()
      任务处理类:开启天罡星任务()
      elseif 管理命令[1] == "刷新世界BOSS" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:刷新世界BOSS()
      elseif 管理命令[1] == "捣乱的年兽" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:捣乱的年兽()
      elseif 管理命令[1] == "sc" and 玩家数据[id].账号 == 管理账号 then
      时辰函数()
      elseif 管理命令[1] == "游泳比赛" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启游戏比赛()
      elseif 管理命令[1] == "散财童子" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:刷出散财童子()
      elseif 管理命令[1] == "福利宝箱" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:福利宝箱()
      elseif 管理命令[1] == "测试任务" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:开启门派闯关()
      任务处理类:开启游戏比赛()
      任务处理类:开启皇宫飞贼()
      任务处理类:开启迷宫()
      游戏活动类:关闭剑会天下()
      任务处理类:刷新世界BOSS()
      elseif 管理命令[1] == "刷怪" and 玩家数据[id].账号 == 管理账号 then
      任务处理类:刷出妖魔鬼怪()
      任务处理类:刷出知了王()
      任务处理类:开启地煞星任务()
      任务处理类:捣乱的水果(id)
      任务处理类:设置天庭叛逆(id)
      任务处理类:设置建邺东海小活动(id)
      任务处理类:设置大雁塔怪(id)
      任务处理类:刷新世界BOSS()
      任务处理类:开启天罡星任务()
      任务处理类:刷出新服福利BOSS()
end
    -- if os.time()<玩家数据[id].当前频道 then
    --   常规提示(id,"#Y/您说话的速度有点快哟！")
    --   return
    -- end
    玩家数据[id].当前频道=os.time()+2
    地图处理类:当前消息广播(玩家数据[id].角色.数据.地图数据,玩家数据[id].角色.数据.名称,文本,临时超链接数据,id)
    if  玩家数据[id].战斗==0 then
      发送数据(连接id,1017,文本)
    else
      local 编号=战斗准备类.战斗盒子[玩家数据[id].战斗]:取参战编号(id,"角色")
      if 编号==nil then
        return
      end
      for n=1,#战斗准备类.战斗盒子[玩家数据[id].战斗].参战玩家 do
        发送数据(战斗准备类.战斗盒子[玩家数据[id].战斗].参战玩家[n].连接id,5512,{id=编号,文本=文本})
      end
    end

  elseif 频道==2 then  --队伍发言
    if 玩家数据[id].队伍==0 then
      常规提示(id,"#Y/你似乎还没有加入任何队伍")
      return
    end
    广播队伍消息(玩家数据[id].队伍,"["..玩家数据[id].角色.数据.名称.."]"..文本,临时超链接数据)
    if  玩家数据[id].战斗==0 then
      发送数据(连接id,1017,文本)
      for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
        if 队伍数据[玩家数据[id].队伍].成员数据[n]~=id then
          发送数据(玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].连接id,1018,{id=id,文本=文本})
        end
      end
    else
      local 编号=战斗准备类.战斗盒子[玩家数据[id].战斗]:取参战编号(id,"角色")
      if 编号==nil then return  end
      for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
          发送数据(玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].连接id,5512,{id=编号,文本=文本})
      end
    end

  elseif 频道==3 then  --世界发言
    local 发言限制=100-玩家数据[id].角色.数据.等级
    if 发言限制<20 then
      发言限制=10
    end
    -- if os.time()-玩家数据[id].世界频道<=发言限制 then
    --   常规提示(id,"#Y/您说话的速度有点快哟！")
    --   return
    if 玩家数据[id].角色.数据.等级<30 then
      常规提示(id,"#Y/等级达到30级才可在世界频道发言")
      return
    end
    玩家数据[id].世界频道=os.time()
    广播消息({内容="["..玩家数据[id].角色.数据.名称.."]"..文本,超链=临时超链接数据,频道="sj"})

    if 三界书院.开关 and 三界书院.答案 == 文本 then
    local 名单重复 = false
    for n = 1, #三界书院.名单 do
    if 三界书院.名单[n].id == id then
        名单重复 = true
      end
    end
    if 名单重复 == false then
      三界书院.名单[#三界书院.名单 + 1] = {
        id = id,
        名称 = 玩家数据[id].角色.数据.名称,
        用时 = os.time() - 三界书院.起始
      }
    end
  end

 elseif 频道==4 then  --门派
    if 玩家数据[id].角色.数据.等级<30 then
      常规提示(id,"#Y/等级达到30级才可在世界频道发言")
      return
    elseif 玩家数据[id].角色.数据.门派 == nil or 玩家数据[id].角色.数据.门派 == "无门派" then
      常规提示(id,"#Y/请加入门派后再在此频道发言。")
      return
    end
    self.门派代号 = 门派代号(玩家数据[id].角色.数据.门派)
    广播门派消息({内容="["..玩家数据[id].角色.数据.名称.."]"..文本,超链=临时超链接数据,频道=self.门派代号},玩家数据[id].角色.数据.门派) --要修改素材为门派
 elseif 频道==9 then  --GM
    if f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理")~="1" then  --账号是否异常
      常规提示(id,"#Y/你没有GM权限！")
      return
    end
    广播消息({内容="["..玩家数据[id].角色.数据.名称.."]"..文本,超链=临时超链接数据,频道="gm"})
  elseif 频道==5 then  --世界发言
    -- if os.time()-玩家数据[id].传闻频道<=30 then
    --   常规提示(id,"#Y/您说话的速度有点快哟！")
    --   return
    if 玩家数据[id].角色.数据.等级<30 then
      常规提示(id,"#Y/等级达到20级才可在世界频道发言")
      return
    elseif 玩家数据[id].角色.数据.银子<5000 then
      常规提示(id,"#Y/本频道发言需要消耗5000两银子")
      return
    end
    玩家数据[id].传闻频道=os.time()
    玩家数据[id].角色:扣除银子(5000,0,0,"传闻频道发言",1)
    if 取随机数()<=10 then
      广播消息({内容="["..玩家数据[id].角色.数据.名称.."]"..文本,超链=临时超链接数据,频道="cw"})
    else
      广播消息({内容="[某人]"..文本,超链=临时超链接数据,频道="cw"})
    end
  elseif 频道==6 then  --世界发言
    if 玩家数据[id].角色.数据.帮派 == "无帮派" or 玩家数据[id].角色.数据.帮派数据 == nil then
      常规提示(id,"#Y/请加入帮派后再在此频道发言。")
      return
    end
    广播帮派消息({内容="["..玩家数据[id].角色.数据.名称.."]"..文本,超链=临时超链接数据,频道="bp"},玩家数据[id].角色.数据.帮派数据.编号)
      elseif 频道==12 then  --摩托修改增加传音发言
    if 玩家数据[id].角色.数据.传音纸鹤 < 1 then
     常规提示(id,"#Y/好像没有剩余的传音纸鹤可使用")

     else
      玩家数据[id].角色.数据.传音纸鹤=玩家数据[id].角色.数据.传音纸鹤-1
      发送传音(玩家数据[id].角色.数据.名称,数据.文本,取随机数(1,4),临时超链接数据)
     end
  end
end


function 聊天处理类:更新(dt)end
function 聊天处理类:显示(x,y)end

return 聊天处理类