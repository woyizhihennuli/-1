--======================================================================--
-- @作者: baidwwy@vip.qq.com(313738139) 老毕
-- 单机GGE研究群: 34211 9466 (如果要研究商业 那请勿进!)
-- @创建时间:   2018-03-03 02:34:19
-- @Last Modified time: 2022-12-30 08:07:09
-- 梦幻西游游戏资源破解 baidwwy@vip.qq.com(313738139) 老毕   和 C++PrimerPlus 717535046 这俩位大神破解梦幻西游所有资源
--======================================================================--
local 假人玩家处理类 = class()
local 玩家选项={"剑侠客","逍遥生","玄彩娥","杀破狼","飞燕女","英女侠","神天兵","龙太子","羽灵神","舞天姬","巨魔王","虎头怪","狐美人","骨精灵","巫蛮儿","桃夭夭","偃无师","鬼潇潇"}
local 玩家姓 = {"小黑","小白","无名","专业打油酱","酒到微醺","北疆雨寒","放慢心跳","Θ内心d1.伤","轻音柔体萌萝莉","觅览少女","愛遇良人","余音未散","别提"
,"爆菊无极限","夜凉若水","览觅少年","一生傲娇","欲望泯灭人性","献给清明节","青燈古酒","花开似梦","入戏太深","不会撒谎","年少不知米青仔贵","执我之手","白衣煮茶"
,"黑白棋局","忘不了，她","半夏白色枕头","末世岛屿","携我之心","哼哈二将","对面是二傻","繁华宛似浮云","風卷著沙","纪年海泊","沉鱼落雁","Louise゛","捣你菊花","情深不寿"
,"淚順著雨","封心锁爱","暈“噠120","苍天有井自然空","命定浮沉","慧极必伤","刹那芳华","路易絲","灬情丶落轩","清酒暖心","与情无染","情难自控","X凄凉菂羙","有飘影更自信"
,"南巷孤貓","烈酒醉人","沦陷的痛","夜的第七章","星逝破晓","一尾流莺","北城孤人","若如初见","简单","风恋绝尘","特别的人η","一指流砂","温柔散尽","彻底完败","揍跪了丶好么"
,"月寒影对","特别的梦η","烟花寂凉","ˉ罗密欧","沟沟有深度","绽放情花","梦暖情双","新不了情","Θ“肮脏_矜持”","你的菊花真美","墨染诗水","刺痛命脉","野性难改","內傷無法治愈"
,"最短不过善变","青絲繞手","樱花年华","十夏之风","负心人","举杯邀月","已然情深","情字繞口","徒增伤悲","ㄨ雨℡逝ㄚ","床单一片红","清歡相伴","何惧缘浅","一拉拉","扭曲旳黑暗”"
,"转角遇到墙","竖萧而奏","溫酒相隨","似水柔情","贱人·滚之","细雨微醺","北軌陽葵","抚琴而唱","旧事重提","ω带刺╮男淫","紫丶星河","烟过是云","南岸青梔","撕心裂肺","伸手难辨"
,"中指的邂逅","萧暗寒剑","雨过你在","忠贞罘渝","极速ω堕落","眼兮的温柔","北港初晴","青梅落影","落荒而逃","不服来嘛","双手成就你的梦","寡人寡巷","南岸末阴","从不服输","１切都昰命▂"
,"吟唱寒荒","凉城以北","孤人孤街","半夏时光","説不岀旳疼╮","撸自身哥哥","南館瀟湘","空城旧梦","黑白年代","∑幼稚鬼","信基哥原地复活","鱼忘七秒#","壹席青城","十言九妄","不在乎的在乎ゝ"
,"溪舔取精","南人旧心","人忘七年#","独守空城","撕裂的天堂","今天干我儿","灯为谁点","北人久情","事与愿违","初见钟情","潇潇暮雨","彼此相爱゛","脂为谁添","南熙寒笙","師傅.別念了","蝶梦恋花"
,"发酵的恋","っ遮遮掩掩゛","夏末染殇","地心侵略者","风泊天","琴瑟在御","茹梦初醒","沐风朝朝","炫。枫少","寒风笑雪夜","葬我以风","凤凰于飞","鱼巷猫归","抱你到天亮.","浅唱呐忧伤","闹市海港"
,"赐你以梦","深秋无痕","╮麻辣","百合大队长","人走茶凉","旧城窄巷","回眸的笑","ε择日","一寸光阴","北葵向暖","曲终人散","少钩鈏我","为了你","一寸精","暖阳今夏","南栀倾寒","满城灯火","烈酒i"
,"夜凉如水","这季悲凉","冷月昨秋","醉生梦死","极度深寒","淡丿子枫","深如大海i","|回身诉说","葑鈊ご独爱","各自生欢","梦冥光","追忆年华","深海溺心 i","复制回忆","在为止的路上狂奔","苏秋辰"
,"听一首歌丶","笑叹如梦","时光不复","ω永别","碎泪","任憑風吹","念一个人丶","人亦已歌","咎由自取","幹杯清茶","不準妳走","初衷是你","阴月下的墓碑","渔舟唱晚","續杯烈酒","邀月对影","风吹屁丫爽"
,"夜寒影对","彼岸灯火","今夕何夕","沦陷′2009","刻晴","月寒","全功仔","哒总","菊花","曲终人散","季珪","御风神行","风清柒、","阿饼","江湖小虾米","踏月夜归人","风度翩翩","书生"
,"扳手","神器制造者","六一大侠","大鱼海棠","微夏青花","吊顶天","阴阳人拱火王","纯粹","初出茅庐","月寒","(りyi人","乘风儿","张不凡","黎明前的黑暗"}
local remove=table.remove

function 假人玩家处理类:打造公式(a,b,c) -- 制作书等级 制作种类
  local c = {} -- 命中 伤害 防御 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力 附加特效 附加特技
  if a == nil or b == nil then
    return false
  end
  local 双加概率 =  f函数.读配置(程序目录.."配置文件.ini","主要配置","打造双加概率")
  local 双加概率1 = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造单加概率")
  if tonumber(双加概率) == nil then
    双加概率 = 10
  end
  if tonumber(双加概率1) == nil then
    双加概率1 = 30
  end
  双加概率 = 双加概率 +0
  双加概率1 = 双加概率1 +0
  if b < 19 then -- 武器
    if a <= 60 then
      c[1] = 取随机数(a*3.7+10,a*4.7+15)
      c[2] = 取随机数(a*3.2+10,a*4.05+14)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    elseif a > 60 then
      c[1] = 取随机数(a*3.7+10,a*4.7+15)
      c[2] = 取随机数(a*3.2+10,a*4.05+14)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3)
        c[x2] = 取随机数(a*(-0.05),a*0.3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 19 then -- 帽子
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
      c[4] = 取随机数(a*1.05+5,a*1.35+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
      c[4] = 取随机数(a*1.05+5,a*1.35+8)
    end
  elseif b == 20 then -- 项链
    if a <= 60 then
      c[5] = 取随机数(a*1.25+5,a*1.63+6)
    elseif a > 60 then
      c[5] = 取随机数(a*1.25+6,a*1.63+7)
    end
  elseif b == 21 then -- 衣服
    if a <= 70 then
      c[3] = 取随机数(a*1.57+10,a*2.04+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    elseif a > 70 then
      c[3] = 取随机数(a*1.57+10,a*2.045+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3+3)
        c[x2] = 取随机数(a*(-0.05),a*0.3+3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 22 then -- 腰带
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
    end
    c[6] = 取随机数(a*2.1+10,a*2.7+17)
  elseif b == 23 then -- 鞋子
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
    end
    if a <= 40 then
      c[7] = 取随机数(a*0.3+5,a*0.4+6)
    elseif a > 40 then
      c[7] = 取随机数(a*0.3+7,a*0.4+7)
    end
  end
  local tx = 取随机数(1,100)
  local txgl = 1
  if tx <= txgl+0 then
    c[12] = 1
  end
  if tx <= txgl+0 then
    c[13] = 1
  end
  return c
end

function 假人玩家处理类:生成指定装备(名称,序列)
  --print(id,名称,级别,序列)
  local 道具 = 物品类()
  道具:置对象(名称)
  if not 道具.级别限制 then
    return
  end
  local dz = self:打造公式(道具.级别限制,序列)
  if dz[1] ~= nil then
    道具.命中 = dz[1]
  end
  if dz[2] ~= nil then
    道具.伤害 = dz[2]
  end
  if dz[3] ~= nil then
    道具.防御 = dz[3]
  end
  if dz[4] ~= nil then
    道具.魔法 = dz[4]
  end
  if dz[5] ~= nil then
    道具.灵力 = dz[5]
  end
  if dz[6] ~= nil then
    道具.气血 = dz[6]
  end
  if dz[7] ~= nil then
    道具.敏捷 = dz[7]
  end
  if dz[8] ~= nil then
    道具.体质 = dz[8]
  end
  if dz[9] ~= nil then
    道具.力量 = dz[9]
  end
  if dz[10] ~= nil then
    道具.耐力 = dz[10]
  end
  if dz[11] ~= nil then
    道具.魔力 = dz[11]
  end
  if dz[12] ~= nil then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if dz[13] ~= nil then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end

  道具.耐久=取随机数(500,700)
  道具.识别码="999998".."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  return 道具
end

function 假人玩家处理类:功能开关(open)
  self.open = open
end

function 假人玩家处理类:ltop(id, mapid,sendFunc,mapBoothNpcs)-- 发送给玩家假人摊位列表  --发送地图假人摆摊玩家
  for i = 1, #mapBoothNpcs do
    ndata = mapBoothNpcs[i]
    local ctx = {
      x = ndata[2] * 20,
      y = ndata[3] * 20,
      id = ndata[4],
      名称 = ndata[5],
      摊位名称 = ndata[6],
      模型 = ndata[7],
      玩家类型="假人玩家"
    }
    发送数据(id,1006,ctx)
  end
end

function 假人玩家处理类:malltop(玩家的ID,连接id,id,数据)--购买
  self:购买摊位商品(玩家的ID,连接id,id,数据)
end

function 假人玩家处理类:mall(摊主名称, 名称,botId,id)
  local ctx = {
    bb={},
    摊主名称=摊主名称,
    物品 = {},
    名称= 名称,
    id = botId
  }
  if 摆摊假人处理类.npcUserList["" .. botId]~=nil and 摆摊假人处理类.npcUserList["" .. botId][8]~=nil and 摆摊假人处理类.npcUserList["" .. botId][8].物品~=nil then
    ctx.物品 = 摆摊假人处理类.npcUserList["" .. botId][8].物品
    ctx.bb = 摆摊假人处理类.npcUserList["" .. botId][8].bb
  end
  发送数据(id,3521,ctx)
end

function 假人玩家处理类:mmmmwq(botId,摊位名称,ret)--商品输出购买  摆摊初始化
  local ctx = {}
  ctx.物品={}
  local x临时物品 = {}
-----------------------------------装备------------------------------------
  if (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "无级") ~= nil or string.find(摊位名称, "装备") ~= nil or string.find(摊位名称, "军火") ~= nil or string.find(摊位名称, "变强") ~= nil
      or string.find(摊位名称, "买到就是赚") ~= nil or string.find(摊位名称, "赌鉴定啦") ~= nil or string.find(摊位名称, "环装") ~= nil )) then
    for i=1,取随机数(1,20) do
      local x取物品 = 绑定等级物品80()--取装备物品
      local range=取随机数(1,23)
      x取物品 = x取物品[range]--#x取物品
      local xwzp品 = self:生成指定装备(x取物品[取随机数(1,#x取物品)],range)--就这里
      if xwzp品~=nil and xwzp品.级别限制~=nil then
        local xwzp = #x临时物品+1
        x临时物品[xwzp]=xwzp品
        x临时物品[xwzp].数量 = 1
        if xwzp品.级别限制 <=30 then
        x临时物品[xwzp].鉴定=true
        else
        x临时物品[xwzp].鉴定=false
        end
        x临时物品[xwzp].制造者 = "摆摊商品"
        x临时物品[xwzp].价格=取随机数(1000,2000)
        if x临时物品[xwzp].级别限制>=10 and x临时物品[xwzp].级别限制<=19 then
           x临时物品[xwzp].价格=取随机数(2000,4000)
          elseif x临时物品[xwzp].级别限制>=20 and x临时物品[xwzp].级别限制<=29 then
            x临时物品[xwzp].价格=取随机数(10000,20000)
          elseif x临时物品[xwzp].级别限制>=30 and x临时物品[xwzp].级别限制<=39 then
            x临时物品[xwzp].价格=取随机数(18000,36000)
          elseif x临时物品[xwzp].级别限制>=40 and x临时物品[xwzp].级别限制<=49 then
            x临时物品[xwzp].价格=取随机数(28000,53000)
          elseif x临时物品[xwzp].级别限制>=50 and x临时物品[xwzp].级别限制<=59 then
            x临时物品[xwzp].价格=取随机数(100000,200000)
          elseif x临时物品[xwzp].级别限制>=60 and x临时物品[xwzp].级别限制<=69 then
            x临时物品[xwzp].价格=取随机数(200000,400000)
          elseif x临时物品[xwzp].级别限制>=70 and x临时物品[xwzp].级别限制<=79 then
            x临时物品[xwzp].价格=取随机数(400000,800000)
          elseif x临时物品[xwzp].级别限制>=80 and x临时物品[xwzp].级别限制<=89 then
            x临时物品[xwzp].价格=取随机数(800000,1000000)
        end
      end
    end
  end
-----------------------------------变身卡------------------------------------
  if (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "1级变身卡") ~= nil)) then
    local x一级变身卡={}
    x一级变身卡[1]={可叠加=false,名称="怪物卡片",造型="野猪",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[2]={可叠加=false,名称="怪物卡片",造型="巨蛙",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[3]={可叠加=false,名称="怪物卡片",造型="大海龟",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[4]={可叠加=false,名称="怪物卡片",造型="树怪",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[5]={可叠加=false,名称="怪物卡片",造型="赌徒",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[6]={可叠加=false,名称="怪物卡片",造型="大蝙蝠",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[7]={可叠加=false,名称="怪物卡片",造型="强盗",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[8]={可叠加=false,名称="怪物卡片",造型="山贼",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[9]={可叠加=false,名称="怪物卡片",造型="海毛虫",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[10]={可叠加=false,名称="怪物卡片",造型="护卫",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[11]={可叠加=false,名称="怪物卡片",造型="海星",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[12]={可叠加=false,名称="怪物卡片",造型="章鱼",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    x一级变身卡[13]={可叠加=false,名称="怪物卡片",造型="浣熊",技能="",属性=0,类型="",正负=0,等级=1,次数=8,价格=取随机数(10000,20000)}
    for i=1,取随机数(5,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x一级变身卡[取随机数(1,#x一级变身卡)]))
    end
  elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "2级变身卡") ~= nil)) then
    local x二级变身卡={}
    x二级变身卡[1]={可叠加=false,名称="怪物卡片",造型="骷髅怪",技能="夜战",属性=20,类型="气血",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[2]={可叠加=false,名称="怪物卡片",造型="羊头怪",技能="幸运",属性=10,类型="气血",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[3]={可叠加=false,名称="怪物卡片",造型="黑熊",技能="防御",属性=5,类型="灵力",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[4]={可叠加=false,名称="怪物卡片",造型="蛤蟆精",技能="毒",属性=15,类型="防御",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[5]={可叠加=false,名称="怪物卡片",造型="老虎",技能="强力",属性=10,类型="速度",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[6]={可叠加=false,名称="怪物卡片",造型="花妖",技能="慧根",属性=0,类型="",正负=0,等级=2,次数=8,价格=取随机数(20000,30000)}
    x二级变身卡[7]={可叠加=false,名称="怪物卡片",造型="狐狸精",技能="感知",属性=5,类型="气血",正负=2,等级=2,次数=8,价格=取随机数(20000,30000)}
    for i=1,取随机数(5,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x二级变身卡[取随机数(1,#x二级变身卡)]))
    end
  elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "3级变身卡")~=nil)) then
    local x三级变身卡={}
    x三级变身卡[1]={可叠加=false,名称="怪物卡片",造型="牛妖",技能="反击",属性=5,类型="防御",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    x三级变身卡[2]={可叠加=false,名称="怪物卡片",造型="小龙女",技能="驱鬼",属性=5,类型="伤害",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    x三级变身卡[3]={可叠加=false,名称="怪物卡片",造型="野鬼",技能="夜战",属性=5,类型="灵力",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    x三级变身卡[4]={可叠加=false,名称="怪物卡片",造型="狼",技能="偷袭",属性=10,类型="气血",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    x三级变身卡[5]={可叠加=false,名称="怪物卡片",造型="虾兵",技能="必杀",属性=10,类型="伤害",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    x三级变身卡[6]={可叠加=false,名称="怪物卡片",造型="蟹将",技能="连击",属性=12,类型="速度",正负=2,等级=3,次数=8,价格=取随机数(30000,40000)}
    for i=1,取随机数(5,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x三级变身卡[取随机数(1,#x三级变身卡)]))
    end
-----------------------------------------强化符-----------------------------------------
  elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "强化符1号")~=nil or string.find(摊位名称, "强化符2号")~=nil or string.find(摊位名称, "强化符3号")~=nil)) then
    local x强化符={}
        x强化符[1]={可叠加=false,名称="强化符",类型="嗜血",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[2]={可叠加=false,名称="强化符",类型="莲华妙法",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[3]={可叠加=false,名称="强化符",类型="轻如鸿毛",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[4]={可叠加=false,名称="强化符",类型="神木呓语",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[5]={可叠加=false,名称="强化符",类型="拈花妙指",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[6]={可叠加=false,名称="强化符",类型="盘丝舞",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[7]={可叠加=false,名称="强化符",类型="一气化三清",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[8]={可叠加=false,名称="强化符",类型="浩然正气",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[9]={可叠加=false,名称="强化符",类型="龙附",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[10]={可叠加=false,名称="强化符",类型="穿云破空",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[11]={可叠加=false,名称="强化符",类型="神兵护法",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[12]={可叠加=false,名称="强化符",类型="魔王护持",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[13]={可叠加=false,名称="强化符",类型="元阳护体",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[14]={可叠加=false,名称="强化符",类型="神力无穷",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
        x强化符[15]={可叠加=false,名称="强化符",类型="尸气漫天",等级=109,总类=101,子类=0,价格=取随机数(1000000,1800000)}
    for i=1,取随机数(5,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x强化符[取随机数(1,#x强化符)]))
    end
-----------------------------------------杂货大全-------------------------------------------------------------------------
    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "杂货")~=nil or string.find(摊位名称, "不卖神兜兜")~=nil or string.find(摊位名称, "乱七八糟")~=nil or string.find(摊位名称, "专卖假货")~=nil )) then
    local x杂货摆摊={}
    x杂货摆摊[1]={可叠加=true,总类=9,名称="飞行符",价格=取随机数(300,500),分类=1,子类=1,数量=取随机数(5,99)}
    x杂货摆摊[2]={可叠加=true,名称="摄妖香",价格=取随机数(300,500),数量=取随机数(5,99)}
    x杂货摆摊[3]={可叠加=true,名称="洞冥草",价格=取随机数(300,500),数量=取随机数(5,99)}
    x杂货摆摊[4]={可叠加=true,总类=4,名称="天眼通符",价格=取随机数(1000,5000),分类=2,子类=0,数量=取随机数(5,99)}
    x杂货摆摊[5]={可叠加=true,名称="秘制红罗羹",价格=取随机数(1000,2000),数量=取随机数(5,99)}
    x杂货摆摊[6]={可叠加=true,名称="秘制绿罗羹",价格=取随机数(1000,2000),数量=取随机数(5,99)}
    x杂货摆摊[7]={可叠加=true,名称="海马",价格=取随机数(30000,50000),数量=取随机数(5,20)}
    x杂货摆摊[8]={可叠加=true,名称="吸附石",价格=取随机数(300000,500000),数量=取随机数(1,10)}
    x杂货摆摊[9]={可叠加=true,名称="圣兽丹",价格=取随机数(300000,500000),数量=取随机数(1,10)}
    x杂货摆摊[10]={可叠加=false,名称="空白强化符",价格=取随机数(300,500),数量=取随机数(5,99)}
    x杂货摆摊[11]={可叠加=false,名称="珍珠",价格=取随机数(300000,500000),总类=5,分类=6,级别限制=160}
    x杂货摆摊[12]={可叠加=true,子类=1,总类=3,名称="超级金柳露",价格=取随机数(30000,50000),分类=2,数量=取随机数(5,99)}
    x杂货摆摊[13]={可叠加=true,子类=0,总类=3,名称="金柳露",价格=取随机数(4000,8000),分类=2,数量=取随机数(5,99)}
    x杂货摆摊[14]={可叠加=true,名称="月华露",价格=取随机数(10000,50000),阶品=100,数量=取随机数(5,99)}
    x杂货摆摊[15]={可叠加=true,名称="九转金丹",价格=取随机数(100000,500000),阶品=50,数量=取随机数(1,5)}
    x杂货摆摊[16]={可叠加=true,名称="修炼果",价格=取随机数(100000,500000),阶品=50,数量=取随机数(1,5)}
    x杂货摆摊[17]={可叠加=true,名称="清灵净瓶",价格=取随机数(50000,100000),数量=取随机数(5,99)}
    x杂货摆摊[18]={可叠加=true,名称="彩果",价格=取随机数(50000,100000),数量=取随机数(5,20)}
    for i=1,取随机数(10,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x杂货摆摊[取随机数(1,#x杂货摆摊)]))
    end
    for i=1,取随机数(1,1)  do
     if 取随机数(1,100)<=30 then
      local xwzp品 = self:摆摊数据库输出(botId,"点化石",1,nil,nil,nil)
      if xwzp品~=nil then
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=xwzp品
        x临时物品[x临物品].价格=取随机数(100000,200000)
      end
    end
  end
    for i=1,取随机数(1,18) do
      if 取随机数(1,100)<=1 then
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=self:摆摊数据库输出(botId,"神兜兜",取随机数(1,5),nil,nil,nil)
        x临时物品[x临物品].价格=取随机数(100000,200000)
      end
    end
    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "旗子")~=nil or string.find(摊位名称, "777")~=nil or string.find(摊位名称, "飞来飞去")~=nil
      or string.find(摊位名称, "五颜六色")~=nil or string.find(摊位名称, "瞬间移动")~=nil )) then
    local x旗子={}
    x旗子[1]={可叠加=false,总类=11,xy={[2]={y=11,x=495},[5]={y=273,x=12},[3]={y=117,x=457},[7]={y=105,x=192},[1]={y=7,x=312},[4]={y=167,x=362},[6]={y=240,x=277},[8]={y=276,x=527},[9]={y=85,x=288}},地图=1001,子类=50,y=7,x=312,价格=取随机数(55000,75000),分类=2,次数=50,名称="红色合成旗"}
    x旗子[2]={可叠加=false,总类=11,xy={[1]={y=13,x=13},[2]={y=55,x=29},[3]={y=120,x=55},[4]={y=133,x=167},[5]={y=13,x=209},[6]={y=54,x=122}},地图=1092,子类=50,y=7,x=312,价格=取随机数(55000,75000),分类=2,次数=50,名称="黄色合成旗"}
    x旗子[3]={可叠加=false,总类=11,xy={[1]={y=203,x=141},[2]={y=183,x=33},[3]={y=74,x=52},[4]={y=14,x=107},[5]={y=158,x=106},[6]={y=100,x=125}},地图=1070,子类=50,y=7,x=312,价格=取随机数(55000,75000),分类=2,次数=50,名称="蓝色合成旗"}
    x旗子[4]={可叠加=false,名称="红色导标旗",价格=取随机数(5000,8000),总类=11,分类=1}
    x旗子[5]={可叠加=false,名称="绿色导标旗",价格=取随机数(5000,8000),总类=11,分类=1}
    x旗子[6]={可叠加=false,名称="蓝色导标旗",价格=取随机数(5000,8000),总类=11,分类=1}
    x旗子[7]={可叠加=false,名称="白色导标旗",价格=取随机数(5000,8000),总类=11,分类=1}
    x旗子[8]={可叠加=false,名称="黄色导标旗",价格=取随机数(5000,8000),总类=11,分类=1}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x旗子[取随机数(1,#x旗子)]))
    end
    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "一级药")~=nil)) then
    local x一级药={}
    x一级药[1]={可叠加=true,名称="鬼切草",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[2]={可叠加=true,名称="旋复花",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[3]={可叠加=true,名称="龙须草",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[4]={可叠加=true,名称="灵脂",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[5]={可叠加=true,名称="七叶莲",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[6]={可叠加=true,名称="百色花",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[7]={可叠加=true,名称="紫丹罗",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[8]={可叠加=true,名称="天青地白",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[9]={可叠加=true,名称="白玉骨头",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[10]={可叠加=true,名称="曼陀罗花",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[11]={可叠加=true,名称="佛手",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[12]={可叠加=true,名称="香叶",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[13]={可叠加=true,名称="草果",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[14]={可叠加=true,名称="九香虫",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[15]={可叠加=true,名称="水黄莲",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[16]={可叠加=true,名称="山药",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[17]={可叠加=true,名称="八角莲叶",价格=取随机数(50,500),数量=取随机数(5,20)}
    x一级药[18]={可叠加=true,名称="人参",价格=取随机数(50,500),数量=取随机数(5,20)}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x一级药[取随机数(1,#x一级药)]))
    end
    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "二级药")~=nil)) then
    local x二级药={}
    x二级药[1]={可叠加=true,名称="六道轮回",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[2]={可叠加=true,名称="天不老",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[3]={可叠加=true,名称="紫石英",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[4]={可叠加=true,名称="血色茶花",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[5]={可叠加=true,名称="熊胆",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[6]={可叠加=true,名称="凤凰尾",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[7]={可叠加=true,名称="天龙水",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[8]={可叠加=true,名称="地狱灵芝",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[9]={可叠加=true,名称="餐风饮露",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[10]={可叠加=true,名称="白露为霜",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[11]={可叠加=true,名称="硫磺草",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[12]={可叠加=true,名称="龙之心屑",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[13]={可叠加=true,名称="月星子",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[14]={可叠加=true,名称="丁香水",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[15]={可叠加=true,名称="麝香",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[16]={可叠加=true,名称="血珊瑚",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[17]={可叠加=true,名称="火凤之睛",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[18]={可叠加=true,名称="孔雀红",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[19]={可叠加=true,名称="鹿茸",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    x二级药[20]={可叠加=true,名称="仙狐涎",价格=取随机数(1000,5000),数量=取随机数(5,20)}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x二级药[取随机数(1,#x二级药)]))
    end
    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "菊花的三级药")~=nil)) then
    local x三级药={}
    local 随机药性={nil,nil,nil,nil,"藏神","倍愈"}
    x三级药[1]={可叠加=false,名称="金创药",价格=取随机数(5000,25000),数量=1}
    x三级药[2]={可叠加=false,名称="小还丹",价格=取随机数(5000,25000),数量=1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[3]={可叠加=false,名称="千年保心丹",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[4]={可叠加=false,名称="蛇蝎美人",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[5]={可叠加=false,名称="金香玉",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[6]={可叠加=false,名称="九转回魂丹",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[7]={可叠加=false,名称="风水混元丹",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[8]={可叠加=false,名称="定神香",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[9]={可叠加=false,名称="五龙丹",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[10]={可叠加=false,名称="佛光舍利子",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    x三级药[11]={可叠加=false,名称="十香返生丸",价格=取随机数(5000,25000),1,阶品=取随机数(10,50),药性=随机药性[取随机数(1,#随机药性)]}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x三级药[取随机数(1,#x三级药)]))
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "三级药")~=nil)) then
    local x三级药={}
    x三级药[1]={可叠加=true,名称="金创药",价格=取随机数(5000,25000),数量=取随机数(1,5)}
    x三级药[2]={可叠加=true,名称="小还丹",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[3]={可叠加=true,名称="千年保心丹",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[4]={可叠加=true,名称="蛇蝎美人",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[5]={可叠加=true,名称="金香玉",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[6]={可叠加=true,名称="九转回魂丹",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[7]={可叠加=true,名称="风水混元丹",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[8]={可叠加=true,名称="定神香",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[9]={可叠加=true,名称="五龙丹",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[10]={可叠加=true,名称="佛光舍利子",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x三级药[11]={可叠加=true,名称="十香返生丸",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x三级药[取随机数(1,#x三级药)]))
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "烹饪")~=nil or string.find(摊位名称, "香喷喷")~=nil or string.find(摊位名称, "食物")~=nil
    or string.find(摊位名称, "吃货")~=nil or string.find(摊位名称, "酒")~=nil )) then
    local x烹饪={}
    x烹饪[1]={可叠加=true,名称="包子",价格=取随机数(50,100),数量=取随机数(10,99)}
    x烹饪[2]={可叠加=true,名称="佛跳墙",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[3]={可叠加=true,名称="烤鸭",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[4]={可叠加=true,名称="珍露酒",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[5]={可叠加=true,名称="女儿红",价格=取随机数(5000,25000),数量=取随机数(1,5)}
    x烹饪[6]={可叠加=true,名称="虎骨酒",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[7]={可叠加=true,名称="豆斋果",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[8]={可叠加=true,名称="臭豆腐",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[9]={可叠加=true,名称="烤肉",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[10]={可叠加=true,名称="桂花丸",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[11]={可叠加=true,名称="翡翠豆腐",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[12]={可叠加=true,名称="长寿面",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[13]={可叠加=true,名称="梅花酒",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[14]={可叠加=true,名称="百味酒",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[15]={可叠加=true,名称="蛇胆酒",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    x烹饪[16]={可叠加=true,名称="醉生梦死",价格=取随机数(5000,25000),数量=取随机数(1,5),阶品=取随机数(10,50)}
    for i=1,取随机数(1,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x烹饪[取随机数(1,#x烹饪)]))
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "鉴定")~=nil)) then
    local x鉴定={}
    x鉴定[1]={可叠加=false,名称="神兵图鉴",价格=取随机数(100000,300000),子类=100}
    x鉴定[2]={可叠加=false,名称="灵宝图鉴",价格=取随机数(100000,300000),子类=100}
    x鉴定[3]={可叠加=false,名称="神兵图鉴",价格=取随机数(300000,600000),子类=110}
    x鉴定[4]={可叠加=false,名称="灵宝图鉴",价格=取随机数(300000,600000),子类=110}
    x鉴定[5]={可叠加=false,名称="神兵图鉴",价格=取随机数(1200000,2400000),子类=120}
    x鉴定[6]={可叠加=false,名称="灵宝图鉴",价格=取随机数(1200000,2400000),子类=120}
    x鉴定[7]={可叠加=false,名称="神兵图鉴",价格=取随机数(2400000,4800000),子类=130}
    x鉴定[8]={可叠加=false,名称="灵宝图鉴",价格=取随机数(2400000,4800000),子类=130}
    for i=1,取随机数(15,20) do
    local x临物品 = #x临时物品+1
    x临时物品[#x临时物品+1] = table.loadstring(table.tostring(x鉴定[取随机数(1,#x鉴定)]))
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "书") ~= nil or string.find(摊位名称, "铁") ~= nil)) then
    for i=1,取随机数(10,17) do
      local x临物品 = #x临时物品+1
      x临时物品[x临物品]=self:给予书铁(botId,{3,4})
      x临时物品[x临物品].价格=取随机数(x临时物品[x临物品].子类*500,x临时物品[x临物品].子类*800)
    end
    for i=1,取随机数(1,3) do
      if 取随机数(1,100)<=5 then
        local x临物品 = #x临时物品+1
      x临时物品[x临物品]=self:给予书铁(botId,{5,5})
      x临时物品[x临物品].价格=取随机数(x临时物品[x临物品].子类*1000,x临时物品[x临物品].子类*3000)
      end
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "兽决")~=nil)) then
    for i=1,取随机数(3,17) do
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=self:摆摊数据库输出(botId,"魔兽要诀",1,nil,nil,nil)
        x临时物品[x临物品].价格=取随机数(50000,100000)
      end
    for i=1,取随机数(1,3) do
      if 取随机数(1,100)<=5 then
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=self:摆摊数据库输出(botId,"高级魔兽要诀",1,nil,nil,nil)
        x临时物品[x临物品].价格=取随机数(500000,700000)
      end
    end

    elseif (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "藏宝图")~=nil)) then
    for i=1,取随机数(5,17) do
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=self:摆摊数据库输出(botId,"藏宝图",1,nil,nil,nil)
        x临时物品[x临物品].价格=取随机数(5000,10000)
      end
    for i=1,取随机数(1,3) do
      if 取随机数(1,100)<=5 then
        local x临物品 = #x临时物品+1
        x临时物品[x临物品]=self:摆摊数据库输出(botId,"高级藏宝图",1,nil,nil,nil)
        x临时物品[x临物品].价格=取随机数(50000,70000)
      end
    end

  end



  if #x临时物品>20 then--预防超标
    for i=1,20 do
      ctx.物品[#ctx.物品+1]=x临时物品[i]
    end
  else
    ctx.物品 = x临时物品
  end
  x临时物品={}
  ctx.bb={}
  if  (摊位名称~=nil and 摊位名称~="" and (string.find(摊位名称, "宝宝") ~= nil or string.find(摊位名称, "召唤") ~= nil or string.find(摊位名称, "技能") ~= nil or string.find(摊位名称, "bb") ~= nil
    or string.find(摊位名称, "神兽") ~= nil )) then
    for n=1,取随机数(3,7) do
      local 模型=self:取随机怪(0,105)
      local xwz = #ctx.bb+1
      ctx.bb[xwz]=self:添加召唤兽(模型[2],模型[2],"宝宝",属性,0,染色方案,nil,资质组,成长,参战等级,属性表,转换,是否神兽物法,botId)
      if ctx.bb[xwz].参战等级>=0 and ctx.bb[xwz].参战等级<=15 then
      ctx.bb[xwz].价格=取随机数(1000,3000)
      elseif ctx.bb[xwz].参战等级>15 and ctx.bb[xwz].参战等级<=25 then
      ctx.bb[xwz].价格=取随机数(6000,10000)
      elseif ctx.bb[xwz].参战等级>25 and ctx.bb[xwz].参战等级<=35 then
      ctx.bb[xwz].价格=取随机数(20000,40000)
      elseif ctx.bb[xwz].参战等级>35 and ctx.bb[xwz].参战等级<=45 then
      ctx.bb[xwz].价格=取随机数(50000,80000)
      elseif ctx.bb[xwz].参战等级>45 and ctx.bb[xwz].参战等级<=55 then
      ctx.bb[xwz].价格=取随机数(120000,150000)
      elseif ctx.bb[xwz].参战等级>55 then
      ctx.bb[xwz].价格=取随机数(200000,300000)
     end
    end
  end
  if ret then
    return ctx
  end
  local key = "" .. botId
  摆摊假人处理类.npcUserList[key][5] = 玩家姓[取随机数(1,#玩家姓)]
  local x角色 = 玩家选项[取随机数(1,#玩家选项)]
  摆摊假人处理类.npcUserList[key][7] = x角色
  摆摊假人处理类.npcUserList[key][8] = ctx
  -- table.print(摆摊假人处理类.npcUserList[key])
  -- table.print(ctx)
  -- return ctx
end

function 假人玩家处理类:取随机怪(a,b)
  local 临时信息=取等级怪(取随机数(a,b))
  local 临时模型=取敌人信息(临时信息[取随机数(1,#临时信息)])
  return 临时模型
end

function 假人玩家处理类:添加召唤兽(模型,名称,类型,属性,等级,染色方案,技能组,资质组,成长,参战等级,属性表,转换,是否神兽物法,假人id)
  local 召唤兽数据=宝宝类.创建()
  召唤兽数据:置新对象(模型,名称,类型,属性,等级,染色方案,技能组,资质组,成长,参战等级,属性表,转换,是否神兽物法)
  召唤兽数据.认证码=假人id.."_"..os.time().."_"..取随机数(20,10000).."_"..取随机数(111111111111,999999999999)
  召唤兽数据.转换=转换
  召唤兽数据.内丹 = {内丹上限=6,可用内丹=6}
  召唤兽数据.灵性 = 0
  召唤兽数据.进阶 = false
  召唤兽数据.仙露上限 = 7
  召唤兽数据.特性 = "无"
  召唤兽数据.特性几率 = 0
  召唤兽数据.进阶属性 = {
  力量 = 0,
  敏捷 = 0,
  耐力 = 0,
  魔力 = 0,
  体质 = 0,
  }
  召唤兽数据.统御属性 = {
  力量 = 0,
  敏捷 = 0,
  耐力 = 0,
  魔力 = 0,
  体质 = 0,
  }

  if 等级~=nil and 等级~=0 then
    召唤兽数据:重置等级(等级)
  end
  return 召唤兽数据
end

function 假人玩家处理类:购买摊位商品(玩家的ID,连接id,id,数据)
  local 对方did=摆摊假人处理类.npcUserList["" .. 玩家的ID]
  if 对方did==nil or (对方did~=nil and 对方did[8]==nil) then
    常规提示(id,"#Y/这个摊位并不存在")
    return
  end
  对方id=摆摊假人处理类.npcUserList["" .. 玩家的ID][8]
  if 玩家数据[id].摊位查看<对方did.更新 then
    常规提示(id,"#Y/这个摊位的数据已经发生了变化，请重新打开该摊位")
    return
  end

    if ctx~=ctx then
    常规提示(id,"#Y/这个摊位的数据已经发生了变化，请重新打开该摊位")
    return
  end

  local 名称1=玩家数据[id].角色.名称
  -- local 账号=玩家数据[对方id].账号
  local 账号1=玩家数据[id].账号
  if 数据.bb==nil then --购买道具
    if  对方id.物品[数据.道具]==nil then
      常规提示(id,"#Y/这个商品并不存在1")
      return
    end
    if 数据.数量~=nil then
      数据.数量=数据.数量+0
    end
    if 数据.数量==nil or (数据.数量~=nil and 数据.数量<=0) or (对方id.物品[数据.道具].数量==nil) then
      数据.数量 = 1
    end
    if (数据.数量~=nil and 对方id.物品[数据.道具].数量~=nil and 数据.数量 > 对方id.物品[数据.道具].数量) then
      数据.数量 = 对方id.物品[数据.道具].数量
    end
    local 价格=对方id.物品[数据.道具].价格 * 数据.数量
    if 玩家数据[id].角色.数据.银子 < 价格 then
      常规提示(id,"#Y/你没有那么多的银子")
      return
    end
    local 临时格子=玩家数据[id].角色:取道具格子()
    if 临时格子==0 then
      常规提示(id,"#Y/请先整理下包裹吧！")
      return
    end
    玩家数据[id].角色:扣除银子(价格,0,0,"摊位购买",1)
    local 道具名称=对方id.物品[数据.道具].名称
    local 道具识别码=对方id.物品[数据.道具].识别码
    -- print("购买",玩家的ID,连接id,id,对方id.物品[数据.道具].名称,table.tostring(对方id.物品[数据.道具]))
    玩家数据[id].角色:日志记录(format("[摊位系统-购买]购买道具[%s][%s]，花费%s两银子,出售者信息：[%s][%s][%s]",道具名称,道具识别码,价格,账号,玩家的ID,名称))
    常规提示(id,"#W/购买#R/"..道具名称.."#W/成功！")
    local 道具编号=玩家数据[id].道具:取新编号()
    对方id.物品[数据.道具].识别码 =id.."_"..os.time().."_"..取随机数(20,10000).."_"..取随机数(111111111111,999999999999)
    玩家数据[id].道具.数据[道具编号]=table.loadstring(table.tostring(对方id.物品[数据.道具]))--复制物品(对方id.物品[数据.道具])
    玩家数据[id].道具.数据[道具编号].数量=数据.数量
    玩家数据[id].角色.数据.道具[临时格子]=道具编号
    if 对方id.物品[数据.道具].可叠加==false or 对方id.物品[数据.道具].数量==nil then
      对方id.物品[数据.道具]=nil
    else
      对方id.物品[数据.道具].数量=对方id.物品[数据.道具].数量-数据.数量--1
      if 对方id.物品[数据.道具].数量<=0 then
        对方id.物品[数据.道具]=nil
      end
    end
    道具刷新(id)
  elseif 数据.道具==nil then--宠物
    if 对方id.bb==nil or (对方id.bb~=nil and 对方id.bb[数据.bb]==nil)then
      常规提示(id,"#Y/这只召唤兽不存在1")
      return
    elseif 玩家数据[id].角色:取新增宝宝数量()==false then
      常规提示(id,"#Y/你当前可携带的召唤兽数量已达上限！")
      return
    end
    local 价格=对方id.bb[数据.bb].价格
    if 玩家数据[id].角色.数据.银子<价格 then
      常规提示(id,"#Y/你没有那么多的银子")
      return
    end
    local 道具名称=对方id.bb[数据.bb].名称
    local 道具等级=对方id.bb[数据.bb].等级
    local 道具模型=对方id.bb[数据.bb].模型
    local 道具技能=#对方id.bb[数据.bb].技能
    local 道具识别码=对方id.bb[数据.bb].认证码
    玩家数据[id].角色:扣除银子(价格,0,0,"摊位购买",1)
    玩家数据[id].角色:日志记录(format("[摊位系统-购买]购买召唤兽[%s][%s][%s][%s][%s]，花费%s两银子,出售者信息：[%s][%s][%s]",道具名称,道具模型,道具等级,道具技能,道具识别码,价格,账号,对方id,名称))
    常规提示(id,"#W/购买#R/"..道具名称.."#W/成功！")
    玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据+1]=table.loadstring(table.tostring(对方id.bb[数据.bb]))
    local 宝宝=宝宝类.创建()
    宝宝:加载数据(玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据])
    玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据]=宝宝
    table.remove(对方id.bb,数据.bb)
    发送数据(玩家数据[id].连接id,3512,玩家数据[id].召唤兽.数据)
  end
  发送数据(玩家数据[id].连接id, 3520, 玩家数据[id].角色.数据.银子)
  摆摊假人处理类.npcUserList["" .. 玩家的ID].更新=os.time()
  玩家数据[id].摊位查看=os.time()
  玩家数据[id].摊位id=玩家的ID
  摆摊假人处理类:索要摊位(玩家数据[id].连接id, 玩家的ID)
end

function 假人玩家处理类:给予书铁(id,等级)--随机获取  (id,{10,15}) 表示 100级到150级的
  local 书铁范围 = {"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
  local 临时随机=取随机数()
  local 书铁名称="百炼精铁"
  if 临时随机<=50 then
    书铁名称="制造指南书"
  end
  local 书铁等级=取随机数(等级[1]*10,等级[2]*10)
  local 书铁种类=取随机数(1,#书铁范围)
  书铁等级=math.floor(书铁等级/10)*10
  return self:摆摊数据库输出(id,书铁名称,书铁等级,书铁种类)
end

function 假人玩家处理类:摆摊数据库输出(假人id,名称,数量,参数,附加,专用)
  local 识别码=假人id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  local 摆摊数据 = nil
  摆摊数据=物品类()
  摆摊数据:置对象(名称)
  临时道具 = 取物品数据(名称)
  临时道具.总类=临时道具[2]
  临时道具.子类=临时道具[4]
  临时道具.分类=临时道具[3]
  if 名称=="点化石" then
      if 取随机数(1,100)<=1 then
      摆摊数据.附带技能="剑荡四方"
    elseif 取随机数(1,100)<=5 then
      摆摊数据.附带技能=取高级要诀()
    else
      摆摊数据.附带技能=取低级要诀()
    end
  elseif 名称=="藏宝图" or 名称=="高级藏宝图" then
    local 随机地图={1501,1506,1092,1091,1110,1142,1514,1174,1173,1146,1208}
    local 临时地图=随机地图[取随机数(1,#随机地图)]
    摆摊数据.地图名称=取地图名称(临时地图)
    摆摊数据.地图编号=临时地图
    local xy=地图处理类.地图坐标[临时地图]:取随机点()
    摆摊数据.x=xy.x
    摆摊数据.y=xy.y
  elseif 名称=="神兜兜" then
    摆摊数据.数量=数量
  elseif 名称=="珍珠" then
    摆摊数据.级别限制=数量
  elseif 名称=="清灵净瓶" then
      摆摊数据.数量=数量
  elseif 名称=="魔兽要诀" then
  摆摊数据.附带技能=取低级要诀()
  elseif 名称=="高级魔兽要诀" then
  if 参数==nil then
  摆摊数据.附带技能=取高级要诀()
  else
  摆摊数据.附带技能=参数
  end
  elseif 名称=="百炼精铁" then
  摆摊数据.子类=数量
  elseif 名称=="制造指南书" then
  摆摊数据.子类=数量
  摆摊数据.特效=参数
  elseif 临时道具.总类==5 and  临时道具.分类==4 then
    摆摊数据.级别限制=数量
  elseif 临时道具.总类==5 and  临时道具.分类==6 then
    摆摊数据.级别限制=数量
  elseif 临时道具.总类==1 and 临时道具.子类==1 and 临时道具.分类==4 then
  摆摊数据.阶品=参数
  end
  if 摆摊数据.可叠加 then
    摆摊数据.数量=数量
  end
  摆摊数据.识别码=识别码
  return 摆摊数据
end

return 假人玩家处理类