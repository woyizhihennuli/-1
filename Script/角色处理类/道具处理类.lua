-- @Author: 作者QQ390152400
-- @Date:   2023-03-10 11:49:54
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-02-01 19:13:17
local 道具处理类 = class()
local 书铁范围 = {"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
local 图策范围={"项圈","护腕","铠甲"}
local qz=math.floor
local floor=math.floor
local remove = table.remove
local 已存在=false
function 道具处理类:初始化(id)
  self.玩家id=id
  self.数据={}
  self.阵法名称={
    [3]="普通",
    [4]="风扬阵",
    [5]="虎翼阵",
    [6]="天覆阵",
    [7]="云垂阵",
    [8]="鸟翔阵",
    [9]="地载阵",
    [10]="龙飞阵",
    [11]="蛇蟠阵",
    [12]="鹰啸阵",
    [13]="雷绝阵",
  }
  self.飞行传送点={
    [1]={1001,336,217},
    [2]={1001,358,35},
    [3]={1501,65,112},
    [4]={1092,122,54},
    [5]={1070,106,158},
    [6]={1040,108,98},
    [7]={1226,117,48},
    [8]={1208,128,36},
  }
end

function 道具处理类:数据处理(连接id,序号,数字id,数据)
   if 假人系统 then
    if BoothCtrl:MsgCtrl(连接id, 序号, 数字id, 数据) then
      --table.print(数据)
      return
    end
  end

  if 玩家数据[数字id].摊位数据~=nil then
    if 序号~=3699 and 序号~=3700 and 序号~=3720 and 序号~=3721 and 序号~=3722 and 序号~=3723 and 序号~=3724  then
      常规提示(数字id,"#Y/摆摊状态下禁止此种行为")
      return
    end
  end
  if 序号==3699 then
     self:索要道具(连接id,数字id)
  elseif 序号==3699.1 then
     self:多开索要道具(连接id,数据.多开id)
  elseif 序号==3699.2 then--多开提取道具
     --self:多开索要道具(连接id,数据.多开id)
     self:多开提取(连接id,数据)
  elseif 序号==3700 then
    self:索要行囊(连接id,数字id)
  elseif 序号==3700.1 then
    self:多开索要行囊(连接id,数据.多开id)
  elseif 序号==3701 then
    self:道具格子互换(连接id,数字id,数据)
  elseif 序号==3701.1 then
    self:道具格子互换1(连接id,数字id,数据)
  elseif 序号==3701.9 then
    self:多开道具格子互换1(连接id,数据.多开id,数据,数字id)
  elseif 序号==3702 then
    self:丢弃道具(连接id,数字id,数据)
  elseif 序号==3702.1 then
    self:多开丢弃道具(连接id,数据.多开id,数据,数字id)
  elseif 序号==3703 then
    self:佩戴装备(连接id,数字id,数据)
  elseif 序号==3703.1 then
    self:多开佩戴装备(连接id,数据.多开id,数据,数字id)
  elseif 序号==3704 then
    self:卸下装备(连接id,数字id,数据)
  elseif 序号==3704.1 then
    self:多开卸下装备(连接id,数据.多开id,数据,数字id)
  elseif 序号==3705 then
    self:使用道具(连接id,数字id,数据)
  elseif 序号==3705.1 then
    self:使用道具(连接id,数据.多开id,数据,数字id)
  elseif 序号==3706 then
    self:飞行符传送(连接id,数字id,数据)
  elseif 序号==3707 then
    发送数据(连接id,14,玩家数据[数字id].道具:索要道具1(数字id))
  elseif 序号==3708 then
    self:佩戴bb装备(连接id,数字id,数据)
  elseif 序号==3708.1 then
    self:多开佩戴bb装备(连接id,数据.多开id,数据,数字id)
  elseif 序号==3709 then
    self:卸下bb装备(连接id,数字id,数据)
  elseif 序号==3709.1 then
    self:多开卸下bb装备(连接id,数据.多开id,数据,数字id)
  elseif 序号==3710 then
    self:染色处理(连接id,数字id,数据)
  elseif 序号==3711 then
    玩家数据[数字id].角色:学习门派技能(连接id,数字id,数据.序列)
  elseif 序号==3711.1 then
    玩家数据[数字id].角色:学习十次门派技能(连接id,数字id,数据.序列)

  elseif 序号==3712 then
    玩家数据[数字id].角色:学习生活技能(连接id,数字id,数据.序列)
  elseif 序号==3712.1 then
    if 强化技能 then
      玩家数据[数字id].角色:学习强化技能(连接id,数字id,数据.序列)
    end
  elseif 序号==3713 then
    self:烹饪处理(连接id,数字id,数据)
  elseif 序号==3714 then
    self:炼药处理(连接id,数字id,数据)
  elseif 序号==3715 then
    self:给予处理(连接id,数字id,数据)
  elseif 序号==3716 then --请求给予
    玩家数据[数字id].给予数据={类型=2,id=数据.id+0}
    发送数据(连接id,3507,{道具=self:索要道具1(数字id),名称=玩家数据[数据.id+0].角色.数据.名称,类型="玩家",等级=玩家数据[数据.id+0].角色.数据.等级})
   -- self:给予处理(连接id,数字id,数据)
  elseif 序号==3717 then
   self:设置交易数据(连接id,数字id,数据)
  elseif 序号==3718 then
   self:发起交易处理(连接id,数字id,数据.id)
  elseif 序号==3719 then
   self:取消交易(数字id)
  elseif 序号==3720 then --自己创建、索要摊位
    self:索要摊位数据(连接id,数字id,3515)
  elseif 序号==3721 then --更改招牌
    self:更改摊位招牌(连接id,数字id,数据.名称)
  elseif 序号==3722 then --上架
    self:摊位上架商品(连接id,数字id,数据)
  elseif 序号==3723 then --下架
    self:摊位下架商品(连接id,数字id,数据)
  elseif 序号==3724 then --收摊
    self:收摊处理(连接id,数字id)
  elseif 序号==3725 then --索取其他玩家摊位
    self:索要其他玩家摊位(连接id,数字id,数据.id,3521)
  elseif 序号==3726 then --购买摊位商品
   self:购买摊位商品(连接id,数字id,数据)
  elseif 序号==3727 then --购买摊位商品
   self:快捷加血(连接id,数字id,数据.类型)
  elseif 序号==3728 then --购买摊位商品
   self:快捷加蓝(连接id,数字id,数据.类型)
  elseif 序号==3729 then --购买摊位商品
    if 数据.序列>#玩家数据[数字id].角色.数据.道具仓库 then
      常规提示(数字id,"#Y/这已经是最后一页了1")
      return
    elseif 数据.序列<1 then
      return
    end
    发送数据(连接id,3524,{道具=self:索要仓库道具(数字id,数据.序列),页数=数据.序列})
  elseif 序号==3730 then
    self:仓库存放事件(连接id,数字id,数据)
  elseif 序号==3731 then
    self:仓库取走事件(连接id,数字id,数据)
  elseif 序号==3732 then
   self:索要法宝(连接id,数字id)
  elseif 序号==3732.1 then --多开
   self:多开索要法宝(连接id,数据.多开id)
  elseif 序号==3733 then
   self:修炼法宝(连接id,数字id,数据.序列)
  elseif 序号==3733.1 then
   self:多开修炼法宝(连接id,数据.多开id,数据.序列,数字id)
  elseif 序号==3734 then
   self:卸下法宝(连接id,数字id,数据.序列)
  elseif 序号==3734.1 then
   self:多开卸下法宝(连接id,数据.多开id,数据.序列,数字id)
  elseif 序号==3735 then
   self:替换法宝(连接id,数字id,数据.序列,数据.序列1)
  elseif 序号==3736 then
   self:使用法宝(连接id,数字id,数据.序列)
  elseif 序号==3736.1 then
   self:多开使用法宝(连接id,数据.多开id,数据.序列,数字id)
  elseif 序号==3737 then
   self:使用合成旗(连接id,数字id,数据.序列)
  elseif 序号==3738 then
   self:完成交易处理(数字id)
  elseif 序号 == 3739 then
   self:出售道具(连接id,数字id,数据)
  elseif 序号 == 3740 then
    -- if 数据.存入金额==nil then
    --     return
    -- end
    -- if 玩家数据[数字id].角色.数据.银子 < 数据.存入金额 then
    --     常规提示(数字id,"#Y你的现金貌似没有那么多哦")
    --     return
    -- end
    -- 玩家数据[数字id].角色.数据.银子 = 玩家数据[数字id].角色.数据.银子 - 数据.存入金额
    -- 玩家数据[数字id].角色.数据.存银 = 玩家数据[数字id].角色.数据.存银 + 数据.存入金额
    -- 常规提示(数字id,"#Y当前已经将#R"..数据.存入金额.."#Y两银子存入到小金库了！")
    -- 发送数据(数字id,72,{银子=玩家数据[数字id].角色.数据.银子,存银=玩家数据[数字id].角色.数据.存银})
  elseif 序号 == 3741 then
    -- if 数据.取出金额==nil then
    --     return
    -- end
    -- if 数据.取出金额 > 玩家数据[数字id].角色.数据.存银 then
    --     常规提示(数字id,"#Y你的存款貌似没有那么多哦")
    --     return
    -- end
    -- 玩家数据[数字id].角色.数据.银子 = 玩家数据[数字id].角色.数据.银子 + 数据.取出金额
    -- 玩家数据[数字id].角色.数据.存银 = 玩家数据[数字id].角色.数据.存银 - 数据.取出金额
    -- 常规提示(数字id,"#Y你已经从小金库取出#R"..数据.取出金额.."#Y两银子！")
    -- 发送数据(数字id,72,{银子=玩家数据[数字id].角色.数据.银子,存银=玩家数据[数字id].角色.数据.存银})
  elseif 序号 == 3742 then
    local 仓库上限 = 20
    if 取银子(数字id) < 5000000 then
        常规提示(数字id,"#Y你银子不够开启仓库哦！")
        return
    end
    if #玩家数据[数字id].角色.数据.道具仓库 >= 仓库上限 then
        常规提示(数字id,"#Y你当前仓库数量已达上限！")
        return
    end
    玩家数据[数字id].角色:扣除银子(5000000,0,0,"扩充仓库",1)
    玩家数据[数字id].角色.数据.道具仓库[#玩家数据[数字id].角色.数据.道具仓库 + 1]={}
    常规提示(数字id,"#Y仓库扩充成功，当前数量为#R"..#玩家数据[数字id].角色.数据.道具仓库.."#Y个，还可以扩充#R"..仓库上限-#玩家数据[数字id].角色.数据.道具仓库.."#Y个！")
  elseif 序号 == 3743 then
    self:帮派点修处理(连接id,数字id,数据)
  elseif 序号 == 3744 then
    玩家数据[数字id].角色:帮派学习生活技能(连接id,数字id,数据.序列)
  elseif 序号 == 3745 then
    self:武器染色处理(连接id,数字id,数据)
  elseif 序号==3746 then
    if 玩家数据[数字id].角色.数据.门派=="无门派" or 玩家数据[数字id].角色.数据.门派==nil then
        常规提示(数字id,"#Y你当前没有门派无法打开经脉系统！")
        return
    end
    发送数据(玩家数据[数字id].连接id, 77, 玩家数据[数字id].角色:经脉处理(数字id))
  elseif 序号==3747 then
    if 数据.多开id~=nil then
       数字id=数据.多开id
    end
    玩家数据[数字id].角色:清空奇经八脉(数字id)
  elseif 序号==3748 then
    self:符石合成处理(连接id,数字id,数据)
  elseif 序号==3749 then
    self:坐骑染色处理(连接id,数字id,数据)
  elseif 序号==3750 then
    self:穿戴饰品(连接id,数字id,数据)
  elseif 序号==3751 then
    self:坐骑饰品染色处理(连接id,数字id,数据)
  elseif 序号==3752 then
    玩家数据[数字id].角色:更改角色名字(数字id,数据)
elseif 序号 == 3752.1 then


    --玩家数据[数字id].角色:删除角色(数字id,数据)
  elseif 序号==3753 then
    self:卸下饰品(连接id,数字id,数据)
  elseif 序号==3753.1 then
    self:多开卸下饰品(连接id,数据.多开id,数据,数字id)
  elseif 序号==3754 then
    self:法宝合成(连接id,数字id,数据)
  elseif 序号==3755 then
    self:神秘宝箱处理(连接id,数字id,数据)
    -- elseif 序号==3755.1 then
    -- self:高级神秘宝箱处理(连接id,数字id,数据)
  elseif 序号==3756 then
      发送数据(玩家数据[数字id].连接id,3513,玩家数据[数字id].道具:索要道具5(数字id,"道具"))
      发送数据(玩家数据[数字id].连接id,3523,{道具=玩家数据[数字id].道具:索要仓库道具(数字id,1),道具仓库总数=#玩家数据[数字id].角色.数据.道具仓库,召唤兽仓库总数=#玩家数据[数字id].召唤兽仓库.数据})
  elseif 序号==3757 then
    --self:仙玉神秘宝箱处理(连接id,数字id,数据)
  elseif 序号==3757.1 then
    --神秘宝箱[数字id]=nil
  elseif 序号==3758 then
    --self:钥匙神秘宝箱处理(连接id,数字id,数据)
  elseif 序号==3759 then
    --self:吊游定制宝箱处理(连接id,数字id,数据)
  elseif 序号==3767 then
    发送数据(玩家数据[数字id].连接id,3548,{道具=self:索要道具1(数字id)})
  elseif 序号==3768 then
    self:装备点化套装(连接id,数字id,数据)
  elseif 序号==3860 then -- 仓库购买费用这边提示修改
    local 对话=[[增加物品仓库数量需要支付20点仙玉，每增加一间仓库将额外消耗（已增加仓库数量*20）点仙玉。本次增加仓库需要消耗#R]]..((#玩家数据[数字id].角色.数据.道具仓库-3)*20+20).."#W点仙玉，你是否需要进行购买仓库操作？"
    发送数据(玩家数据[数字id].连接id,1501,{名称=玩家数据[数字id].角色.数据.名称,模型=玩家数据[数字id].角色.数据.模型,对话=对话,选项={"确定购买仓库","让我再想想"}})
  elseif 序号==3861 then
    发送数据(玩家数据[数字id].连接id,3513,玩家数据[数字id].道具:索要道具5(数字id,数据.道具类型))
    发送数据(连接id,3525)
  elseif 序号==3803 then
    self:获取助战(连接id,数字id)

------------------------------------------------------------------------------一键出售----------------------------------------
     elseif 序号==3789 then
      玩家数据[数字id].道具:判断一键出售道具(连接id,数字id)

    elseif 序号==3789.1 then
      --玩家数据[数据.多开id].道具:多开判断一键出售道具(连接id,数据.多开id,数字id)
      玩家数据[数据.多开id].道具:多开一键出售道具(连接id,数据.多开id,数字id)
------------------------------------------------------------------------------一键出售----------------------------------------
  --整理背包
  elseif 序号==3790 then
    self:整理背包仓库(数字id,数据.类型)
    -- 玩家数据[数字id].道具:整理背包(数字id,数据)
  elseif 序号==3790.1 then
    self:多开整理背包仓库(数字id,数据.类型,数据.多开id)
  elseif 序号==3791 then
    self:整理背包仓库(数字id,"仓库",数据.道具类型)
    -- 玩家数据[数字id].道具:整理仓库(数字id)
   -- 常规提示(数字id,"整理仓库暂不能用")
  elseif 序号==3773 then
    self:发送内充抽奖(连接id,数字id,数据)
  elseif 序号==3774 then  ----------抽奖
    self:抽取物品(连接id,数字id,数据)
  elseif 序号==3775 then
    self:领取内充银子(连接id,数字id,数据)
      elseif 序号==3776 then
    玩家数据[数字id].角色:更改角色名字(数字id,数据)
  elseif 序号==3777.123 then
    玩家数据[数字id].角色:检查安全码(数字id,数据)
  elseif 序号==3777.1 then
    玩家数据[数字id].角色:设置安全码(数字id,数据)
      elseif 序号==3777 then
    玩家数据[数字id].角色:安全码验证(数字id,数据)
  elseif 序号==3778 then
    玩家数据[数字id].角色:更改帐号密码(数字id,数据)
  elseif 序号==3800 then
    if 数据.类型=="道具" then
        玩家数据[数字id].符石镶嵌=玩家数据[数字id].角色.数据.道具[数据.装备]
    else
        玩家数据[数字id].符石镶嵌=玩家数据[数字id].角色.数据.行囊[数据.装备]
    end
    发送数据(玩家数据[数字id].连接id,3550,{装备=self.数据[玩家数据[数字id].符石镶嵌]})
  elseif 序号==3801 then
      self:装备镶嵌符石(数字id,数据.内容)
  elseif 序号==3802 then
      self:翻转星石对话(数字id)
  elseif 序号==3804 then
      self:合成符石(连接id,数字id,数据)
  elseif 序号==3805 then
      发送数据(玩家数据[数字id].连接id,3552,{道具=玩家数据[数字id].道具:索要道具1(数字id)})
  elseif 序号==3810 then
      self:炼化铃铛(玩家数据[数字id].连接id,数字id,数据)
  elseif 序号==3811 then
      self:领取铃铛奖励(玩家数据[数字id].连接id,数字id,数据)



     -- elseif 序号==3813 then --GM工具
     --  发送数据(玩家数据[数字id].连接id,145,玩家数据[数字id].道具:索要道具2(数字id))


     elseif 序号==3814 then --武神坛我要银子
      玩家数据[数字id].角色:添加银子(1000000000,"武神坛",1)
      常规提示(数字id,"#Y/你获得了10亿银子！")

     elseif 序号==3815 then --武神坛我要仙玉
      添加仙玉(1000000000,玩家数据[数字id].账号,数字id,"武神坛")
      常规提示(数字id,"#Y/你获得了10亿仙玉！！")

     elseif 序号==3816 then --武神坛我要经验
      玩家数据[数字id].角色:添加经验(1000000000,"武神坛")
      常规提示(数字id,"#Y/你获得了10亿经验！！")


     elseif 序号==3817 then --超级合成旗
     self:使用超级合成旗(连接id,数字id,数据)








 ------------------------------------------------------------------------------------
  end
end

function 道具处理类:领取铃铛奖励(连接id,数字id,数据)
  if 铃铛记录[数字id] == nil then
    常规提示(数字id,"该奖励已经被领取，请勿重复领取")
  end
  local 选中=数据.选中+0
  local 选中道具=铃铛记录[数字id][选中]
  玩家数据[数字id].道具:给予道具(数字id,选中道具.名称,选中道具.数量 or 1,选中道具.阶品)
  铃铛记录[数字id]=nil
  常规提示(数字id,"恭喜你获得了#R"..选中道具.名称)
  if 选中道具.名称 == "高级魔兽要诀" or 选中道具.名称 == "特赦令牌" or 选中道具.名称 == "高级召唤兽内丹" or 选中道具.名称 == "九转金丹" or 选中道具.名称 == "神兜兜" then
	广播消息({内容=format("#S(降妖伏魔)#Y恭喜玩家#R/%s#Y鸿运当头，在炼化铃铛时获得了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[数字id].角色.数据.名称,选中道具.名称),频道="xt"})
  end
end

function 道具处理类:炼化铃铛(连接id,数字id,数据)
  local 道具id = 数据.铃铛+0
  local 铃铛数量 = self.数据[道具id].数量
  local 铃铛炼化数 = 数据.类型+0
  if 铃铛数量 < 铃铛炼化数 then
    常规提示(数字id,"你没有那么多铃铛！")
    return
  end
  self.数据[道具id].数量=self.数据[道具id].数量-铃铛炼化数
  local 临时数量=self.数据[道具id].数量
  if self.数据[道具id].数量 <= 0 then
    self.数据[道具id] = nil
  end
  道具刷新(数字id)
  self:刷新铃铛奖励(数字id,数据.类型+0)
  发送数据(连接id,3901,{物品id=道具id,铃铛个数=临时数量,奖励数据=铃铛记录[数字id]})
end

function 道具处理类:刷新铃铛奖励(数字id,铃铛数量)
  local x临时物品 = {}
  local id=数字id+0
  if 铃铛数量==nil then
    铃铛记录[id]=x临时物品
    return
  end

  for i=1,10 do
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"魔兽要诀",1)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"藏宝图",1)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"青龙石",铃铛数量*3)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"玄武石",铃铛数量*3)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"朱雀石",铃铛数量*3)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"白虎石",铃铛数量*3)
    x临时物品[#x临时物品+1]=铃铛奖励生成(id,"金银锦盒",铃铛数量*5)
  end
  if 铃铛数量>=2 then
    for i=1,10 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"彩果",铃铛数量)
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"金柳露",铃铛数量*2)
    end
    for i=1,5 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"召唤兽内丹",1)
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"超级金柳露",math.floor(铃铛数量/2))
    end
  end
  if 铃铛数量>=3 then
    for i=1,5 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"神兜兜",math.floor(铃铛数量/2))
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"召唤兽内丹",1)
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"超级金柳露",铃铛数量)
    end
    for i=1,10 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"九转金丹",铃铛数量*50)
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"修炼果",1)
    end
  end
  if 铃铛数量>=4 then
    for i=1,3 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"高级魔兽要诀",1)
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"特赦令牌",1)
    end
  end
  if 铃铛数量>=5 then
    for i=1,3 do
      x临时物品[#x临时物品+1]=铃铛奖励生成(id,"高级召唤兽内丹",1)
    end
  end
  随机排序(x临时物品)
  铃铛记录[id]=x临时物品
end

function 道具处理类:装备翻转星石(数字id)
  local id = 数字id + 0

    local 装备道具 = self.数据[玩家数据[id].符石镶嵌]

    if 装备道具==nil then
    常规提示(id,"你没有这样的装备！")
    return
  elseif 装备道具.总类~=2 or 装备道具.灵饰 or 装备道具.分类==9 or 装备道具.分类==8 or 装备道具.分类==7 then
    常规提示(id,"我这里目前只能点化人物装备的星位，其它的我可没那么大的能耐。")
    return
  elseif not 装备道具.星位组 or 装备道具.星位==nil or 装备道具.星位[6]==nil then
    常规提示(id,"装备数据错误，请重新打开界面！")
    return
  end
  for n=1,6 do
    if 玩家数据[id].角色.数据.装备[n] == 玩家数据[id].符石镶嵌 then
         常规提示(id,"穿戴上的装备不能进行翻转")
         return
    end
  end
  if 玩家数据[id].角色:扣除体力(100,nil,1) then
    if 装备道具.星位组 and 装备道具.星位~=nil and 装备道具.星位[6]~=nil then
      if 装备道具.星位[6].阴阳 ==1 then
        装备道具.星位[6].阴阳 = 2
        装备道具.星位[6].颜色 = 取星位颜色(装备道具.分类)[2]
      else
        装备道具.星位[6].阴阳 = 1
        装备道具.星位[6].颜色 = 取星位颜色(装备道具.分类)[1]
      end
      装备道具.星位[6].相互 = nil
      local 等级计算 = 0
      for n=1,5 do
        if  装备道具.星位~=nil and 装备道具.星位[n]~=nil then
          等级计算 = 等级计算 + 装备道具.星位[n].符石等级
        end
      end
      if 等级计算~=0 then
        if 等级计算%2==0 then
          --偶数 反面
          if 装备道具.星位[6].阴阳==2 then
            装备道具.星位[6].相互={}
            装备道具.星位[6].相互[取星位相互(装备道具.分类)]=2
          end
        else
          if 装备道具.星位[6].阴阳==1 then
            装备道具.星位[6].相互={}
            装备道具.星位[6].相互[取星位相互(装备道具.分类)]=2
          end
        end
      end
    end
    常规提示(id,"翻转星位成功。")
    道具刷新(id)
    玩家数据[id].角色:刷新信息()
    -- 发送数据(玩家数据[id].连接id,777,玩家数据[id].角色:取套装数据())
    发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
    发送数据(玩家数据[id].连接id,3550,{装备=装备道具})
  else
    常规提示(id,"体力不足，无法翻转")
  end
end

function 道具处理类:翻转星石对话(id,道具id)
  local 装备道具 = self.数据[玩家数据[id].符石镶嵌]
    if 装备道具==nil then
    常规提示(id,"你没有这样的装备！")
    return
  elseif 装备道具.总类~=2 or 装备道具.灵饰 or 装备道具.分类==9 or 装备道具.分类==8 or 装备道具.分类==7 then
    常规提示(id,"我这里目前只能点化人物装备的星位，其它的我可没那么大的能耐。")
    return
  elseif not 装备道具.星位组 or 装备道具.星位==nil or 装备道具.星位[6]==nil then
    常规提示(id,"装备数据错误，请重新打开界面！")
    return
  end
  local 对话="#W/确定要将星石翻转吗？翻转星石不会引起星石自身属性变化，请放心操作。"
  local xx={"消耗100体力进行翻转","取消"}
    玩家数据[id].最后对话={}
  玩家数据[id].最后对话.名称="翻转星石"
  玩家数据[id].最后对话.模型=玩家数据[id].角色.模型
  发送数据(玩家数据[id].连接id,1501,{名称="翻转星石",模型=玩家数据[id].角色.模型,对话=对话,选项=xx})
end

function 道具处理类:合成符石(连接id,数字id,数据)
  local id = 数字id
  local 物品 = 数据.材料
  local 卷轴 = 0
  local 卷轴道具 = 0
  local 符石 = {}
  local 符石道具 = {}
  local f1,f2,f3=0,0,0
  local 玩家道具栏 = 玩家数据[id].角色.数据.道具
  ---
  local 道具格子 = 玩家数据[id].角色:取道具格子()
  if 道具格子 == 0 then
    常规提示(id,"你的道具栏已经满了,保留至少一格以上的位置进行合成哦")
    return
  end
  if 玩家数据[id].角色.数据.体力<40 then
    常规提示(id,"合成符石至少需要40点体力哦。")
    return
  end
  for k,v in pairs(物品) do
    if self.数据[玩家道具栏[v]]~=nil and self.数据[玩家道具栏[v]].总类 == 889 and self.数据[玩家道具栏[v]].分类 == 2 then
      if self.数据[玩家道具栏[v]].子类==6 then
        卷轴 = 玩家道具栏[v]
        卷轴道具 = v
      else
        符石[#符石+1] = 玩家道具栏[v]
        符石道具[#符石道具+1] = v
        if self.数据[符石[#符石]].子类==1 then
          f1=f1+1
        elseif self.数据[符石[#符石]].子类==2 then
          f2=f2+1
        elseif self.数据[符石[#符石]].子类==3 then
          f3=f3+1
        end
      end
    else
      常规提示(id,"少侠，给的物品不对哦。")
        return
    end
  end
  -- print(f1,f2,f3,卷轴)
  local 是否合成 = false
  if f1>=1 and f1+f2==3 and f3==0 and 卷轴==0 then -- 合成二级符石
    是否合成 = 1
  elseif f2>=1 and f2+f3==2 and 卷轴~=0 and f1==0 then -- 合成三级符石
    是否合成 = 2
  elseif f3>=2 and 卷轴~=0 and f2==0 and f1==0 then  --合成新三符石
    是否合成 = 3
  elseif f3>=1 and f1+f2+f3==3 and 卷轴~=0 then --合成4级符石
    是否合成 = 4
  else
    常规提示(id,"请仔细查看放入的材料是否正确。")
    return
  end
  玩家数据[id].角色:扣除体力(40,nil,1)
  local 概率范围 = 取随机数(1,1000)
  if 是否合成 == 1 then
    local 成功率 = 800
    if 概率范围 <= 成功率 then
      for i=1,#符石 do
        self.数据[符石[i]] = nil
        玩家道具栏[符石道具[i]] = nil
      end
      玩家数据[id].道具:给予道具(id,"未激活的符石",2)
      常规提示(id,"合成成功")
    else
      for i=1,#符石 do
        if 50 <= 取随机数(1,100) then
          self.数据[符石[i]] = nil
          玩家道具栏[符石道具[i]] = nil
          break
        elseif i==#符石 then
          self.数据[符石[i]] = nil
          玩家道具栏[符石道具[i]] = nil
          break
        end
      end
      道具刷新(id)
      常规提示(id,"合成失败，你因此随机损失了一个符石")
    end
  elseif 是否合成 == 2 then
    local 成功率 = 600
    if  概率范围 <= 成功率 then
      for i=1,#符石 do
        self.数据[符石[i]]=nil
        玩家道具栏[符石道具[i]] = nil
      end
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
        玩家道具栏[卷轴道具] = nil
      end
      玩家数据[id].道具:给予道具(id,"未激活的符石",3)
      常规提示(id,"合成成功")
    else
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
      end
      道具刷新(id)
      常规提示(id,"合成失败，你因此损失了一个符石卷轴")
    end
  elseif 是否合成 == 3 then
    local 成功率 = 200
    if 概率范围 <= 成功率 then
      for i=1,#符石 do
        self.数据[符石[i]]=nil
        玩家道具栏[符石道具[i]] = nil
      end
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
        玩家道具栏[卷轴道具] = nil
      end
      local 获取符石 = 新三级符石[取随机数(1,#新三级符石)]
      玩家数据[id].道具:给予道具(id,"未激活的符石",3,获取符石)
      常规提示(id,"合成成功")
    else
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
        玩家道具栏[卷轴道具] = nil
      end
      for i=1,#符石 do
        if 50 <= 取随机数(1,100) then
          self.数据[符石[i]] = nil
          玩家道具栏[符石道具[i]] = nil
          break
        else
          self.数据[符石[i]] = nil
          玩家道具栏[符石道具[i]] = nil
          break
        end
      end
      道具刷新(id)
      常规提示(id,"合成失败，你因此损失了一个符石卷轴及一颗符石")
    end
  elseif 是否合成 == 4 then
    local 成功率 = 400
    if 概率范围 <= 成功率 then

      for i=1,#符石 do
        self.数据[符石[i]]=nil
        玩家道具栏[符石道具[i]] = nil
      end
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
        玩家道具栏[卷轴道具] = nil
      end
      玩家数据[id].道具:给予道具(id,"未激活的星石")
      常规提示(id,"合成成功")
    else
      self.数据[卷轴].数量 = self.数据[卷轴].数量-1
      if self.数据[卷轴].数量 < 1 then
        self.数据[卷轴] = nil
        玩家道具栏[卷轴道具] = nil
      end
      道具刷新(id)
      常规提示(id,"合成失败，你因此损失了一个符石卷轴")
    end
  end
end

function 道具处理类:装备镶嵌符石(数字id,数据)
  local id = 数字id + 0
    local 装备道具 = self.数据[玩家数据[id].符石镶嵌]
  local 符石操作序列 = 数据
  local 星石操作 = nil
  --判断装备是否可以镶嵌
  for n=1,6 do
    if 玩家数据[id].角色.数据.装备[n] == 玩家数据[id].符石镶嵌 then
         常规提示(id,"穿戴上的装备不能进行镶嵌")
         return
    end
  end
  if 装备道具==nil then
    常规提示(id,"你没有这样的装备！")
    return
  elseif 装备道具.总类~=2 or 装备道具.灵饰 or 装备道具.分类==9 or 装备道具.分类==8 or 装备道具.分类==7 then
    常规提示(id,"我这里目前只能点化人物装备的星位，其它的我可没那么大的能耐。")
    return
  end
  --
    if not 判断是否为空表(符石操作序列) then
      local 重复 = false
      for k,v in pairs(符石操作序列) do
      if 重复 then
        break
      end
          if v.方式=="镶嵌" then
            local 临时数据 = nil
            if v.背包类型=="道具" then
                临时数据=玩家数据[数字id].角色.数据.道具[v.物品id]
            else
                临时数据=玩家数据[数字id].角色.数据.行囊[v.物品id]
            end
            if self.数据[临时数据]==nil then
          常规提示(id,"道具数据异常，请重新打开界面进行操作。")
          return
            end
            if k<=5 and (self.数据[临时数据].总类~=889 or self.数据[临时数据].分类~=88) then
          常规提示(id,"镶嵌需要符石，请给予我符石道具。")
          return
        elseif k==6 and (self.数据[临时数据].总类~=889 or self.数据[临时数据].分类~=91) then
              常规提示(id,"镶嵌需要星石，请给予我星石道具。")
          return
            end
            for n,i in pairs(符石操作序列) do
          if k~=n and i.方式=="镶嵌" and v.背包类型==i.背包类型 and v.物品id==i.物品id then
            重复=true
            break
          end
            end
          end
      end
      if not 重复 then
      if 装备道具.星位==nil then
        装备道具.星位={组合="",部位="无",门派="无"}
      end
      for k,v in pairs(符石操作序列) do
        if v.方式=="扣除" then
          装备道具.星位[k]=nil
        elseif v.方式=="镶嵌" then
          local 临时数据 = nil
          if v.背包类型=="道具" then
            临时数据=玩家数据[数字id].角色.数据.道具[v.物品id]
          else
            临时数据=玩家数据[数字id].角色.数据.行囊[v.物品id]
          end
          if k==6 then
            装备道具.星位[k] = {}
            装备道具.星位[k].名称 = self.数据[临时数据].名称
            装备道具.星位[k].颜色 = 取星位颜色(self.数据[临时数据].子类)[2]
            装备道具.星位[k].阴阳 = 2
            local 临时属性 = 取星位属性(self.数据[临时数据].子类)
            装备道具.星位[k].符石属性={}
            装备道具.星位[k].符石属性[临时属性.名称]=临时属性.属性值
          else
            装备道具.星位[k]={颜色=self.数据[临时数据].颜色,名称=self.数据[临时数据].名称,符石属性=self.数据[临时数据].符石属性,符石等级=self.数据[临时数据].子类}
          end
          self.数据[临时数据]=nil
        end
      end
      if 装备道具.星位组 and 装备道具.星位~=nil and 装备道具.星位[6]~=nil then
        装备道具.星位[6].相互 = nil
        local 等级计算 = 0
        for n=1,5 do
          if  装备道具.星位~=nil and 装备道具.星位[n]~=nil then
            等级计算 = 等级计算 + (装备道具.星位[n].符石等级 or 0)
          end
        end
        if 等级计算~=0 then
          if 等级计算%2==0 then
            --偶数 反面
            if 装备道具.星位[6].阴阳==2 then
              装备道具.星位[6].相互={}
              装备道具.星位[6].相互[取星位相互(装备道具.分类)]=2
            end
          else
            if 装备道具.星位[6].阴阳==1 then
              装备道具.星位[6].相互={}
              装备道具.星位[6].相互[取星位相互(装备道具.分类)]=2
            end
          end
        end
      end
          常规提示(id,"镶嵌成功。")
          local 星位数据=取星位组合(装备道具.星位)
      if 星位数据 ~=nil then
        装备道具.星位.组合=星位数据.组合
        装备道具.星位.部位=星位数据.部位
        装备道具.星位.门派=星位数据.门派
        装备道具.星位.组合等级=星位数据.等级
        常规提示(id,"#Y你的这件装备似乎开启了神秘的力量")
      else
        装备道具.星位.组合=nil
        装备道具.星位.部位=nil
        装备道具.星位.门派=nil
        装备道具.星位.组合等级=nil
      end
      if 符石操作序列[6]~=nil then
        星石操作=true
      end
          道具刷新(id)
          玩家数据[id].角色:刷新信息()
      -- 发送数据(玩家数据[id].连接id,777,玩家数据[id].角色:取套装数据())
      -- 发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
          发送数据(玩家数据[id].连接id,3550,{装备=装备道具,星石操作=星石操作})
    else
      常规提示(id,"道具数据异常，请重新打开界面进行操作。")
      return
    end
    else
    常规提示(id,"道具数据异常，请重新打开界面进行操作。")
    return
    end
end

function 道具处理类:抽取物品(连接id,数字id,数据)
  local 道具格子=玩家数据[数字id].角色:取道具格子()
  if  道具格子==0 then
    常规提示(数字id,"您的道具栏物品已经满啦,请先清理包裹")
    return
  end
  local 剩余物品个数 = 0
  local 抽到序号 = 0
  if 玩家数据[数字id].角色.数据.银子< 5000000 then
    常规提示(数字id,"您的余额已不足5000000银子，不能进行抽奖")
    return
  end
  for n,v in pairs(内充抽奖) do
    剩余物品个数=剩余物品个数+1
  end
  if 剩余物品个数>=1 then
    local 物品编号= 取随机数(1,剩余物品个数)
    for i,v in pairs(内充抽奖) do
      抽到序号=抽到序号+1
      if 抽到序号==物品编号 then
        if 内充抽奖[i]=="太阳石" or 内充抽奖[i]=="红玛瑙" or 内充抽奖[i]=="月亮石"or 内充抽奖[i]=="黑宝石"or 内充抽奖[i]=="光芒石"or 内充抽奖[i]=="舍利子"or 内充抽奖[i]=="神秘石"  then
          local 名称=内充抽奖[i]
          local 随机数=取随机数(1,5)
          玩家数据[数字id].道具:给予道具(数字id,名称,随机数)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..随机数.."级"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#1"),频道="sj"})
        elseif 内充抽奖[i]=="星辉石" then
          local 名称="星辉石"
          local 随机数=取随机数(1,5)
          玩家数据[数字id].道具:给予道具(数字id,名称,随机数)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..随机数.."级"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#2"),频道="sj"})
        elseif 内充抽奖[i]=="洗魂符" then
          local 名称="洗魂符"
          玩家数据[数字id].道具:给予道具(数字id,"洗魂符",1,true)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#3"),频道="sj"})
        elseif 内充抽奖[i]=="洗骨符" then
          local 名称="洗骨符"
          玩家数据[数字id].道具:给予道具(数字id,"洗骨符",1,true)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#4"),频道="sj"})
        elseif 内充抽奖[i]=="避水珠" then
          local 名称="避水珠"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#5"),频道="sj"})
        elseif 内充抽奖[i]=="定魂珠" then
          local 名称="定魂珠"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#6"),频道="sj"})
        elseif 内充抽奖[i]=="龙鳞" then
          local 名称="龙鳞"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#7"),频道="sj"})
        elseif 内充抽奖[i]=="金刚石" then
          local 名称="金刚石"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#8"),频道="sj"})
        elseif 内充抽奖[i]=="夜光珠" then
          local 名称="夜光珠"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#9"),频道="sj"})

        elseif 内充抽奖[i]=="小额银票" then
          local 名称="小额银票"
          玩家数据[数字id].道具:给予道具(数字id,名称)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#10"),频道="sj"})
        elseif 内充抽奖[i]=="大额银票" then
          local 名称="大额银票"
          玩家数据[数字id].道具:给予道具(数字id,名称)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#11"),频道="sj"})
        elseif 内充抽奖[i]=="双倍经验丹" then
          local 名称="双倍经验丹"
          玩家数据[数字id].道具:给予道具(数字id,名称,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#12"),频道="sj"})
        elseif 内充抽奖[i]=="储灵袋" then
          local 名称="储灵袋"
          玩家数据[数字id].道具:给予道具(数字id,"储灵袋")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#13"),频道="sj"})

        elseif 内充抽奖[i]=="金柳露" then
          local 名称="金柳露"
          玩家数据[数字id].道具:给予道具(数字id,"金柳露",1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#14"),频道="sj"})

        elseif 内充抽奖[i]=="超级金柳露" then
          local 名称="超级金柳露"
          玩家数据[数字id].道具:给予道具(数字id,"超级金柳露",1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#15"),频道="sj"})

        elseif 内充抽奖[i]=="附魔宝珠" then
          local 名称="附魔宝珠"
          玩家数据[数字id].道具:给予道具(数字id,"附魔宝珠",1,1)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#16"),频道="sj"})

        elseif 内充抽奖[i]=="高级藏宝图" then
          local 名称="高级藏宝图"
          玩家数据[数字id].道具:给予道具(数字id,"高级藏宝图")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#17"),频道="sj"})

        elseif 内充抽奖[i]=="万年·魂骨" then
          local 名称="万年·魂环"
          self:给予道具(数字id,"万年·魂骨",1,"魂骨")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#18"),频道="sj"})

        elseif 内充抽奖[i]=="十万年·魂骨" then
          local 名称="十万年·魂骨"
          self:给予道具(数字id,"十万年·魂骨",1,"魂骨")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#19"),频道="sj"})

        elseif 内充抽奖[i]=="百万年·魂骨" then
          local 名称="百万年·魂骨"
          self:给予道具(数字id,"百万年·魂骨",1,"魂骨")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余"..剩余物品个数.."个#20"),频道="sj"})

        elseif 内充抽奖[i]=="神级·魂骨" then
          local 名称="神级·魂骨"
          self:给予道具(数字id,"神级·魂骨",1,"魂骨")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余"..剩余物品个数.."个#21"),频道="sj"})

        elseif 内充抽奖[i]=="万年·魂环" then
          local 名称="万年·魂环"
          self:给予道具(数字id,"万年·魂环",1,"魂环")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#22"),频道="sj"})

        elseif 内充抽奖[i]=="十万年·魂环" then
          local 名称="十万年·魂环"
          self:给予道具(数字id,"十万年·魂环",1,"魂环")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#23"),频道="sj"})

        elseif 内充抽奖[i]=="百万年·魂环" then
          local 名称="百万年·魂环"
          self:给予道具(数字id,"百万年·魂环",1,"魂环")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余"..剩余物品个数.."个#24"),频道="sj"})

        elseif 内充抽奖[i]=="神级·魂环" then
          local 名称="神级·魂环"
          self:给予道具(数字id,"神级·魂环",1,"魂环")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余"..剩余物品个数.."个#25"),频道="sj"})

        elseif 内充抽奖[i]=="钟灵石" then
          local 名称="钟灵石"
          local 取随机数=取随机数(1,3)
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          玩家数据[数字id].道具:给予道具(数字id,名称,随机数)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."#Y抽奖获得#G"..随机数.."级"..名称.."#Y奖池物品剩余#R"..剩余物品个数.."个#26"),频道="sj"})

        elseif 内充抽奖[i]=="混元一气甲" then
          local 名称="装备"
          礼包奖励类:取随机装备(数字id,160,"无级别限制")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余"..剩余物品个数.."个#27"),频道="sj"})

        elseif 内充抽奖[i]=="星瀚" then
          local 名称="武器"
          礼包奖励类:取随机武器(数字id,160,"无级别限制")
          常规提示(数字id,"恭喜你抽奖获得："..名称)
          广播消息({内容=format("#R【抽奖系统】#Y玩家：#R/"..玩家数据[数字id].角色.数据.名称.."抽奖获得"..名称.."奖池物品剩余#R"..剩余物品个数.."个#28"),频道="sj"})
        end

        内充抽奖[i]=nil
        剩余物品个数=剩余物品个数-1
        玩家数据[数字id].角色.数据.银子=玩家数据[数字id].角色.数据.银子-5000000
        if 剩余物品个数<=1 then
          内充抽奖={[1]="太阳石",[2]="太阳石",[3]="太阳石",[4]="红玛瑙",[5]="红玛瑙",[6]="月亮石",[7]="月亮石",[8]="月亮石",[9]="黑宝石",[10]="黑宝石",[11]="黑宝石",[12]="光芒石",

[13]="光芒石",[14]="光芒石",[15]="舍利子",[16]="舍利子",[17]="舍利子",[18]="神秘石",[19]="神秘石",[20]="神秘石",[21]="星辉石",[22]="星辉石",[23]="星辉石",[24]="星辉石",[25]="星辉石",[26]="星辉石",

[27]="避水珠",[28]="避水珠",[29]="避水珠",[30]="避水珠",[31]="定魂珠",[32]="定魂珠",[33]="定魂珠",[34]="定魂珠",[35]="龙鳞",[36]="龙鳞",[37]="龙鳞",[38]="龙鳞",[39]="金刚石",[40]="金刚石",

[41]="金刚石",[42]="金刚石",[43]="夜光珠",[44]="夜光珠",[45]="夜光珠",[46]="夜光珠",[47]="小额银票",[48]="小额银票",[49]="小额银票",[50]="小额银票",[51]="大额银票",[52]="大额银票",[53]="大额银票",[54]="大额银票",

[55]="双倍经验丹",[56]="双倍经验丹",[57]="双倍经验丹",[58]="双倍经验丹",[59]="双倍经验丹",[60]="双倍经验丹",[61]="双倍经验丹",[62]="双倍经验丹",[63]="双倍经验丹",[64]="双倍经验丹",[65]="附魔宝珠",[66]="附魔宝珠",[67]="附魔宝珠",[68]="附魔宝珠",

[69]="金柳露",[70]="金柳露",[71]="金柳露",[72]="金柳露",[73]="超级金柳露",[74]="超级金柳露",[75]="超级金柳露",[76]="附魔宝珠",[77]="附魔宝珠",[78]="附魔宝珠",[79]="附魔宝珠",[80]="附魔宝珠",[81]="附魔宝珠",[82]="附魔宝珠",

[83]="双倍经验丹",[84]="双倍经验丹",[85]="双倍经验丹",[86]="双倍经验丹",[87]="双倍经验丹",[88]="双倍经验丹",[89]="高级藏宝图",[90]="高级藏宝图",[91]="高级藏宝图",[92]="高级藏宝图",

[93]="双倍经验丹",[94]="双倍经验丹",[95]="双倍经验丹",[96]="双倍经验丹",[97]="双倍经验丹",[98]="双倍经验丹",[99]="双倍经验丹",[100]="双倍经验丹",[101]="附魔宝珠",[102]="附魔宝珠"}

          发送数据(连接id,135.1,{内充抽奖=内充抽奖,银子=玩家数据[数字id].角色.数据.银子})
          常规提示(数字id,"奖池已经刷新")
          return
        end
      end
    end
  end
  发送数据(连接id,135.1,{内充抽奖=内充抽奖,银子=玩家数据[数字id].角色.数据.银子})
end
function 道具处理类:发送内充抽奖(连接id,数字id,数据)
  if 玩家数据[数字id].角色.数据.银子==nil then
    玩家数据[数字id].角色.数据.银子={当前=0,累积=0}
  end
  发送数据(连接id,135,{内充抽奖=内充抽奖,银子=玩家数据[数字id].角色.数据.银子})
end
function 道具处理类:领取内充银子(连接id,数字id,数据)
  if 玩家数据[数字id].角色.数据.银子.累积==nil then
    玩家数据[数字id].角色.数据.银子={当前=0,累积=0}
  end
  玩家数据[数字id].角色.数据.银子.累积=玩家数据[数字id].角色.数据.元宝.内充
  local 累充记录数值 = f函数.读配置(程序目录..[[neichong/]]..数字id..[[.ini]],"充值数据","累计")+0
  local 本次充值银子=累充记录数值-玩家数据[数字id].角色.数据.银子.累积
  if 本次充值银子 <= 0 then
    常规提示(玩家数据[数字id].角色.数据.数字id,"阁下没有进行充值，无法领取银子")
    return
  end
  if 玩家数据[数字id].角色.数据.银子.累积 < 累充记录数值 then
    玩家数据[数字id].角色.数据.银子 =玩家数据[数字id].角色.数据.银子+本次充值银子
    玩家数据[数字id].角色.数据.银子.累积 = 玩家数据[数字id].角色.数据.银子.累积+本次充值银子
    玩家数据[数字id].角色.数据.元宝.内充= 累充记录数值
    常规提示(玩家数据[数字id].角色.数据.数字id,"本次充值#R"..本次充值银子.."银子")
    发送数据(连接id,7012,{内充抽奖=内充抽奖,银子=玩家数据[数字id].角色.数据.银子})
  else
    常规提示(玩家数据[数字id].角色.数据.数字id,"阁下没有进行充值，无法领取银子")
  end
end
function 道具处理类:恢复物品(id)
  local num=0
  local 页数=1
  for k,v in pairs(self.数据) do
    local 物品id=k
    local 是否可用=true
    for a,b in pairs(玩家数据[id].角色.数据.道具) do
      if b == 物品id then
        是否可用=false
      end
    end
    for a,b in pairs(玩家数据[id].角色.数据.行囊) do
      if b == 物品id then
        是否可用=false
      end
    end
    for a,b in pairs(玩家数据[id].角色.数据.法宝) do
      if b == 物品id then
        是否可用=false
      end
    end
    if 是否可用 then
      num=num+1
      玩家数据[id].角色.数据.道具仓库[页数][num]=物品id
      if num == 20 then
        num=0
        页数=页数+1
      end
    end
  end
  常规提示(id,"恢复成功请检查~")
end
function 道具处理类:整理背包仓库(数字id,类型,类型2)
    local id = 数字id
    local 类型 = 类型
    if 玩家数据[id].整理背包 ~= nil then
        if os.time()-玩家数据[id].整理背包 <= 3 then
            常规提示(id,"不要频繁点击整理请"..(3-(os.time()-玩家数据[id].整理背包)).."秒后再尝试！")
            return
        end
    end
    玩家数据[id].整理背包=os.time()
    if 类型 == "道具" then
        local 临时表 = {}
        for k,v in pairs(玩家数据[id].角色.数据.道具) do
            if self.数据[v]~=nil then
                if  self.数据[v].数量~=nil and self.数据[v].可叠加~=nil and self.数据[v].数量 < 9999 then
                    for q,w in pairs(玩家数据[id].角色.数据.道具) do
                        if k~=q and v~=w and self.数据[w]~=nil and self.数据[w].数量~=nil and self.数据[v].名称==self.数据[w].名称 and self.数据[v].阶品==self.数据[w].阶品 and self.数据[v].食材==self.数据[w].食材 and self.数据[v].数量+self.数据[w].数量<9999 and self.数据[v].可叠加 then
                            local 临时数量 = self.数据[w].数量
                            self.数据[w]=nil
                            self.数据[v].数量 = self.数据[v].数量 + 临时数量
                        end
                    end
                end
                临时表[#临时表+1]={data=v,type=道具排序表[self.数据[v].名称] or 99999}
            end
        end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )
        玩家数据[id].角色.数据.道具={}
        for i=1,#临时表 do
            玩家数据[id].角色.数据.道具[i]=临时表[i].data
        end
        道具刷新(id)
        常规提示(id,"整理成功")
    elseif 类型 == "行囊" then
        local 临时表 = {}
        for k,v in pairs(玩家数据[id].角色.数据.行囊) do
            if self.数据[v]~=nil then
                if  self.数据[v].数量~=nil and self.数据[v].可叠加~=nil and self.数据[v].数量 < 9999 then
                    for q,w in pairs(玩家数据[id].角色.数据.行囊) do
                        if k~=q and v~=w and self.数据[w]~=nil and self.数据[w].数量~=nil and self.数据[v].名称==self.数据[w].名称 and self.数据[v].阶品==self.数据[w].阶品 and self.数据[v].食材==self.数据[w].食材 and self.数据[v].数量+self.数据[w].数量<9999 and self.数据[v].可叠加 then
                            local 临时数量 = self.数据[w].数量
                            self.数据[w]=nil
                            self.数据[v].数量 = self.数据[v].数量 + 临时数量
                        end
                    end
                end
                临时表[#临时表+1]={data=v,type=道具排序表[self.数据[v].名称] or 99999}
            end
        end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )
        玩家数据[id].角色.数据.行囊={}
        for i=1,#临时表 do
            玩家数据[id].角色.数据.行囊[i]=临时表[i].data
        end
        道具刷新(id)
        常规提示(id,"整理成功")
    elseif 类型 == "仓库" then
        local 道具表 = {}
        local 仓库页数 = 1
        local 道具类型 = 类型2
        if 仓库页数==nil or 道具类型==nil then
          常规提示(id,"数据异常,刷新失败")
          return
        end
        for k,v in pairs(玩家数据[id].角色.数据.道具仓库) do
          for q,w in pairs(v) do
            if self.数据[w]~=nil then
              local join = true
              for m,h in pairs(道具表) do
                if h==w then
                  join=false
                  break
                end
              end
              if join then
                道具表[#道具表+1]=w
              end
            end
          end
        end
        local 临时表 = {}
        for k,v in pairs(道具表) do
            if self.数据[v]~=nil then
              if  self.数据[v].数量~=nil and self.数据[v].可叠加~=nil and self.数据[v].数量 < 9999 then
                for q,w in pairs(道具表) do
                    if k~=q and v~=w and self.数据[w]~=nil and self.数据[w].数量~=nil and self.数据[v].名称==self.数据[w].名称 and self.数据[v].阶品==self.数据[w].阶品 and self.数据[v].食材==self.数据[w].食材 and self.数据[v].数量+self.数据[w].数量<9999 and self.数据[v].可叠加 then
                      local 临时数量 = self.数据[w].数量
                      self.数据[w]=nil
                      self.数据[v].数量 = self.数据[v].数量 + 临时数量
                    end
                end
              end
                临时表[#临时表+1]={data=v,type=道具排序表[self.数据[v].名称] or 99999}
              end
             end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )

        -- table.print(玩家数据[id].角色.数据.道具仓库)
        for k,v in pairs(玩家数据[id].角色.数据.道具仓库) do
          玩家数据[id].角色.数据.道具仓库[k]={}
        end
        local 仓库数,道具数 = 1,1
        for i=1,#临时表 do
            玩家数据[id].角色.数据.道具仓库[仓库数][道具数]=临时表[i].data
            道具数=道具数+1
            if i%20==0 then
              道具数=1
              仓库数=仓库数+1
            end
        end
        道具刷新(id)
        发送数据(玩家数据[id].连接id,3513,玩家数据[id].道具:索要道具4(id,道具类型))
        发送数据(玩家数据[id].连接id,3524,{道具=self:索要仓库道具(id,1),页数=1})
        发送数据(玩家数据[id].连接id,3525)
        常规提示(id,"整理成功")
    else
      常规提示(id,"数据异常,刷新失败")
    end
end
function 道具处理类:多开整理背包仓库(数字id,类型,多开id)
    local id = 多开id
    local 类型 = 类型
    local 主id=数字id
    if 玩家数据[id].整理背包 ~= nil then
        if os.time()-玩家数据[id].整理背包 <= 3 then
            常规提示(主id,"不要频繁点击整理请"..(3-(os.time()-玩家数据[id].整理背包)).."秒后再尝试！")
            return
        end
    end
    玩家数据[id].整理背包=os.time()
    if 类型 == "道具" then
        local 临时表 = {}
        for k,v in pairs(玩家数据[id].角色.数据.道具) do
            if 玩家数据[id].道具.数据[v]~=nil then
                if  玩家数据[id].道具.数据[v].数量~=nil and 玩家数据[id].道具.数据[v].可叠加~=nil and 玩家数据[id].道具.数据[v].数量 < 9999 then
                    for q,w in pairs(玩家数据[id].角色.数据.道具) do
                        if k~=q and v~=w and 玩家数据[id].道具.数据[w]~=nil and 玩家数据[id].道具.数据[w].数量~=nil and 玩家数据[id].道具.数据[v].名称==玩家数据[id].道具.数据[w].名称 and
                          玩家数据[id].道具.数据[v].阶品==玩家数据[id].道具.数据[w].阶品 and 玩家数据[id].道具.数据[v].食材==玩家数据[id].道具.数据[w].食材 and 玩家数据[id].道具.数据[v].数量+玩家数据[id].道具.数据[w].数量<9999 and 玩家数据[id].道具.数据[v].可叠加 then
                            local 临时数量 = 玩家数据[id].道具.数据[w].数量
                            玩家数据[id].道具.数据[w]=nil
                            玩家数据[id].道具.数据[v].数量 = 玩家数据[id].道具.数据[v].数量 + 临时数量
                        end
                    end
                end
                临时表[#临时表+1]={data=v,type=道具排序表[玩家数据[id].道具.数据[v].名称] or 99999}
            end
        end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )
        玩家数据[id].角色.数据.道具={}
        for i=1,#临时表 do
            玩家数据[id].角色.数据.道具[i]=临时表[i].data
        end
        多开道具刷新(id,玩家数据[主id].连接id)
        常规提示(主id,"整理成功")
    elseif 类型 == "行囊" then
        local 临时表 = {}
        for k,v in pairs(玩家数据[id].角色.数据.行囊) do
            if 玩家数据[id].道具.数据[v]~=nil then
                if  玩家数据[id].道具.数据[v].数量~=nil and 玩家数据[id].道具.数据[v].可叠加~=nil and 玩家数据[id].道具.数据[v].数量 < 9999 then
                    for q,w in pairs(玩家数据[id].角色.数据.行囊) do
                        if k~=q and v~=w and 玩家数据[id].道具.数据[w]~=nil and 玩家数据[id].道具.数据[w].数量~=nil and 玩家数据[id].道具.数据[v].名称==玩家数据[id].道具.数据[w].名称 and
                          玩家数据[id].道具.数据[v].阶品==玩家数据[id].道具.数据[w].阶品 and 玩家数据[id].道具.数据[v].食材==玩家数据[id].道具.数据[w].食材 and 玩家数据[id].道具.数据[v].数量+玩家数据[id].道具.数据[w].数量<9999 and 玩家数据[id].道具.数据[v].可叠加 then
                            local 临时数量 = 玩家数据[id].道具.数据[w].数量
                            玩家数据[id].道具.数据[w]=nil
                            玩家数据[id].道具.数据[v].数量 = 玩家数据[id].道具.数据[v].数量 + 临时数量
                        end
                    end
                end
                临时表[#临时表+1]={data=v,type=道具排序表[玩家数据[id].道具.数据[v].名称] or 99999}
            end
        end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )
        玩家数据[id].角色.数据.行囊={}
        for i=1,#临时表 do
            玩家数据[id].角色.数据.行囊[i]=临时表[i].data
        end
        多开道具刷新(id,玩家数据[主id].连接id)
        常规提示(主id,"整理成功")
    elseif 类型 == "仓库" then
        local 道具表 = {}
        local 仓库页数 = 1
        local 道具类型 = 类型2
        if 仓库页数==nil or 道具类型==nil then
          常规提示(主id,"数据异常,刷新失败")
          return
        end
        for k,v in pairs(玩家数据[id].角色.数据.道具仓库) do
          for q,w in pairs(v) do
            if 玩家数据[id].道具.数据[w]~=nil then
              local join = true
              for m,h in pairs(道具表) do
                if h==w then
                  join=false
                  break
                end
              end
              if join then
                道具表[#道具表+1]=w
              end
            end
          end
        end
        local 临时表 = {}
        for k,v in pairs(道具表) do
            if 玩家数据[id].道具.数据[v]~=nil then
              if  玩家数据[id].道具.数据[v].数量~=nil and 玩家数据[id].道具.数据[v].可叠加~=nil and 玩家数据[id].道具.数据[v].数量 < 9999 then
                for q,w in pairs(道具表) do
                    if k~=q and v~=w and 玩家数据[id].道具.数据[w]~=nil and 玩家数据[id].道具.数据[w].数量~=nil and 玩家数据[id].道具.数据[v].名称==玩家数据[id].道具.数据[w].名称 and 玩家数据[id].道具.数据[v].阶品==玩家数据[id].道具.数据[w].阶品 and
                      玩家数据[id].道具.数据[v].食材==玩家数据[id].道具.数据[w].食材 and 玩家数据[id].道具.数据[v].数量+玩家数据[id].道具.数据[w].数量<9999 and 玩家数据[id].道具.数据[v].可叠加 then
                      local 临时数量 = 玩家数据[id].道具.数据[w].数量
                      玩家数据[id].道具.数据[w]=nil
                      玩家数据[id].道具.数据[v].数量 = 玩家数据[id].道具.数据[v].数量 + 临时数量
                    end
                end
              end
                临时表[#临时表+1]={data=v,type=道具排序表[玩家数据[id].道具.数据[v].名称] or 99999}
              end
             end
        table.sort(临时表,function(a,b) return a.type+0<b.type+0 end )

        -- table.print(玩家数据[id].角色.数据.道具仓库)
        for k,v in pairs(玩家数据[id].角色.数据.道具仓库) do
          玩家数据[id].角色.数据.道具仓库[k]={}
        end
        local 仓库数,道具数 = 1,1
        for i=1,#临时表 do
            玩家数据[id].角色.数据.道具仓库[仓库数][道具数]=临时表[i].data
            道具数=道具数+1
            if i%20==0 then
              道具数=1
              仓库数=仓库数+1
            end
        end
        多开道具刷新(id,玩家数据[主id].连接id)
        发送数据(玩家数据[主id].连接id,8025,玩家数据[id].道具:索要道具4(id,道具类型))
        发送数据(玩家数据[主id].连接id,8027,{道具=self:索要仓库道具(id,1),页数=1})
        发送数据(玩家数据[主id].连接id,8026)
        常规提示(主id,"整理成功")
    else
      常规提示(主id,"数据异常,刷新失败")
    end
end
function 道具处理类:判断强化石(数据)
  local 青龙石数量 = 0
  local 白虎石数量 = 0
  local 朱雀石数量 = 0
  local 玄武石数量 = 0
  local 判断 = nil
  if 数据.青龙石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "青龙石" then
        青龙石数量 = 青龙石数量 + self.数据[n].数量
      end
    end
    if 青龙石数量 < 数据.青龙石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.白虎石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "白虎石" then
        白虎石数量 = 白虎石数量 + self.数据[n].数量
      end
    end
    if 白虎石数量 < 数据.白虎石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.朱雀石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "朱雀石" then
        朱雀石数量 = 朱雀石数量 + self.数据[n].数量
      end
    end
    if 朱雀石数量 < 数据.朱雀石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.玄武石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "玄武石" then
        玄武石数量 = 玄武石数量 + self.数据[n].数量
      end
    end
    if 玄武石数量 < 数据.玄武石 then
      判断 = false
    else
      判断 = true
    end
  end

  return 判断
end
function 道具处理类:删除陨铁()
  for n, v in pairs(self.数据) do
      if self.数据[n].名称 == "陨铁" then
      self.数据[n]=nil
      return
    end
  end
end

function 道具处理类:判断是否有陨铁()
  for n, v in pairs(self.数据) do
      if self.数据[n].名称 == "陨铁" then
      return true
    end
  end
  return false
end

function 道具处理类:判断是否有天眼通符()
  for n, v in pairs(self.数据) do
      if self.数据[n].名称 == "天眼通符" then
      return true
    end
  end
  return false
end


function 道具处理类:删除强化石(数据)
  local 青龙石数量 = 数据.青龙石
  local 白虎石数量 = 数据.白虎石
  local 朱雀石数量 = 数据.朱雀石
  local 玄武石数量 = 数据.玄武石

  if 数据.青龙石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "青龙石" then
        if self.数据[n].数量 > 青龙石数量 then
          self.数据[n].数量 = self.数据[n].数量 - 青龙石数量
          break
        elseif self.数据[n].数量 <= 青龙石数量 then
          青龙石数量 = 青龙石数量 - self.数据[n].数量
          self.数据[n] = nil
          if 青龙石数量 == 0 then
            break
          end
        end
      end
    end
  end

  if 数据.白虎石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "白虎石" then
        if self.数据[n].数量 > 白虎石数量 then
          self.数据[n].数量 = self.数据[n].数量 - 白虎石数量
          break
        elseif self.数据[n].数量 <= 白虎石数量 then
          白虎石数量 = 白虎石数量 - self.数据[n].数量
          self.数据[n] = nil
          if 白虎石数量 == 0 then
            break
          end
        end
      end
    end
  end

  if 数据.朱雀石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "朱雀石" then
        if self.数据[n].数量 > 朱雀石数量 then
          self.数据[n].数量 = self.数据[n].数量 - 朱雀石数量
          break
        elseif self.数据[n].数量 <= 朱雀石数量 then
          朱雀石数量 = 朱雀石数量 - self.数据[n].数量
          self.数据[n] = nil
          if 朱雀石数量 == 0 then
            break
          end
        end
      end
    end
  end

  if 数据.玄武石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "玄武石" then
        if self.数据[n].数量 > 玄武石数量 then
          self.数据[n].数量 = self.数据[n].数量 - 玄武石数量
          break
        elseif self.数据[n].数量 <= 玄武石数量 then
          玄武石数量 = 玄武石数量 - self.数据[n].数量
          self.数据[n] = nil
          if 玄武石数量 == 0 then
            break
          end
        end
      end
    end
  end
end

function 道具处理类:判断强化石(数据)
  local 青龙石数量 = 0
  local 白虎石数量 = 0
  local 朱雀石数量 = 0
  local 玄武石数量 = 0
  local 判断 = nil
  if 数据.青龙石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "青龙石" then
        青龙石数量 = 青龙石数量 + self.数据[n].数量
      end
    end
    if 青龙石数量 < 数据.青龙石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.白虎石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "白虎石" then
        白虎石数量 = 白虎石数量 + self.数据[n].数量
      end
    end
    if 白虎石数量 < 数据.白虎石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.朱雀石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "朱雀石" then
        朱雀石数量 = 朱雀石数量 + self.数据[n].数量
      end
    end
    if 朱雀石数量 < 数据.朱雀石 then
      判断 = false
    else
      判断 = true
    end
  end

  if 数据.玄武石 ~= 0 then
    for n, v in pairs(self.数据) do
        if self.数据[n].名称 == "玄武石" then
        玄武石数量 = 玄武石数量 + self.数据[n].数量
      end
    end
    if 玄武石数量 < 数据.玄武石 then
      判断 = false
    else
      判断 = true
    end
  end

  return 判断
end

function 道具处理类:装备点化套装(连接id,数字id,数据)
  local 强化石 = {"青龙石","朱雀石","玄武石","白虎石"}
  local 套装类型 = 数据.套装
  local 宝珠id = 数据.宝珠数据
  local id = 数字id
  local 装备编号 = 玩家数据[id].角色.数据.道具[数据.装备]
  local 装备等级 = self.数据[装备编号].级别限制
  local 消耗石头 = self.数据[装备编号].分类
  local 强化石数据 = {青龙石=0,朱雀石=0,玄武石=0,白虎石=0}
  if 消耗石头 == 5 or 消耗石头 == 6 then
    消耗石头 = 3
  end
  强化石数据[强化石[消耗石头]] = math.floor(装备等级/10)
  if 数据.装备 == nil or 数据.套装==0 or 数据.套装==nil then
    常规提示(id,"道具数据异常，请重新打开界面进行操作。")
    return
  end
  if self.数据[宝珠id] == nil and self.数据[宝珠id].名称~="附魔宝珠" then
    常规提示(id,"道具数据异常，请重新打开界面进行操作。")
    return
  end
  if 玩家数据[id].角色.数据.当前经验 < 装备等级*3000 then
    常规提示(id,"您的经验不足，无法进行点化。")
    return
  end
  if 玩家数据[id].角色.数据.银子 < 装备等级*5000 then
    常规提示(id,"您的银子不足，无法进行点化。")
    return
  end
  if self:判断强化石(强化石数据) == false then
    常规提示(id,"您的"..强化石[消耗石头].."不足，无法进行点化。")
    return
  end
  if self.数据[装备编号].祈福值==nil or self.数据[装备编号].祈福值==0 or self.数据[装备编号].祈福值 < 30 then
    if self.数据[宝珠id].数量==nil or self.数据[宝珠id].数量 - 1 <= 0 then
      self.数据[宝珠id] = nil
      -- for i=1,20 do
      --   if 宝珠id == i then
      --     i = nil
      --     break
      --   end
      -- end
      发送数据(连接id,3549)
    else
        self.数据[宝珠id].数量 = self.数据[宝珠id].数量 - 1
    end
    self:删除强化石(强化石数据)
    if 套装类型 == 1 then
      local 随机动物套 = 取所有动物套[取随机数(1,#取所有动物套)]
      self.数据[装备编号].套装效果={"变身术之",随机动物套}
    elseif 套装类型 == 2 then
      local 套装类型="追加法术"
      local 套装效果={
          追加法术={"横扫千军","善恶有报","惊心一剑","壁垒击破","满天花雨","浪涌","唧唧歪歪","五雷咒","龙卷雨击","剑荡四方","裂石","烟雨剑法","天雷斩","力劈华山","夜舞倾城","上古灵符","叱咤风云","天降灵葫","月光","八凶法阵","死亡召唤","天罗地网","夺命咒","落叶萧萧","落雷符","雨落寒沙","苍茫树","飞砂走石","阎罗令","水攻","烈火","落岩","雷击","泰山压顶","水漫金山","地狱烈火","奔雷咒"}
      }
        self.数据[装备编号].套装效果={套装类型,套装效果[套装类型][取随机数(1,#套装效果[套装类型])]}
    elseif 套装类型 == 4 then
        local 套装类型="附加状态"
      local 套装效果={
          附加状态={"金刚护法","金刚护体","生命之泉","炼气化神","普渡众生","定心术","碎星诀","变身","凝神术","逆鳞","不动如山","法术防御","明光宝烛","天神护体","移魂化骨","蜜润","杀气诀","韦陀护法","一苇渡江","天神护法","乘风破浪","魔息术","盘丝阵","炎护"}
      }
        self.数据[装备编号].套装效果={套装类型,套装效果[套装类型][取随机数(1,#套装效果[套装类型])]}
    end
    if self.数据[装备编号].祈福值 == nil then
      self.数据[装备编号].祈福值 = 0
    end
    self.数据[装备编号].祈福值 = self.数据[装备编号].祈福值 + 1
    玩家数据[id].角色:扣除经验(装备等级*3000,"点化套装",1)
    玩家数据[id].角色:扣除银子(装备等级*5000,0,0,"点化套装",1)
    道具刷新(id)
  else
    local 套装类型名称 = "变身术"
    local 选项 = {}
    if 套装类型 == 1 then
      for n=1,#取所有动物套 do
        table.insert(选项,取所有动物套[n])
      end
    elseif 套装类型 == 2 then
      套装类型名称 = "追加法术"
      追加法术={"横扫千军","善恶有报","惊心一剑","壁垒击破","满天花雨","浪涌","唧唧歪歪","五雷咒","龙卷雨击","剑荡四方","裂石","烟雨剑法","天雷斩","力劈华山","夜舞倾城","上古灵符","叱咤风云","天降灵葫","月光","八凶法阵","死亡召唤","天罗地网","夺命咒","落叶萧萧","落雷符","雨落寒沙","苍茫树","飞砂走石","阎罗令","水攻","烈火","落岩","雷击","泰山压顶","水漫金山","地狱烈火","奔雷咒"}
        for n=1,#追加法术 do
        table.insert(选项,追加法术[n])
      end
    elseif 套装类型 == 4 then
      套装类型名称 = "附加状态"
      附加状态={"金刚护法","金刚护体","生命之泉","炼气化神","普渡众生","定心术","碎星诀","变身","凝神术","逆鳞","不动如山","法术防御","明光宝烛","天神护体","移魂化骨","蜜润","杀气诀","韦陀护法","一苇渡江","天神护法","乘风破浪","魔息术","盘丝阵","炎护"}
        for n=1,#附加状态 do
        table.insert(选项,附加状态[n])
      end
    end
    table.insert(选项,"我暂时先不点化了")
    local 对话="装备祈福值已满，您可以选择一个自己想要的套装效果进行祈福：（正在点化：#Z/"..套装类型名称.."#W/）"
    玩家数据[数字id].点化套装数据 = 数据
    发送数据(玩家数据[数字id].连接id,1501,{名称="点化装备套装",模型=玩家数据[数字id].角色.数据.模型,对话=对话,选项=选项})
  end
end
----------------------七七回收------------------------
-- function 道具处理类:判断一键出售道具(连接id,id)
--     local 对话="#Y请选择要回收的物品"
--     local 选项={"回收点化石","回收高低兽决","算了我在想想"}
--      发送数据(玩家数据[id].连接id,1501,{名称="专业回收",模型=玩家数据[id].角色.数据.模型,对话=对话,选项=选项})    ----模型换一下
-- end
-- function 道具处理类:一键出售道具(连接id,id)  ---摩托修改 原吊游的商品-----

-- for n=1,100 do
-- local 道具id=玩家数据[id].角色.数据.道具[n]

--  if 道具id~=nil and "回收点化石" then
--    local 价格=self:取回收价格1(道具id)
--     -- elseif 道具id~=nil and "回收高低兽决" then
--     -- local 价格=self:取回收价格2(道具id)

--    if 价格.价格==0 then
--      -- 常规提示(id,"#G"..self.数据[道具id].名称.."#Y无法进行出售操作")
--    else
--      if self.数据[道具id].数量==nil then self.数据[道具id].数量=0 end
--      if self.数据[道具id].数量~=nil and self.数据[道具id].数量~=0 then
--       价格.价格=价格.价格*self.数据[道具id].数量
--      end
-- if 价格.类型==1 then
--    玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
-- elseif 价格.类型==2 then
--   玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
-- end

--     self.数据[玩家数据[id].角色.数据.道具[n]]=nil
--     玩家数据[id].角色.数据.道具[n]=nil
--     发送数据(连接id,3800)
--     发送数据(玩家数据[id].连接id,3699)
--    end
--  end
-- end

-- end

-- function 道具处理类:取回收价格1(id)--一一键回收
--   local 名称=self.数据[id].名称
--   local 价格=0
--   local 类型=1

--   if 名称=="点化石" then
--    价格=5000

--     end
--  return {价格=价格,类型=类型}
--  end


--  function 道具处理类:取回收价格2(id)--一一键回收
--   local 名称=self.数据[id].名称
--   local 价格=0
--   local 类型=1

--   if 名称=="魔兽要诀" then
--    价格=1000
--  elseif 名称=="高级魔兽要诀" then
--    价格=5000

--     end
--  return {价格=价格,类型=类型}
--  end
----------------------一键出售道具------------------------
function 道具处理类:判断一键出售道具(连接id,id)
     local 对话="#Y一键回收以下所有物品\n\n#G60~80环装、所有宝宝装备、高低兽决、树苗、五宝、钨金、金柳露、C66、阵法、高低内丹、书铁、炼妖石和图册、彩果、高低宝图、神秘石、未激活符石、符石卷轴、点化石\n\n#Y以上物品有需要放仓库，回收后无法找回"
     local 选项={"确认一键回收","算了我在想想"}

     发送数据(玩家数据[id].连接id,1501,{名称="专业回收",模型=玩家数据[id].角色.数据.模型,对话=对话,选项=选项})    ----模型换一下
end

function 道具处理类:多开判断一键出售道具(连接id,id,主id)
     local 对话="#Y一键回收以下所有物品\n\n#G60~80环装、所有宝宝装备、高低兽决、树苗、五宝、钨金、金柳露、C66、阵法、高低内丹、书铁、炼妖石和图册、彩果、高低宝图、神秘石、未激活符石、符石卷轴、点化石\n\n#Y以上物品有需要放仓库，回收后无法找回"
     local 选项={"确认一键回收","算了我在想想"}

     发送数据(玩家数据[主id].连接id,1501,{名称="专业回收",模型=玩家数据[id].角色.数据.模型,对话=对话,选项=选项})    ----模型换一下
end
function 道具处理类:一键出售道具(连接id,id)  ---摩托修改 原吊游的商品-----

for n=1,100 do
local 道具id=玩家数据[id].角色.数据.道具[n]

 if 道具id~=nil then
   local 价格=self:取回收价格(道具id)
   if 价格.价格==0 then
     -- 常规提示(id,"#G"..self.数据[道具id].名称.."#Y无法进行出售操作")
   else
     if self.数据[道具id].数量==nil then self.数据[道具id].数量=0 end
     if self.数据[道具id].数量~=nil and self.数据[道具id].数量~=0 then
      价格.价格=价格.价格*self.数据[道具id].数量
     end
if 价格.类型==1 then
   玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
   --玩家数据[id].角色:添加仙玉(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
   --添加最后对话(id,format("回收物品成功，你获得了%s两银子",价格.价格))
elseif 价格.类型==2 then
  玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
end

    self.数据[玩家数据[id].角色.数据.道具[n]]=nil
    玩家数据[id].角色.数据.道具[n]=nil
    发送数据(连接id,3800)
    发送数据(玩家数据[id].连接id,3699)
   end
 end
end

end

function 道具处理类:多开一键出售道具(连接id,id,主id)  ---摩托修改 原吊游的商品-----
for n=1,100 do
local 道具id=玩家数据[id].角色.数据.道具[n]

 if 道具id~=nil then
   local 价格=self:取回收价格(道具id)
   if 价格.价格==0 then
     -- 常规提示(id,"#G"..self.数据[道具id].名称.."#Y无法进行出售操作")
   else
     if 玩家数据[id].道具.数据[道具id].数量==nil then 玩家数据[id].道具.数据[道具id].数量=0 end
     if 玩家数据[id].道具.数据[道具id].数量~=nil and 玩家数据[id].道具.数据[道具id].数量~=0 then
      价格.价格=价格.价格*玩家数据[id].道具.数据[道具id].数量
     end
if 价格.类型==1 then
   玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
elseif 价格.类型==2 then
  玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
end

    玩家数据[id].道具.数据[玩家数据[id].角色.数据.道具[n]]=nil
    玩家数据[id].角色.数据.道具[n]=nil
    发送数据(玩家数据[主id].连接id,3800)
    发送数据(玩家数据[主id].连接id,3699)
    常规提示(主id,"多角色回收成功。")
   end
 end
end

end
function 道具处理类:回收物品(连接id,id)
  if 玩家数据[id].回收物品==nil then
    添加最后对话(id,"你没有这样的物品。")
    return
  elseif 玩家数据[id].角色.数据.道具[玩家数据[id].回收物品]==nil then
    添加最后对话(id,"你没有这样的物品。")
    return
  end
  local 道具id=玩家数据[id].角色.数据.道具[玩家数据[id].回收物品]
  if self.数据[道具id]==nil then
    添加最后对话(id,"你没有这样的物品。")
    return
  end
  local 价格=self:取回收价格(道具id)
  if 价格.价格==0  then
    添加最后对话(id,"此类物品不在回收列表上。")
    return
  end
  local 名称=self.数据[道具id].名称
  local 数量=self.数据[道具id].数量
  if 数量==nil then 数量=1 end
  local 识别码=self.数据[道具id].识别码
  if 识别码==nil then 识别码="无法识别" end
  if self.数据[道具id].数量~=nil and self.数据[道具id].数量>0 then
    价格.价格=价格.价格*self.数据[道具id].数量
  end
  self.数据[道具id]=nil
  玩家数据[id].角色.数据.道具[玩家数据[id].回收物品]=nil
  玩家数据[id].回收物品=nil
  if 价格.类型==1 then
    玩家数据[id].角色:添加银子(价格.价格,format("回收物品:%s,%s,%s",名称,数量,识别码),1)
    添加最后对话(id,format("回收物品成功，你获得了%s两银子",价格.价格))
  end
  道具刷新(id)
end

function 道具处理类:取回收价格(id)--一一键回收
  local 名称=self.数据[id].名称
  local 价格=0
  local 类型=1

  if 名称=="魔兽要诀" then
   价格=1000
 elseif 名称=="高级魔兽要诀" then
   价格=5000
 elseif 名称=="摇钱树树苗" then
   价格=10
  elseif 名称=="龙鳞" then
   价格=5000
  elseif 名称=="避水珠" then
   价格=5000
  elseif 名称=="点化石" then
   价格=5000
  elseif 名称=="符石" then
   价格=1000
  elseif 名称=="钨金" then
   价格=1000
  elseif 名称=="夜光珠" then
   价格=5000
  elseif 名称=="金刚石" then
   价格=5000
  elseif 名称=="定魂珠" then
   价格=5000
  elseif 名称=="金柳露"  then
   价格=1000
 elseif 名称=="超级金柳露" then
   价格=5000
  elseif 名称=="鬼谷子" then
   价格=10000
 elseif 名称=="召唤兽内丹" then
   价格=10000
  elseif 名称=="高级召唤兽内丹" then
   价格=20000
  elseif 名称=="制造指南书"  then
   价格=5000
  elseif 名称=="百炼精铁"  then
   价格=5000
   elseif 名称=="灵饰指南书" or 名称=="金银锦盒" or 名称=="特赦令牌" or 名称=="元灵晶石" or 名称=="修炼果" or 名称=="天眼通符" then
   价格=0
  elseif 名称=="炼妖石" then
   价格=1000
  elseif 名称=="上古锻造图策" then
   价格=1000
  elseif 名称=="天眼珠" then
   价格=1000
  elseif 名称=="九转金丹" then
   价格=1000
  elseif 名称=="彩果" then
   价格=1000
  elseif 名称=="藏宝图" then
   价格=1000
  elseif 名称=="高级藏宝图" then
   价格=10000
   -- if self.数据[id].分类==500 then
   --   价格=1
   --  else
   --   价格=1000
   --   end
 -- elseif 名称=="特赦令牌" then
 --   价格=10000
 -- elseif self.数据[id].总类==2   then
 --   价格=1
 elseif 名称=="飞刀" or 名称=="顺逆神针" or 名称=="飞蝗石" or 名称=="铁蒺藜" or 名称=="无影神针" or 名称=="孔雀翎" or 名称=="含沙射影" or 名称=="回龙摄魂标" or 名称=="寸阴若梦" or 名称=="魔睛子" then
   价格=1
 elseif 名称=="翡翠豆腐" or 名称=="佛跳墙" or 名称=="蛇蝎美人" or 名称=="风水混元丹" or 名称=="定神香" or 名称=="十香返生丸" or 名称=="丁香水" or 名称=="月星子" or 名称=="仙狐涎" or 名称=="地狱灵芝" or 名称=="麝香" or 名称=="血珊瑚" or 名称=="餐风饮露" or 名称=="白露为霜" or 名称=="天龙水" or 名称=="孔雀红" or 名称=="紫丹罗" or 名称=="佛手" or 名称=="旋复花" or 名称=="龙须草" or 名称=="百色花" or 名称=="香叶" or 名称=="白玉骨头" or 名称=="鬼切草" or 名称=="灵脂" or 名称=="曼陀罗花" or 名称=="金创药" or 名称=="小还丹" or 名称=="千年保心丹" or 名称=="金香玉" or 名称=="五龙丹" or 名称=="天不老" or 名称=="紫石英" or 名称=="血色茶花" or 名称=="熊胆" or 名称=="鹿茸" or 名称=="六道轮回" or 名称=="凤凰尾" or 名称=="硫磺草" or 名称=="龙之心屑" or 名称=="火凤之睛" or 名称=="四叶花" or 名称=="天青地白" or 名称=="七叶莲" then
   价格=0
 elseif self.数据[id].总类==1 and  self.数据[id].分类~=1 and  self.数据[id].子类~=2 then
   价格=1
 elseif 名称=="红玛瑙" or 名称=="太阳石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="月亮石" or 名称=="光芒石" or 名称=="星辉石" then
   价格=0
 elseif 名称=="神秘石" then
   价格=1000
  elseif 名称=="青龙石" or 名称=="玄武石" or 名称=="白虎石" or 名称=="朱雀石"  then
   价格=0
  elseif 名称=="初级清灵仙露" or 名称=="中级清灵仙露" or 名称=="高级清灵仙露"  then
   价格=1000
  elseif 名称=="未激活的星石" or 名称=="未激活的符石" or 名称=="符石卷轴"  then
   价格=1000
  elseif 名称=="玄铁矛" or 名称=="金蛇信" or 名称=="丈八点钢矛" or 名称=="乌金鬼头镰" or 名称=="狂魔镰" or 名称=="恶龙之齿" or 名称=="游龙剑" or 名称=="北斗七星剑" or 名称=="碧玉剑" or 名称=="赤焰双剑" or 名称=="墨玉双剑" or 名称=="梅花双剑" or 名称=="七彩罗刹" or 名称=="缚神绫" or 名称=="九天仙绫" or 名称=="青刚刺" or 名称=="华光刺" or 名称=="龙鳞刺" or 名称=="神火扇" or 名称=="阴风扇" or 名称=="风云雷电" or 名称=="满天星" or 名称=="水晶棒" or 名称=="日月光华" or 名称=="震天锤" or 名称=="巨灵神锤" or 名称=="天崩地裂" or 名称=="青藤柳叶鞭" or 名称=="雷鸣嗜血鞭" or 名称=="混元金钩" or 名称=="蛇形月" or 名称=="子母双月" or 名称=="斜月狼牙" or 名称=="狼牙刀" or 名称=="龙鳞宝刀" or 名称=="黑炎魔刀" or 名称=="腾云杖" or 名称=="引魂杖" or 名称=="碧玺杖" or 名称=="连珠神弓" or 名称=="游鱼戏珠" or 名称=="灵犀望月" or 名称=="如意宝珠" or 名称=="沧海明珠" or 名称=="无量玉璧" or 名称=="惊涛雪" or 名称=="醉浮生" or 名称=="沉戟天戊" or 名称=="玲珑盏" or 名称=="玉兔盏" or 名称=="冰心盏" or 名称=="孔雀羽" or 名称=="金刚伞" or 名称=="落梅伞" or 名称=="水晶帽" or 名称=="乾坤帽" or 名称=="黑魔冠" or 名称=="玉女发冠" or 名称=="魔女发冠" or 名称=="七彩花环" or 名称=="风月宝链" or 名称=="八卦坠" or 名称=="鬼牙攫魂" or 名称=="碧水青龙" or 名称=="万里卷云" or 名称=="疾风之铃" or 名称=="霓裳羽衣" or 名称=="流云素裙" or 名称=="七宝天衣" or 名称=="夜魔披风" or 名称=="龙骨甲" or 名称=="死亡斗篷" or 名称=="攫魂铃" or 名称=="双魂引" or 名称=="兽王腰带" or 名称=="百窜云" or 名称=="八卦锻带" or 名称=="圣王坠" or 名称=="追星踏月" or 名称=="九州履" or 名称=="万里追云履" then
   价格=20000
  elseif 名称=="竹编护腕" or 名称=="皮腕" or 名称=="针腕" or 名称=="骨镯" or 名称=="青铜护腕" or 名称=="玛瑙护腕" or 名称=="琉璃护腕" or 名称=="镂空银镯" or 名称=="笼玉镯" or 名称=="嵌宝金腕" or 名称=="玳瑁护腕" or 名称=="七星宝腕" or 名称=="缚龙筋" or 名称=="凤翎护腕" or 名称=="织锦彩带" or 名称=="冰蚕丝带" or 名称=="竹编脖环" or 名称=="钢圈" or 名称=="荆棘环" or 名称=="骨环" or 名称=="青铜颈环" or 名称=="玛瑙石环" or 名称=="琉璃环" or 名称=="九曲环" or 名称=="笼玉环" or 名称=="嵌宝金环" or 名称=="玳瑁环" or 名称=="七星宝环" or 名称=="缚龙圈" or 名称=="鸾尾环" or 名称=="织锦颈圈" or 名称=="冰蚕丝圈" or 名称=="皮甲" or 名称=="皮甲" or 名称=="刺甲" or 名称=="骨排甲" or 名称=="青铜披甲" or 名称=="玛瑙软甲" or 名称=="琉璃罩甲" or 名称=="连环铠甲" or 名称=="笼玉甲" or 名称=="嵌宝金甲" or 名称=="玳瑁衣" or 名称=="七星宝甲" or 名称=="缚龙甲" or 名称=="凤凰彩衣" or 名称=="织锦软褡" or 名称=="冰蚕织甲" then
    价格=30000
    end
 return {价格=价格,类型=类型}
 end
----------------------一键出售道具------------------------

function 道具处理类:一键回收跑商物品(连接id,id)  ---摩托修改 原吊游的商品-----

for n=1,100 do
local 道具id=玩家数据[id].角色.数据.道具[n]
 if 道具id~=nil then
  if self.数据[道具id].名称=="商品棉布" or self.数据[道具id].名称=="商品佛珠" or self.数据[道具id].名称=="商品扇子" or self.数据[道具id].名称=="商品武器" or self.数据[道具id].名称=="商品纸钱"
    or self.数据[道具id].名称=="商品帽子" or self.数据[道具id].名称=="商品木材" or self.数据[道具id].名称=="商品人参" or self.数据[道具id].名称=="商品夜明珠" or self.数据[道具id].名称=="商品盐"
    or self.数据[道具id].名称=="商品鹿茸" or self.数据[道具id].名称=="商品铃铛" or self.数据[道具id].名称=="商品首饰" or self.数据[道具id].名称=="商品蜡烛" or self.数据[道具id].名称=="商品面粉"
    or self.数据[道具id].名称=="商品香油" or self.数据[道具id].名称=="商品珍珠" or self.数据[道具id].名称=="商品酒" or self.数据[道具id].名称=="商品符" or self.数据[道具id].名称=="商品麻线" then
    self.数据[玩家数据[id].角色.数据.道具[n]]=nil
    玩家数据[id].角色.数据.道具[n]=nil
    发送数据(连接id,3800)
    发送数据(玩家数据[id].连接id,3699)
    end
   end
 end
end


function 道具处理类:获取助战(连接id,id)
  local aa ="对话获取助战的方式"
  local xx ={"获取助战","关闭对话"}
  发送数据(连接id,1501,{模型=玩家数据[id].角色.数据.造型,造型="获取助战",对话=aa,选项=xx})
end


function 道具处理类:摊位下架商品(连接id,id,数据)

  if 玩家数据[id].摊位数据==nil then return end
  if 数据.bb==nil then --下架道具
    玩家数据[id].摊位数据.道具[数据.道具+0]=nil
    常规提示(id,"#Y/下架物品成功！")
  elseif 数据.道具==nil then
    local 编号=数据.bb+0
    玩家数据[id].摊位数据.bb[编号]=nil
    常规提示(id,"#Y/下架召唤兽成功！")
  end
  玩家数据[id].摊位数据.更新=os.time()
  self:索要摊位数据(连接id,id,3517)
end

function 道具处理类:使用合成旗(连接id,id,序列)----使用合成旗
  --     玩家数据[id].最后操作="合成旗"
  if 玩家数据[id].道具操作==nil then return  end
  local 编号=玩家数据[id].道具操作.编号
  local 道具id=玩家数据[id].角色.数据[玩家数据[id].道具操作.类型][编号]
  if 道具id==nil or self.数据[道具id]==nil or self.数据[道具id].总类~=11 or self.数据[道具id].分类~=2 then
    常规提示(id,"#Y你没有这样的道具")
    return
  elseif self.数据[道具id].xy[序列]==nil then
    常规提示(id,"#Y错误的坐标选择点")
    return
  elseif self:取飞行限制(id) then
    return
  end
  self.数据[道具id].次数=self.数据[道具id].次数-1
  if self.数据[道具id].次数<=0 then
    玩家数据[id].角色.数据[玩家数据[id].道具操作.类型][编号]=nil
    常规提示(id,format("#Y你的%s已经用完了",self.数据[道具id].名称))
    self.数据[道具id]=nil
  else
    玩家数据[id].道具操作=nil
    道具刷新(id)
    地图处理类:跳转地图(id,self.数据[道具id].地图,self.数据[道具id].xy[序列].x,self.数据[道具id].xy[序列].y)
    常规提示(id,format("#Y你的%s还可以使用%s次",self.数据[道具id].名称,self.数据[道具id].次数))
  end
end

function 道具处理类:使用超级合成旗(连接id,id,内容)----使用合成旗
  local 地图=内容.地图
  local 地图x=内容.地图x
  local 地图y=内容.地图y

  if 玩家数据[id].道具操作==nil then return  end
  local 编号=玩家数据[id].道具操作.编号
  local 道具id=玩家数据[id].角色.数据[玩家数据[id].道具操作.类型][编号]
  if 道具id==nil or self.数据[道具id]==nil or self.数据[道具id].总类~=11 or self.数据[道具id].分类~=2 then
    常规提示(id,"#Y你没有这样的道具")
    return
  elseif 地图x==nil or 地图y==nil or 地图==nil then
    常规提示(id,"#Y错误的坐标选择点")
    return
  --elseif self:取飞行限制(id) then
    --return
  end
  self.数据[道具id].次数=self.数据[道具id].次数-1
  if self.数据[道具id].次数<=0 then
    玩家数据[id].角色.数据[玩家数据[id].道具操作.类型][编号]=nil
    常规提示(id,format("#Y你的%s已经用完了",self.数据[道具id].名称))
    self.数据[道具id]=nil
  else
    玩家数据[id].道具操作=nil
    道具刷新(id)
    地图处理类:跳转地图(id,地图,地图x,地图y)
    常规提示(id,format("#Y你的%s还可以使用%s次",self.数据[道具id].名称,self.数据[道具id].次数))
  end
end

function 道具处理类:法宝合成(连接id,id,数据)
  local 道具id = 分割文本(数据.序列,",")
  local 临时id = {}
  local 找到内丹 = false
  local 合成费用 = 2000000
  local 合成体力 = 100
  if f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","完成法宝任务") == nil then
    f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","完成法宝任务","0")
  end
    if f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","完成法宝任务") == "1" then
    常规提示(id,"少侠您已经完成了法宝合成,点我完成法宝任务吧#86")
    return
  end
  if 取银子(id) < 合成费用 then
      常规提示(id,"你银子不够200万")
      return
  end
  if 玩家数据[id].角色.数据.体力 < 合成体力 then
      常规提示(id,"你体力不够100点")
      return
  end
  for i=1,5 do
    道具id[i] = 道具id[i]+0
    临时id[i]=玩家数据[id].角色.数据.道具[道具id[i]]
    if self.数据[临时id[i]]~=nil and 道具id[i]~= 0 then
        if self.数据[临时id[i]].名称=="内丹" then
            找到内丹=true
        end
    end
  end
  if 找到内丹 then
      玩家数据[id].角色:扣除银子(合成费用,0,0,"法宝合成",1)
      玩家数据[id].角色.数据.体力=玩家数据[id].角色.数据.体力-合成体力
      for i=1,5 do
        道具id[i] = 道具id[i]+0
        临时id[i]=玩家数据[id].角色.数据.道具[道具id[i]]
        if self.数据[临时id[i]]~=nil and 道具id[i]~= 0 then
            self.数据[临时id[i]]=nil
        end
      end
      f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","完成法宝任务",1)
      常规提示(id,"恭喜少侠完成了法宝合成，请在此点击我选择完成法宝任务领取法宝哦")
      道具刷新(id)
  else
      常规提示(id,"缺少内丹材料，无法合成！")
      return
  end
end

function 道具处理类:武器染色处理(连接id,id,数据)
  local 道具id = 玩家数据[id].角色.数据.装备[3]
  local 彩果数量=20
  for n=1,#数据 do
    彩果数量=彩果数量+数据[n]
  end
  local 扣除数据={}
  local 已扣除=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称=="彩果" and 已扣除<彩果数量 then
      if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=彩果数量-已扣除 then
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=彩果数量-已扣除}
        已扣除=已扣除+(彩果数量-已扣除)
      else
        已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
      end
    end
  end
  if 已扣除<彩果数量 then
    常规提示(id,"武器染色需要#R20个#Y彩果,你没有那么多!")
    return
  else
    for n=1,#扣除数据 do
      self.数据[扣除数据[n].id].数量=self.数据[扣除数据[n].id].数量-扣除数据[n].数量
      if self.数据[扣除数据[n].id].数量<=0 then
        self.数据[扣除数据[n].id]=nil
        玩家数据[id].角色.数据.道具[扣除数据[n].格子]=nil
      end
    end
  if self.数据[道具id].染色方案==nil then
      self.数据[道具id].染色方案=0
  end
  if self.数据[道具id].染色组==nil then
      self.数据[道具id].染色组={}
  end
  self.数据[道具id].染色方案=数据.序列
  self.数据[道具id].染色组[1]=数据.序列1
  self.数据[道具id].染色组[2]=数据.序列2
  常规提示(id,"恭喜你，武器染色成功！快去看看武器的新造型吧！")
  发送数据(玩家数据[id].连接id,3504)
  道具刷新(id)
  地图处理类:更新武器(id,self.数据[玩家数据[id].角色.数据.装备[3]])
  end
end

function 道具处理类:获取道具数量(id,道具名,参数一名称,参数一,参数二名称,参数二)
  local 道具数量=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称==道具名 then
      if 参数一名称 ~=nil and 参数一~=nil then
        if self.数据[玩家数据[id].角色.数据.道具[n]][参数一名称] ~= nil and self.数据[玩家数据[id].角色.数据.道具[n]][参数一名称]==参数一 then
          if 参数二名称 ~=nil and 参数二~=nil then
            if self.数据[玩家数据[id].角色.数据.道具[n]][参数二名称] ~= nil and self.数据[玩家数据[id].角色.数据.道具[n]][参数二名称]==参数二 then
              道具数量=道具数量+self.数据[玩家数据[id].角色.数据.道具[n]].数量
            end
          else
            道具数量=道具数量+self.数据[玩家数据[id].角色.数据.道具[n]].数量
          end
        end
      else
        道具数量=道具数量+self.数据[玩家数据[id].角色.数据.道具[n]].数量
      end
    end
  end
  return 道具数量
end

function 道具处理类:扣除道具数量(id,道具名,数量,参数一名称,参数一,参数二名称,参数二)
  local 扣除数据={}
  local 已扣除=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称==道具名 then
      if 参数一名称 ~=nil and 参数一~=nil then
        if self.数据[玩家数据[id].角色.数据.道具[n]][参数一名称] ~= nil and self.数据[玩家数据[id].角色.数据.道具[n]][参数一名称]==参数一 then

          if 参数二名称 ~=nil and 参数二~=nil then
            if self.数据[玩家数据[id].角色.数据.道具[n]][参数二名称] ~= nil and self.数据[玩家数据[id].角色.数据.道具[n]][参数二名称]==参数二 then
              if self.数据[玩家数据[id].角色.数据.道具[n]].数量 == nil then
                self.数据[玩家数据[id].角色.数据.道具[n]].数量 = 1
              end
              if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=数量-已扣除 then
                扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=数量-已扣除}
                已扣除=已扣除+(数量-已扣除)
              else
                已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
                扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
              end
            end
          else

            if self.数据[玩家数据[id].角色.数据.道具[n]].数量 == nil then
              self.数据[玩家数据[id].角色.数据.道具[n]].数量 = 1
            end
            if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=数量-已扣除 then
              扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=数量-已扣除}
              已扣除=已扣除+(数量-已扣除)
            else
              已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
              扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
            end
          end
        end
      else
        if self.数据[玩家数据[id].角色.数据.道具[n]].数量 == nil then
          self.数据[玩家数据[id].角色.数据.道具[n]].数量 = 1
        end
        if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=数量-已扣除 then
          扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=数量-已扣除}
          已扣除=已扣除+(数量-已扣除)
        else
          已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
          扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
        end
      end
    end
  end
  if 已扣除<数量 then
    常规提示(id,"你没有那么多的#R"..道具名.."#Y，请检查包裹并将道具放到道具栏第一页.")
    return false
  else
    for n=1,#扣除数据 do
      self.数据[扣除数据[n].id].数量=self.数据[扣除数据[n].id].数量-扣除数据[n].数量
      if self.数据[扣除数据[n].id].数量<=0 then
        self.数据[扣除数据[n].id]=nil
        玩家数据[id].角色.数据.道具[扣除数据[n].格子]=nil
      end
    end
    return true
  end
end

function 道具处理类:坐骑染色处理(连接id,id,数据)
  local 彩果数量=20
  for n=1,#数据 do
    彩果数量=彩果数量+数据[n]
  end
  local 扣除数据={}
  local 已扣除=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称=="彩果" and 已扣除<彩果数量 then
      if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=彩果数量-已扣除 then
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=彩果数量-已扣除}
        已扣除=已扣除+(彩果数量-已扣除)
      else
        已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
      end
    end
  end
  if 已扣除<彩果数量 then
    常规提示(id,"坐骑染色需要#R20个#Y彩果,你没有那么多!")
    return
  else
    for n=1,#扣除数据 do
      self.数据[扣除数据[n].id].数量=self.数据[扣除数据[n].id].数量-扣除数据[n].数量
      if self.数据[扣除数据[n].id].数量<=0 then
        self.数据[扣除数据[n].id]=nil
        玩家数据[id].角色.数据.道具[扣除数据[n].格子]=nil
      end
    end
  for i=1,#玩家数据[id].角色.数据.坐骑列表 do
      if 玩家数据[id].角色.数据.坐骑列表[i].认证码 == 数据.序列 then
        if 玩家数据[id].角色.数据.坐骑列表[i].染色方案==nil then
            玩家数据[id].角色.数据.坐骑列表[i].染色方案=0
        end
        if 玩家数据[id].角色.数据.坐骑列表[i].染色组==nil or 玩家数据[id].角色.数据.坐骑列表[i].染色组==0 then
            玩家数据[id].角色.数据.坐骑列表[i].染色组={}
        end
        if 玩家数据[id].角色.数据.坐骑.染色方案==nil then
            玩家数据[id].角色.数据.坐骑.染色方案=0
        end
        if 玩家数据[id].角色.数据.坐骑.染色组==nil or 玩家数据[id].角色.数据.坐骑.染色组==0 then
            玩家数据[id].角色.数据.坐骑.染色组={}
        end
        玩家数据[id].角色.数据.坐骑列表[i].染色方案=数据.序列1
        玩家数据[id].角色.数据.坐骑列表[i].染色组[1]=数据.序列2
        玩家数据[id].角色.数据.坐骑列表[i].染色组[2]=数据.序列3
        玩家数据[id].角色.数据.坐骑列表[i].染色组[3]=数据.序列4
        玩家数据[id].角色.数据.坐骑.染色方案=数据.序列1
        玩家数据[id].角色.数据.坐骑.染色组[1]=数据.序列2
        玩家数据[id].角色.数据.坐骑.染色组[2]=数据.序列3
        玩家数据[id].角色.数据.坐骑.染色组[3]=数据.序列4
        常规提示(id,"恭喜你！坐骑染色成功，快去看看你的坐骑的新颜色吧！")
        发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.数据.坐骑)
        发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
        道具刷新(id)
        地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑)
    end
  end
end
end

function 道具处理类:坐骑饰品染色处理(连接id,id,数据)
  local 彩果数量=20
  for n=1,#数据 do
    彩果数量=彩果数量+数据[n]
  end
  local 扣除数据={}
  local 已扣除=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称=="彩果" and 已扣除<彩果数量 then
      if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=彩果数量-已扣除 then
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=彩果数量-已扣除}
        已扣除=已扣除+(彩果数量-已扣除)
      else
        已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
      end
    end
  end
  if 已扣除<彩果数量 then
    常规提示(id,"坐骑饰品染色需要#R20个#Y彩果,你没有那么多!")
    return
  else
    for n=1,#扣除数据 do
      self.数据[扣除数据[n].id].数量=self.数据[扣除数据[n].id].数量-扣除数据[n].数量
      if self.数据[扣除数据[n].id].数量<=0 then
        self.数据[扣除数据[n].id]=nil
        玩家数据[id].角色.数据.道具[扣除数据[n].格子]=nil
      end
    end
  for i=1,#玩家数据[id].角色.数据.坐骑列表 do
      if 玩家数据[id].角色.数据.坐骑列表[i].认证码 == 数据.序列 then
        if 玩家数据[id].角色.数据.坐骑.饰品~=nil and 玩家数据[id].角色.数据.坐骑.饰品物件~=nil then
          if 玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色方案==nil then
              玩家数据[id].角色.数据.坐骑列表[i].染色方案=0
          end
          if 玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组==nil or 玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组==0 then
              玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组={}
          end
          if 玩家数据[id].角色.数据.坐骑.饰品物件.染色方案==nil then
              玩家数据[id].角色.数据.坐骑.饰品物件.染色方案=0
          end
          if 玩家数据[id].角色.数据.坐骑.饰品物件.染色组==nil or 玩家数据[id].角色.数据.坐骑.饰品物件.染色组==0 then
              玩家数据[id].角色.数据.坐骑.饰品物件.染色组={}
          end
          玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色方案=数据.序列1
          玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组[1]=数据.序列2
          玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组[2]=数据.序列3
          玩家数据[id].角色.数据.坐骑列表[i].饰品物件.染色组[3]=数据.序列4
          玩家数据[id].角色.数据.坐骑.饰品物件.染色方案=数据.序列1
          玩家数据[id].角色.数据.坐骑.饰品物件.染色组[1]=数据.序列2
          玩家数据[id].角色.数据.坐骑.饰品物件.染色组[2]=数据.序列3
          玩家数据[id].角色.数据.坐骑.饰品物件.染色组[3]=数据.序列4
          常规提示(id,"恭喜你！坐骑饰品染色成功，快去看看你的坐骑的新颜色吧！")
          发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.数据.坐骑)
          发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
          道具刷新(id)
          地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑)
        else
          常规提示(id,"少侠是来寻我开心的么？你要染色的坐骑饰品呢！")
          return
        end
      end
  end
end
end

function 道具处理类:给予暗器(id,等级)
  local 名称="飞刀"
  if 等级==1 then
    名称="飞刀"
  elseif 等级==10 then
    名称="顺逆神针"
  elseif 等级==2 then
    名称="飞蝗石"
  elseif 等级==3 then
    名称="铁蒺藜"
  elseif 等级==4 then
    名称="无影神针"
  elseif 等级==5 then
    名称="孔雀翎"
  elseif 等级==6 then
    名称="含沙射影"
  elseif 等级==7 then
    名称="回龙摄魂标"
  elseif 等级==8 then
    名称="寸阴若梦"
  elseif 等级==9 then
    名称="魔睛子"
  end
  常规提示(id,"#Y你获得了#R"..名称)
  self:给予道具(id,名称)
end

function 道具处理类:符石合成处理(连接id,id,数据)
  local 道具id=玩家数据[id].角色.数据.道具[数据.序列]
  local 道具id1=玩家数据[id].角色.数据.道具[数据.序列1]
  local 道具id2=玩家数据[id].角色.数据.道具[数据.序列2]
  local 道具id3=玩家数据[id].角色.数据.道具[数据.序列3]

  if self.数据[道具id].名称~="符石卷轴" and self.数据[道具id1].名称~="符石卷轴" and self.数据[道具id2].名称~="符石卷轴" and self.数据[道具id3].名称~="符石卷轴" then
      常规提示(id,"未找到符石卷轴")
      return
  end
  if (self.数据[道具id].名称=="符石卷轴" and self.数据[道具id1].名称=="符石卷轴") or (self.数据[道具id1].名称=="符石卷轴" and self.数据[道具id2].名称=="符石卷轴") or (self.数据[道具id2].名称=="符石卷轴" and self.数据[道具id3].名称=="符石卷轴") or (self.数据[道具id].名称=="符石卷轴" and self.数据[道具id2].名称=="符石卷轴") or (self.数据[道具id].名称=="符石卷轴" and self.数据[道具id3].名称=="符石卷轴") or (self.数据[道具id1].名称=="符石卷轴" and self.数据[道具id3].名称=="符石卷轴") then
      常规提示(id,"只能使用一个符石卷轴")
      return
  end
  if (self.数据[道具id].名称=="符石卷轴" and self.数据[道具id1].等级==self.数据[道具id2].等级 and self.数据[道具id1].等级==self.数据[道具id3].等级) or (self.数据[道具id1].名称=="符石卷轴" and self.数据[道具id].等级==self.数据[道具id2].等级 and self.数据[道具id].等级==self.数据[道具id3].等级) or (self.数据[道具id2].名称=="符石卷轴" and self.数据[道具id1].等级==self.数据[道具id].等级 and self.数据[道具id1].等级==self.数据[道具id3].等级) or (self.数据[道具id3].名称=="符石卷轴" and self.数据[道具id1].等级==self.数据[道具id2].等级 and self.数据[道具id1].等级==self.数据[道具id].等级) then
      local 合成几率=0
      local 符石等级=0
      if self.数据[道具id].等级~=nil or self.数据[道具id1].等级~=nil or self.数据[道具id2].等级~=nil or self.数据[道具id3].等级~=nil then
          if self.数据[道具id].等级==1 or self.数据[道具id1].等级==1 or self.数据[道具id2].等级==1 or self.数据[道具id3].等级==1 then
              合成几率=90
              符石等级=1
          end
          if self.数据[道具id].等级==2 or self.数据[道具id1].等级==2 or self.数据[道具id2].等级==2 or self.数据[道具id3].等级==2 then
              合成几率=80
              符石等级=2
          end
          if self.数据[道具id].等级==3 or self.数据[道具id1].等级==3 or self.数据[道具id2].等级==3 or self.数据[道具id3].等级==3 then
              合成几率=70
              符石等级=3
          end
      end
      if 取随机数(1,100) >=合成几率 then
          if self.数据[道具id].名称=="符石卷轴" then
              if 取随机数()<=30 then
                  self.数据[道具id1]=nil
                  self.数据[道具id2]=nil
              elseif 取随机数()<=60 then
                  self.数据[道具id1]=nil
                  self.数据[道具id3]=nil
              else
                  self.数据[道具id2]=nil
                  self.数据[道具id3]=nil
              end
          elseif self.数据[道具id1].名称=="符石卷轴" then
              if 取随机数()<=30 then
                  self.数据[道具id]=nil
                  self.数据[道具id2]=nil
              elseif 取随机数()<=60 then
                  self.数据[道具id]=nil
                  self.数据[道具id3]=nil
              else
                  self.数据[道具id2]=nil
                  self.数据[道具id3]=nil
              end
          elseif self.数据[道具id2].名称=="符石卷轴" then
              if 取随机数()<=30 then
                  self.数据[道具id]=nil
                  self.数据[道具id1]=nil
              elseif 取随机数()<=60 then
                  self.数据[道具id]=nil
                  self.数据[道具id3]=nil
              else
                  self.数据[道具id1]=nil
                  self.数据[道具id3]=nil
              end
          elseif self.数据[道具id3].名称=="符石卷轴" then
              if 取随机数()<=30 then
                  self.数据[道具id]=nil
                  self.数据[道具id1]=nil
              elseif 取随机数()<=60 then
                  self.数据[道具id]=nil
                  self.数据[道具id2]=nil
              else
                  self.数据[道具id1]=nil
                  self.数据[道具id2]=nil
              end
          end
          常规提示(id,"合成失败，你损失了俩块符石")
          return
      else
          local 符石名称 = 取符石(符石等级+1)
          self:给予道具(id,符石名称,1,55)
          self.数据[道具id]=nil
          self.数据[道具id1]=nil
          self.数据[道具id2]=nil
          self.数据[道具id3]=nil
          常规提示(id,"恭喜你，合成了更高等级的符石！")
      end
  else
      常规提示(id,"不同级别的符石无法合成！")
      return
  end

end

function 道具处理类:使用法宝(连接id,id,编号)
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id==nil or self.数据[道具id]==nil then
    常规提示(id,"#Y你没有这件法宝")
    self:索要法宝(连接id,id)
    return
  end
  local 名称=self.数据[道具id].名称
  if 名称=="五色旗盒" then
    if self.数据[道具id].魔法<=0 then
      常规提示(id,"#Y你的法宝灵气不足")
      return
    elseif 玩家数据[id].角色.数据.等级<30 then
      常规提示(id,"#Y你的等级不足以使用此法宝")
      return
    end
    local aa ="请选择你要进行的操作："
    local xx={"合成导标旗","补充合成旗"}
    发送数据(连接id,1501,{名称="五色旗盒",对话=aa,选项=xx})
    玩家数据[id].最后操作="合成旗1"
    玩家数据[id].法宝id=编号
    return
  elseif 名称=="月光宝盒" then
    if self.数据[道具id].魔法<=0 then
      常规提示(id,"#Y你的法宝灵气不足")
      return
    end
    if 玩家数据[id].角色.数据.等级<30 then
      常规提示(id,"#Y你的等级不足以使用此法宝")
      return
    end
    local aa ="请选择你要进行的操作："
    local xx={"送我过去","在这里定标"}
    发送数据(连接id,1501,{名称="月光宝盒",对话=aa,选项=xx})
    玩家数据[id].最后操作="月光宝盒"
    玩家数据[id].法宝id=编号
    return
  end
  常规提示(id,"#Y此类型法宝当前不可用")
  return
end

function 道具处理类:多开使用法宝(连接id,id,编号,主id)
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id==nil or 玩家数据[id].道具.数据[道具id]==nil then
    常规提示(主id,"#Y你没有这件法宝")
    self:多开索要法宝(连接id,id)
    return
  end
  local 名称=玩家数据[id].道具.数据[道具id].名称
  if 名称=="五色旗盒" then
    if 玩家数据[id].道具.数据[道具id].魔法<=0 then
      常规提示(主id,"#Y你的法宝灵气不足")
      return
    elseif 玩家数据[id].角色.数据.等级<30 then
      常规提示(主id,"#Y你的等级不足以使用此法宝")
      return
    end
    local aa ="请选择你要进行的操作："
    local xx={"合成导标旗","补充合成旗"}
    发送数据(连接id,1501,{名称="五色旗盒",对话=aa,选项=xx})
    玩家数据[id].最后操作="合成旗1"
    玩家数据[id].法宝id=编号
    return
  elseif 名称=="月光宝盒" then
    if 玩家数据[id].道具.数据[道具id].魔法<=0 then
      常规提示(主id,"#Y你的法宝灵气不足")
      return
    end
    if 玩家数据[id].角色.数据.等级<30 then
      常规提示(主id,"#Y你的等级不足以使用此法宝")
      return
    end
    local aa ="请选择你要进行的操作："
    local xx={"送我过去","在这里定标"}
    发送数据(连接id,1501,{名称="月光宝盒",对话=aa,选项=xx})
    玩家数据[id].最后操作="月光宝盒"
    玩家数据[id].法宝id=编号
    return
  end
  常规提示(主id,"#Y此类型法宝当前不可用")
  return
end

function 道具处理类:替换法宝(连接id,id,编号,编号1)
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  -- if 玩家数据[id].角色.数据.等级<self.数据[道具id].特技 then
  --   常规提示(id,"#Y你当前的等级无法佩戴此类型的法宝")
  --   return
  -- end
  local 名称=self.数据[道具id].名称
  local 门派=玩家数据[id].角色.数据.门派
  if 名称=="天师符" and 门派~="方寸山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="织女扇" and 门派~="女儿村" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="雷兽" and 门派~="天宫" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="定风珠" and 门派~="五庄观" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="七杀" and 门派~="大唐官府" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="罗汉珠" and 门派~="化生寺" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="天师符" and 门派~="方寸山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="金刚杵" and 门派~="普陀山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="兽王令" and 门派~="狮驼岭" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="摄魂" and 门派~="阴曹地府" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="干将莫邪" and 门派~="大唐官府" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="慈悲" and 门派~="化生寺" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="救命毫米" and 门派~="方寸山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="伏魔天书" and 门派~="天宫" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="普渡" and 门派~="普陀山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="镇海珠" and 门派~="龙宫" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="奇门五行令" and 门派~="五庄观" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="失心钹" and 门派~="狮驼岭" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="五火神焰印" and 门派~="魔王寨" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="九幽" and 门派~="阴曹地府" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="月影" and 门派~="神木林" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="宝烛" and 门派~="无底洞" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  end
  if 玩家数据[id].角色.数据.法宝佩戴[编号1]==nil then
    玩家数据[id].角色.数据.法宝佩戴[编号1]=玩家数据[id].角色.数据.法宝[编号]
    玩家数据[id].角色.数据.法宝[编号]=nil
  else
    local 临时编号=玩家数据[id].角色.数据.法宝[编号]
    玩家数据[id].角色.数据.法宝[编号]=玩家数据[id].角色.数据.法宝佩戴[编号1]
    玩家数据[id].角色.数据.法宝佩戴[编号1]=临时编号
  end
  self:索要法宝(连接id,id)
end

function 道具处理类:卸下法宝(连接id,id,编号)
  local 格子=玩家数据[id].角色:取法宝格子()
  if 格子==0 then
    常规提示(id,"#Y你的法宝栏已经满了")
    return
  end
  玩家数据[id].角色.数据.法宝[格子]=玩家数据[id].角色.数据.法宝佩戴[编号]
  玩家数据[id].角色.数据.法宝佩戴[编号]=nil
  self:索要法宝(连接id,id)
end


function 道具处理类:多开卸下法宝(连接id,id,编号,主id)
  local 格子=玩家数据[id].角色:多开取法宝格子(id)
  if 格子==0 then
    常规提示(主id,"#Y你的法宝栏已经满了")
    return
  end
  玩家数据[id].角色.数据.法宝[格子]=玩家数据[id].角色.数据.法宝佩戴[编号]
  玩家数据[id].角色.数据.法宝佩戴[编号]=nil
  self:多开索要法宝(连接id,id)
end

function 道具处理类:修炼法宝(连接id,id,编号)
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id==nil or self.数据[道具id]==nil then
    常规提示(id,"#Y你没有这件法宝")
    self:索要法宝(连接id,id)
    return
  end
  local 上限=9
  if self.数据[道具id].分类==2 then
    上限=12
  elseif self.数据[道具id].分类==3 then
    上限=15
  elseif self.数据[道具id].分类==4 then
    上限=18
  end
  if self.数据[道具id].气血==上限 then
    常规提示(id,"#Y你的这件法宝已经满层了，无法再进行修炼")
    return
  end
  local 消耗经验=math.floor(self.数据[道具id].升级经验)
  -- if 消耗经验>10000000 then
  --   消耗经验=10000000
  -- end
  if 玩家数据[id].角色.数据.当前经验<消耗经验 then
    常规提示(id,"#Y本次修炼需要消耗#R"..消耗经验.."#Y点人物经验，您似乎没有那么多的经验哟")
    return
  end
  玩家数据[id].角色.数据.当前经验=玩家数据[id].角色.数据.当前经验-消耗经验
  玩家数据[id].角色:日志记录("修炼法宝["..self.数据[道具id].名称.."]消耗"..消耗经验.."点经验,剩余经验"..玩家数据[id].角色.数据.当前经验)
  常规提示(id,"#Y修炼成功,你消耗了#R"..消耗经验.."#Y了点人物经验")
  self.数据[道具id].当前经验=self.数据[道具id].当前经验+消耗经验
  if self.数据[道具id].当前经验>=self.数据[道具id].升级经验 then
    self.数据[道具id].气血=self.数据[道具id].气血+1
    self.数据[道具id].当前经验=self.数据[道具id].当前经验-self.数据[道具id].升级经验
    self.数据[道具id].魔法=取灵气上限(self.数据[道具id].分类)
    if self.数据[道具id].气血<上限 then
      self.数据[道具id].升级经验=法宝经验[self.数据[道具id].分类][self.数据[道具id].气血+1]
    end
    常规提示(id,"#Y你的法宝#R"..self.数据[道具id].名称.."#Y境界提升了")
  end
  发送数据(连接id,31,玩家数据[id].角色:取总数据())
  发送数据(连接id,3528,{id=编号,当前经验=self.数据[道具id].当前经验,升级经验=self.数据[道具id].升级经验,境界=self.数据[道具id].气血,灵气=self.数据[道具id].魔法})
end


function 道具处理类:多开修炼法宝(连接id,id,编号,主id)
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id==nil or 玩家数据[id].道具.数据[道具id]==nil then
    常规提示(主id,"#Y你没有这件法宝")
    self:多开索要法宝(连接id,id)
    return
  end
  local 上限=9
  if 玩家数据[id].道具.数据[道具id].分类==2 then
    上限=12
  elseif 玩家数据[id].道具.数据[道具id].分类==3 then
    上限=15
  elseif 玩家数据[id].道具.数据[道具id].分类==4 then
    上限=18
  end
  if 玩家数据[id].道具.数据[道具id].气血==上限 then
    常规提示(主id,"#Y你的这件法宝已经满层了，无法再进行修炼")
    return
  end
  local 消耗经验=math.floor(玩家数据[id].道具.数据[道具id].升级经验)
  -- if 消耗经验>10000000 then
  --   消耗经验=10000000
  -- end
  if 玩家数据[id].角色.数据.当前经验<消耗经验 then
    常规提示(主id,"#Y本次修炼需要消耗#R"..消耗经验.."#Y点人物经验，您似乎没有那么多的经验哟")
    return
  end
  玩家数据[id].角色.数据.当前经验=玩家数据[id].角色.数据.当前经验-消耗经验
  玩家数据[id].角色:日志记录("修炼法宝["..玩家数据[id].道具.数据[道具id].名称.."]消耗"..消耗经验.."点经验,剩余经验"..玩家数据[id].角色.数据.当前经验)
  常规提示(主id,"#Y修炼成功,你消耗了#R"..消耗经验.."#Y了点人物经验")
  玩家数据[id].道具.数据[道具id].当前经验=玩家数据[id].道具.数据[道具id].当前经验+消耗经验
  if 玩家数据[id].道具.数据[道具id].当前经验>=玩家数据[id].道具.数据[道具id].升级经验 then
    玩家数据[id].道具.数据[道具id].气血=玩家数据[id].道具.数据[道具id].气血+1
    玩家数据[id].道具.数据[道具id].当前经验=玩家数据[id].道具.数据[道具id].当前经验-玩家数据[id].道具.数据[道具id].升级经验
    玩家数据[id].道具.数据[道具id].魔法=取灵气上限(玩家数据[id].道具.数据[道具id].分类)
    if 玩家数据[id].道具.数据[道具id].气血<上限 then
      玩家数据[id].道具.数据[道具id].升级经验=法宝经验[玩家数据[id].道具.数据[道具id].分类][玩家数据[id].道具.数据[道具id].气血+1]
    end
    常规提示(主id,"#Y你的法宝#R"..玩家数据[id].道具.数据[道具id].名称.."#Y境界提升了")
  end
  发送数据(连接id,31.1,玩家数据[id].角色:取总数据())
  发送数据(连接id,3528.1,{id=编号,当前经验=玩家数据[id].道具.数据[道具id].当前经验,升级经验=玩家数据[id].道具.数据[道具id].升级经验,境界=玩家数据[id].道具.数据[道具id].气血,灵气=玩家数据[id].道具.数据[道具id].魔法})
end

function 道具处理类:仓库取走事件(连接id,id,数据)
  local 页数=数据.页数
  local 道具=数据.物品
  local 类型=数据.类型
  local 格子=玩家数据[id].角色:取道具格子1(类型)
  if 格子==0 then
    常规提示(id,"#Y/你身上的包裹没有足够的空间")
    return
  end
  玩家数据[id].角色.数据[类型][格子]=玩家数据[id].角色.数据.道具仓库[页数][道具]
  玩家数据[id].角色.数据.道具仓库[页数][道具] =nil
  道具刷新(id)
  发送数据(连接id,3513,玩家数据[id].道具:索要道具5(id,类型))
  发送数据(连接id,3524,{道具=self:索要仓库道具(id,数据.页数),页数=数据.页数})
  发送数据(连接id,3525)
end

function 道具处理类:仓库存放事件(连接id,id,数据)
  local 页数=数据.页数
  local 道具=数据.物品
  local 类型=数据.类型
  local 格子=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具仓库[页数][n]==nil and 格子==0 then
      格子=n
    end
  end
  if 格子==0 then
    常规提示(id,"#Y/你这个仓库已经无法存放更多的物品了")
    return
  end
  if 道具~=nil and 玩家数据[id].角色.数据[类型][道具]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]].总类=="帮派银票" and self.数据[玩家数据[id].角色.数据[类型][道具]].名称=="帮派银票" then
      常规提示(id,"#Y/该物品无法存入到仓库")
      return
  end
  if 道具~=nil and 玩家数据[id].角色.数据[类型][道具]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]].总类=="跑商商品" then
      常规提示(id,"#Y/该物品无法存入到仓库")
      return
  end
  if 道具~=nil and 玩家数据[id].角色.数据[类型][道具]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]]~=nil and self.数据[玩家数据[id].角色.数据[类型][道具]].总类==1001 then
      常规提示(id,"#Y/该物品无法存入到仓库")
      return
  end
 玩家数据[id].角色.数据.道具仓库[页数][格子]=玩家数据[id].角色.数据[类型][道具]
 玩家数据[id].角色.数据[类型][道具]=nil
 道具刷新(id)
 发送数据(连接id,3513,玩家数据[id].道具:索要道具5(id,类型))
 发送数据(连接id,3524,{道具=self:索要仓库道具(id,数据.页数),页数=数据.页数})
 发送数据(连接id,3525)
end

function 道具处理类:快捷加血(连接id,id,类型)
  if 玩家数据[id].战斗~=0 then return  end
  local 数值=0
  local 编号=0
  if 类型==1 then
    数值=玩家数据[id].角色.数据.气血上限-玩家数据[id].角色.数据.气血
  else
    编号=玩家数据[id].召唤兽:取编号(玩家数据[id].角色.数据.参战宝宝.认证码)
    数值=玩家数据[id].召唤兽.数据[编号].最大气血-玩家数据[id].召唤兽.数据[编号].气血
  end
  if 数值==0 then
    return
  end
  local 恢复=self:快捷加血1(id,数值)
  if 恢复==0 then
    return
  end
  self:加血处理(连接id,id,恢复,编号)
  道具刷新(id)
end

function 道具处理类:快捷加血1(id,数值)
  local 道具={"包子","四叶花"}
  local 恢复=0
  local 道具删除={}
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      local 道具id=玩家数据[id].角色.数据.道具[n]
      local 符合=false
      for i=1,#道具 do
        if self.数据[道具id].名称==道具[i] then
          符合=true
        end
      end
      if 符合 then
        if 恢复<数值 and self:取加血道具1(self.数据[道具id].名称,道具id)*self.数据[道具id].数量>=数值 then --
          local 扣除数量=0
          for i=1,self.数据[道具id].数量 do
            if 恢复<数值 then
              恢复=恢复+self:取加血道具1(self.数据[道具id].名称,道具id)
              扣除数量=扣除数量+1
            end
          end
          道具删除[#道具删除+1]={格子=n,id=道具id,数量=扣除数量}
        elseif 恢复<数值 then
          恢复= self:取加血道具1(self.数据[道具id].名称,道具id)*self.数据[道具id].数量
          道具删除[#道具删除+1]={格子=n,id=道具id,数量=self.数据[道具id].数量}
        end
      end
    end
  end
  if 恢复~=0 then
    for n=1,#道具删除 do
      self.数据[道具删除[n].id].数量=self.数据[道具删除[n].id].数量-道具删除[n].数量
      if self.数据[道具删除[n].id].数量<=0 then
        玩家数据[id].角色.数据.道具[道具删除[n].格子]=nil
      end
    end
  end
  if 恢复>数值 then 恢复=数值 end
  return 恢复
end

function 道具处理类:快捷加蓝(连接id,id,类型)
  if 玩家数据[id].战斗~=0 then return  end
  local 数值=0
  local 编号=0
  if 类型==1 then
    数值=玩家数据[id].角色.数据.最大魔法-玩家数据[id].角色.数据.魔法
  else
    编号=玩家数据[id].召唤兽:取编号(玩家数据[id].角色.数据.参战宝宝.认证码)
    数值=玩家数据[id].召唤兽.数据[编号].最大魔法-玩家数据[id].召唤兽.数据[编号].魔法
  end
  if 数值==0 then
    return
  end
  local 恢复=self:快捷加蓝1(id,数值)
  if 恢复==0 then
    return
  end
  self:加魔处理(连接id,id,恢复,编号)
  道具刷新(id)
end

function 道具处理类:快捷加蓝1(id,数值)
 local 道具={"鬼切草","佛手","紫丹罗"}
 local 恢复=0
 local 道具删除={}
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      local 道具id=玩家数据[id].角色.数据.道具[n]
      local 符合=false
      for i=1,#道具 do
        if self.数据[道具id].名称==道具[i] then
          符合=true
        end
      end
      if 符合 then
        if 恢复<数值 and self:取加魔道具1(self.数据[道具id].名称,道具id)*self.数据[道具id].数量>=数值 then --
          local 扣除数量=0
          for i=1,self.数据[道具id].数量 do
            if 恢复<数值 then
              恢复=恢复+self:取加魔道具1(self.数据[道具id].名称,道具id)
              扣除数量=扣除数量+1
            end
          end
          道具删除[#道具删除+1]={格子=n,id=道具id,数量=扣除数量}
        elseif 恢复<数值 then
          恢复= self:取加魔道具1(self.数据[道具id].名称,道具id)*self.数据[道具id].数量
          道具删除[#道具删除+1]={格子=n,id=道具id,数量=self.数据[道具id].数量}
        end
      end
    end
  end
  if 恢复~=0 then
    for n=1,#道具删除 do
      self.数据[道具删除[n].id].数量=self.数据[道具删除[n].id].数量-道具删除[n].数量
      if self.数据[道具删除[n].id].数量<=0 then
        玩家数据[id].角色.数据.道具[道具删除[n].格子]=nil
      end
    end
  end
  if 恢复>数值 then 恢复=数值 end
  return 恢复
end

function 道具处理类:摊位上架商品(连接id,id,数据)
  if 玩家数据[id].摊位数据==nil then return end
  if 数据.价格=="" or 数据.价格==nil or 数据.价格+0<=0 then
    数据.价格=1
  end
  local 价格=数据.价格+0
  if 数据.bb==nil then --上架道具
    local 编号=玩家数据[id].角色.数据.道具[数据.道具+0]
    if self.数据[编号].不可交易 then
      常规提示(id,"#Y/该物品不可转移给他人")
      return
    end
    玩家数据[id].摊位数据.道具[数据.道具+0]=table.loadstring(table.tostring(self.数据[编号]))
    玩家数据[id].摊位数据.道具[数据.道具+0].价格=价格
    常规提示(id,"#Y/上架物品成功！")
  elseif 数据.道具==nil then
    local 编号=数据.bb+0
    if 玩家数据[id].召唤兽.数据[编号].不可交易 then
      常规提示(id,"#Y/该召唤兽不可转移给他人")
      return
    elseif 玩家数据[id].召唤兽.数据[编号].统御 ~= nil then
      常规提示(id,"#Y/已被坐骑统御的召唤兽无法转移给他人")
      return
    elseif #玩家数据[id].召唤兽.数据>7 then
      常规提示(id,"#Y/召唤携带数量超过7个无法上架,请将多余的存仓库")
      return
    end
    玩家数据[id].摊位数据.bb[编号]=table.loadstring(table.tostring(玩家数据[id].召唤兽.数据[编号]))
    玩家数据[id].摊位数据.bb[编号].价格=价格
    玩家数据[id].摊位数据.bb[编号].id=编号
    常规提示(id,"#Y/上架召唤兽成功！")
  end
  玩家数据[id].摊位数据.更新=os.time()
  self:索要摊位数据(连接id,id,3517)
end

function 道具处理类:收摊处理(连接id,id)
  玩家数据[id].摊位数据=nil
  常规提示(id,"#Y/收摊回家玩老婆去咯！")
  发送数据(连接id,3518)
  地图处理类:取消玩家摊位(id)
end

function 道具处理类:自动合成宝石(id,名称,道具id,包裹类型,编号,主id,连接id)
 local 合成格子=0
 local 合成id=0
 if 主id~=nil then
    提示id=主id
  else
    提示id=id
 end

 for n=1,20 do
   if 玩家数据[id].角色.数据[包裹类型][n]~=nil and 玩家数据[id].道具.数据[玩家数据[id].角色.数据[包裹类型][n]]~=nil and n~=编号 then
     if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[包裹类型][n]].名称==名称 and 玩家数据[id].道具.数据[玩家数据[id].角色.数据[包裹类型][n]].级别限制==玩家数据[id].道具.数据[道具id].级别限制 then
       合成格子=n
       合成id=玩家数据[id].角色.数据[包裹类型][n]
       end
     end
   end
  if 合成格子~=0 then
   local 几率=玩家数据[id].装备:取宝石合成几率(id,玩家数据[id].道具.数据[道具id].级别限制+1)
   if 几率 then
     玩家数据[id].道具.数据[道具id].级别限制=玩家数据[id].道具.数据[道具id].级别限制+1
     常规提示(提示id,"你合成了一个更高级的宝石")
    else
     常规提示(提示id,"合成失败，你因此损失了一颗宝石")
     end
   玩家数据[id].道具.数据[玩家数据[id].角色.数据[包裹类型][合成格子]]=nil
   玩家数据[id].道具.数据[合成id]=nil
   if 主id~=nil then
    多开道具刷新(id,连接id)
      else
   道具刷新(id)
   end
 else
   常规提示(提示id,"未找到可合成的宝石")
     end
 end

function 道具处理类:更改摊位招牌(连接id,id,名称)
  if 玩家数据[id].摊位数据==nil then return end
  if os.time()-玩家数据[id].摊位数据.更新<=5 then
    常规提示(id,"#Y/请不要频繁更换招牌")
    return
  end
  常规提示(id,"#Y/更新招牌成功")
  玩家数据[id].摊位数据.更新=os.time()
  玩家数据[id].摊位数据.名称=名称
  发送数据(连接id,3516,名称)
  地图处理类:设置玩家摊位(id,名称)
end

function 道具处理类:购买摊位商品(连接id,id,数据)
  local 对方id=玩家数据[id].摊位id
  if 假人玩家处理类在线 and 数据~=nil and 对方id~=nil and math.floor(对方id)<4000000 and 摆摊假人处理类:假人信息(对方id) ~= nil then
    假人玩家处理类:malltop(对方id,连接id,id,数据)
    return
  end
  if 对方id==nil or 玩家数据[对方id]==nil or 玩家数据[对方id].摊位数据==nil then
    常规提示(id,"#Y/这个摊位并不存在")
    return
  end
  if 玩家数据[id].摊位查看<玩家数据[对方id].摊位数据.更新 then
    常规提示(id,"#Y/这个摊位的数据已经发生了变化，请重新打开该摊位")
    return
  end
  --数据转移
  local 名称=玩家数据[对方id].角色.数据.名称
  local 名称1=玩家数据[id].角色.数据.名称
  local 账号=玩家数据[对方id].账号
  local 账号1=玩家数据[id].账号



  if 数据.bb==nil then --购买道具
    if  玩家数据[对方id].摊位数据.道具[数据.道具]==nil then
      常规提示(id,"#Y/这个商品并不存在")
      return
    end
    if 玩家数据[对方id].角色.数据.道具[数据.道具]==nil or 玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]]==nil then
       常规提示(id,"#Y/这个商品并不存在")
        return
    end
    if  玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]].识别码~=玩家数据[对方id].摊位数据.道具[数据.道具].识别码 then
        常规提示(id,"#Y/这个商品并不存在")
        return
    end
    local 价格=玩家数据[对方id].摊位数据.道具[数据.道具].价格
    if 玩家数据[对方id].摊位数据.道具[数据.道具].可叠加==false or 玩家数据[对方id].摊位数据.道具[数据.道具].数量==nil then
        数据.数量 = 1
    elseif  数据.数量 > 玩家数据[对方id].摊位数据.道具[数据.道具].数量 then
        数据.数量 = 玩家数据[对方id].摊位数据.道具[数据.道具].数量
    end
    if 数据.数量 > 1 then
      价格=玩家数据[对方id].摊位数据.道具[数据.道具].价格*数据.数量
    end
        if math.floor(数据.数量) ~= 数据.数量 then
      写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
      发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
      --__S服务:断开连接(玩家数据[id].连接id)
      return 0
    end
    if math.floor(价格)  ~= 价格 then  --这东西什么用....
      写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
      发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
      --__S服务:断开连接(玩家数据[id].连接id)
      return 0
    end
    if 玩家数据[id].角色.数据.银子<价格 then
      常规提示(id,"#Y/你没有那么多的银子")
      return
    end
        if 数据.数量<=0 then
      常规提示(id,"#Y/数量不能为0")
      return
    end
        if 价格<=0 then
      常规提示(id,"#Y/操你妈还想刷钱!")
      return
    end
    local 临时格子=玩家数据[id].角色:取道具格子()
    if 临时格子==0 then
      常规提示(id,"#Y/请先整理下包裹吧！")
      return
    end
    玩家数据[id].角色:扣除银子(价格,0,0,"摊位购买",1)
    玩家数据[对方id].角色:添加银子(价格,"摊位出售",1)
    local 道具id=self:取新编号()
    local 道具名称=玩家数据[对方id].摊位数据.道具[数据.道具].名称
    local 道具识别码=玩家数据[对方id].摊位数据.道具[数据.道具].识别码
    玩家数据[id].角色:日志记录(format("[摊位系统-购买]购买道具[%s][%s]，花费%s两银子,出售者信息：[%s][%s][%s]",道具名称,道具识别码,价格,账号,对方id,名称))
    玩家数据[对方id].角色:日志记录(format("[摊位系统-出售]出售道具[%s][%s]，花费%s两银子,购买者信息：[%s][%s][%s]",道具名称,道具识别码,价格,账号1,id,名称1))
    更改道具归属(道具识别码,账号,对方id,名称)
    常规提示(对方id,"#W/出售#R/"..道具名称.."#W/成功！")
    常规提示(id,"#W/购买#R/"..道具名称.."#W/成功！")
    self.数据[道具id]=table.loadstring(table.tostring(玩家数据[对方id].摊位数据.道具[数据.道具]))
    玩家数据[id].角色.数据.道具[临时格子]=道具id
    if 玩家数据[对方id].摊位数据.道具[数据.道具].可叠加==false or 玩家数据[对方id].摊位数据.道具[数据.道具].数量==nil then
      玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]]=nil
      玩家数据[对方id].角色.数据.道具[数据.道具]=nil
      玩家数据[对方id].摊位数据.道具[数据.道具]=nil
    else
      self.数据[道具id].数量=数据.数量
      玩家数据[对方id].摊位数据.道具[数据.道具].数量=玩家数据[对方id].摊位数据.道具[数据.道具].数量-数据.数量
      if 玩家数据[对方id].摊位数据.道具[数据.道具].数量<=0 then
        玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]]=nil
        玩家数据[对方id].角色.数据.道具[数据.道具]=nil
        玩家数据[对方id].摊位数据.道具[数据.道具]=nil
      else
        玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]].数量=玩家数据[对方id].道具.数据[玩家数据[对方id].角色.数据.道具[数据.道具]].数量-数据.数量
      end
    end
    道具刷新(id)
    道具刷新(对方id)
  elseif 数据.道具==nil then
    if 玩家数据[对方id].摊位数据.bb[数据.bb]==nil then
      常规提示(id,"#Y/这只召唤兽不存在")
      return
    elseif #玩家数据[id].召唤兽.数据>=14 then
      常规提示(id,"#Y/你当前可携带的召唤兽数量已达上限！")
      return
    end
    local 价格=玩家数据[对方id].摊位数据.bb[数据.bb].价格
    if 玩家数据[id].角色.数据.银子<价格 then
      常规提示(id,"#Y/你没有那么多的银子")
      return
    end
    local 道具名称=玩家数据[对方id].摊位数据.bb[数据.bb].名称
    local 道具等级=玩家数据[对方id].摊位数据.bb[数据.bb].等级
    local 道具模型=玩家数据[对方id].摊位数据.bb[数据.bb].模型
    -- local 道具技能=#玩家数据[对方id].摊位数据.bb[数据.bb].技能
    local 道具识别码=玩家数据[对方id].摊位数据.bb[数据.bb].认证码
    玩家数据[id].角色:扣除银子(价格,0,0,"摊位购买",1)
    玩家数据[对方id].角色:添加银子(价格,"摊位出售",1)
    玩家数据[id].角色:日志记录(format("[摊位系统-购买]购买召唤兽[%s][%s][%s][%s]，花费%s两银子,出售者信息：[%s][%s][%s]",道具名称,道具模型,道具等级,道具识别码,价格,账号,对方id,名称))
    玩家数据[对方id].角色:日志记录(format("[摊位系统-出售]出售召唤兽[%s][%s][%s][%s]，花费%s两银子,购买者信息：[%s][%s][%s]",道具名称,道具模型,道具等级,道具识别码,价格,账号1,id,名称1))
    常规提示(对方id,"#W/出售#R/"..道具名称.."#W/成功！")
    常规提示(id,"#W/购买#R/"..道具名称.."#W/成功！")
    玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据+1]=table.loadstring(table.tostring(玩家数据[对方id].召唤兽.数据[数据.bb]))
    玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据].认证码 = id.."_"..os.time().."_"..服务端参数.运行时间.."_"..取随机数(111111111111,999999999999)
    玩家数据[对方id].摊位数据.bb[数据.bb] = nil
    玩家数据[对方id].召唤兽.数据[数据.bb] = nil
    --  1 2 3 4 5 6

    local 现有数据 = {}
    local 临时摆摊数据 = {}
    for n = 1, 7 do
      if 玩家数据[对方id].召唤兽.数据[n] ~= nil and 玩家数据[对方id].召唤兽.数据[n] ~= 0 then
        现有数据[#现有数据 + 1] = {
          bb = 玩家数据[对方id].召唤兽.数据[n],
          编号 = n --原本位置
        }
      end
    end

    玩家数据[对方id].召唤兽.数据 = {}
    for n = 1, #现有数据 do
      玩家数据[对方id].召唤兽.数据[n] = 现有数据[n].bb
      for i = 1, 7 do
        if 玩家数据[对方id].摊位数据.bb[i] ~= nil and 玩家数据[对方id].摊位数据.bb[i].id == 现有数据[n].编号 then
            临时摆摊数据[n] = {
              id = n,
              bb = 玩家数据[对方id].摊位数据.bb[i],
              价格 = 玩家数据[对方id].摊位数据.bb[i].价格
          }
        end
      end
    end
    玩家数据[对方id].摊位数据.bb = {}
    for n = 1, 7 do
      if 临时摆摊数据[n] ~= nil then
          玩家数据[对方id].摊位数据.bb[n] = 临时摆摊数据[n].bb
          玩家数据[对方id].摊位数据.bb[n].价格 = 临时摆摊数据[n].价格
          玩家数据[对方id].摊位数据.bb[n].id = 临时摆摊数据[n].id
      end
    end

    if 玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据].参战信息~=nil then
      玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据].参战信息=nil
      玩家数据[对方id].角色.参战信息=nil
      玩家数据[对方id].角色.数据.参战宝宝={}
      发送数据(玩家数据[对方id].连接id,18,玩家数据[对方id].角色.数据.参战宝宝)
    end
    发送数据(玩家数据[id].连接id,3512,玩家数据[id].召唤兽.数据)
    发送数据(玩家数据[对方id].连接id,3512,玩家数据[对方id].召唤兽.数据)
  end
  玩家数据[对方id].摊位数据.更新=os.time()
  玩家数据[id].摊位查看=os.time()
  self:索要其他玩家摊位(连接id,id,对方id,3522)
  self:索要摊位数据(玩家数据[对方id].连接id,对方id,3517)
end

function 道具处理类:索要其他玩家摊位(连接id,id,对方id,序号)
  if 摆摊假人处理类:假人信息(对方id) ~= nil then
    发送数据(玩家数据[id].连接id, 3520, 玩家数据[id].角色.数据.银子)
    摆摊假人处理类.npcUserList["" .. 对方id].更新=os.time()
    玩家数据[id].摊位查看=os.time()
    玩家数据[id].摊位id=对方id
    摆摊假人处理类:索要摊位(玩家数据[id].连接id, 对方id)
    return
  end
  if 玩家数据[对方id]==nil or 玩家数据[对方id].摊位数据==nil then
    常规提示(id,"#Y/这个摊位并不存在")
    return
  end
  玩家数据[id].摊位查看=os.time()
  玩家数据[id].摊位id=对方id
  发送数据(玩家数据[id].连接id,3520,玩家数据[id].角色.数据.银子)
  发送数据(玩家数据[id].连接id,序号,{bb=玩家数据[对方id].摊位数据.bb,物品=玩家数据[对方id].摊位数据.道具,id=对方id,摊主名称=玩家数据[对方id].角色.数据.名称,名称=玩家数据[对方id].摊位数据.名称})
end

function 道具处理类:索要摊位数据(连接id,id,序号)
  if 玩家数据[id].摊位数据==nil then --新建摊位
    if 玩家数据[id].队伍~=0 then
      常规提示(id,"#Y/组队状态下无法摆摊")
      return
    else
      local 地图=玩家数据[id].角色.数据.地图数据.编号
      if 地图~=1001 and 地图~=1501 and 地图~=1070 and 地图~=1092 and 地图~=1208 and 地图~=1226 and 地图~=1040 then
        常规提示(id,"#Y/该场景无法摆摊")
        return
      elseif 玩家数据[id].角色.数据.等级<30 then
        常规提示(id,"#Y/小于30级无法摆摊")
        return
      end
    end
    玩家数据[id].摊位数据={道具={},bb={},id=id,名称="杂货摊位",摊主=玩家数据[id].角色.数据.名称,更新=os.time()}
    地图处理类:设置玩家摊位(id,"杂货摊位")
  end
  发送数据(玩家数据[id].连接id,3512,玩家数据[id].召唤兽.数据)
  发送数据(玩家数据[id].连接id,3513,玩家数据[id].道具:索要道具2(id))
  --道具刷新(id)
  local bb={}
  for i = 1,7 do
    if 玩家数据[id].摊位数据.bb[i]~=nil then
      bb[i]=玩家数据[id].摊位数据.bb[i].价格
    end
  end
  local 道具={}
  for n=1,20 do
    if 玩家数据[id].摊位数据.道具[n]~=nil then
      道具[n]=玩家数据[id].摊位数据.道具[n].价格
    end
  end
  发送数据(连接id,序号,{bb=bb,物品=道具,id=id,摊主名称=玩家数据[id].角色.数据.名称,名称=玩家数据[id].摊位数据.名称})
end

function 道具处理类:取消交易(id)
  if 玩家数据[id].交易信息~=nil then
    if 玩家数据[玩家数据[id].交易信息.id]~=nil then
      发送数据(玩家数据[玩家数据[id].交易信息.id].连接id,3511)
      常规提示(玩家数据[id].交易信息.id,"#Y/对方取消了交易")
      玩家数据[玩家数据[id].交易信息.id].交易信息=nil
    end
    交易数据[玩家数据[id].交易信息.编号]=nil
    玩家数据[id].交易信息=nil
  end
end

function 道具处理类:取指定道具(编号)
  return table.loadstring(table.tostring(self.数据[编号]))
end

function 道具处理类:发起交易处理(连接id,id,id1)
  if 玩家数据[id1]==nil then
    常规提示(id,"#Y/对方并不在线")
    return
  elseif 地图处理类:比较距离(id,id1,5000)==false then
    常规提示(id,"#Y/你们的距离太远了")
    return
  elseif 玩家数据[id1].交易信息~=nil or 玩家数据[id1].摊位数据~=nil then
    常规提示(id,"#Y/对方正忙，请稍后再试")
    return
  elseif 玩家数据[id].交易信息~=nil then
    常规提示(id,"#Y/你上次的交易还没有结束哟~")
    return
  elseif 玩家数据[id].交易信息~=nil then
    常规提示(id,"#Y/你上次的交易还没有结束哟~")
    return
  elseif 玩家数据[id1].禁止交易 then
    常规提示(id,"#Y/对方没有打开交易开关")
    return
  elseif 玩家数据[id].角色.数据.等级<30 then
    常规提示(id,"#Y/等级小于30级不可交易")
    return
  end
  交易数据[id]={[id]={},[id1]={}}
  常规提示(id,"你正在和"..玩家数据[id1].角色.数据.名称.."进行交易")
  常规提示(id1,"你正在和"..玩家数据[id].角色.数据.名称.."进行交易")
  发送数据(玩家数据[id].连接id,3512,玩家数据[id].召唤兽.数据)
  发送数据(玩家数据[id1].连接id,3512,玩家数据[id1].召唤兽.数据)
  发送数据(玩家数据[id].连接id,3513,玩家数据[id].道具:索要道具2(id))
  发送数据(玩家数据[id1].连接id,3513,玩家数据[id1].道具:索要道具2(id1))
  发送数据(玩家数据[id].连接id,3514,{名称=玩家数据[id1].角色.数据.名称,等级=玩家数据[id1].角色.数据.等级})
  发送数据(玩家数据[id1].连接id,3514,{名称=玩家数据[id].角色.数据.名称,等级=玩家数据[id].角色.数据.等级})
  玩家数据[id1].交易信息={编号=id,id=id}
  玩家数据[id].交易信息={编号=id,id=id1}
end

function 道具处理类:完成交易处理(id)
  local 交易id=玩家数据[id].交易信息.编号
  local id1=玩家数据[id].交易信息.id
  if 交易数据[交易id][id].锁定 == nil or 交易数据[交易id][id].锁定 == false then
      常规提示(id,"#Y/请先锁定交易")
      return
  elseif 交易数据[交易id][id].锁定 and (交易数据[交易id][id1].锁定 == nil or 交易数据[交易id][id1].锁定 == false ) then
      常规提示(id,"#Y/请耐心等待对方锁定交易状态")
      return
  end
  if id == 交易id and 交易数据[交易id][id].确定 == nil or 交易数据[交易id][id].确定 == false then
      交易数据[交易id][id].确定 = true
  elseif id ~= 交易id and 交易数据[交易id][id1].确定 == nil or 交易数据[交易id][id1].确定 == false then
      交易数据[交易id][id1].确定 = true
  end
  if (id == 交易id  and 交易数据[交易id][id1].确定 ~= nil and 交易数据[交易id][id1].确定) or (id ~= 交易id and 交易数据[交易id][id].确定 ~= nil or 交易数据[交易id][id].确定)  then
    if 玩家数据[id].战斗~=0 or 玩家数据[id1].战斗~=0 then
      常规提示(id,"#Y/战斗中无法使用此功能")
      常规提示(id1,"#Y/战斗中无法使用此功能")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    elseif 玩家数据[id1].摊位数据~=nil or 玩家数据[id].摊位数据~=nil then
      常规提示(id,"#Y/摆摊状态下无法使用此功能")
      常规提示(id1,"#Y/摆摊状态下无法使用此功能")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    elseif 地图处理类:比较距离(id,id1,5000)==false then
      常规提示(id,"#Y/你们的距离太远了")
      常规提示(id1,"#Y/你们的距离太远了")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    end
    local 银子=交易数据[交易id][id].银子+0
    local 银子1=交易数据[交易id][id1].银子+0
    if 玩家数据[id].角色.数据.银子<银子 then
      常规提示(id,"#Y/你没有那么多的银子")
      常规提示(id1,"#Y/对方没有那么多的银子")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    elseif 玩家数据[id1].角色.数据.银子<银子1 then
      常规提示(id1,"#Y/你没有那么多的银子")
      常规提示(id,"#Y/对方没有那么多的银子")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      交易数据[交易id]=nil
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      return
    end
    --检查道具是否存在
    local 操作id=id
    local 对象id=id1
    for n=1,#交易数据[交易id][操作id].道具 do
      local 道具id=交易数据[交易id][操作id].道具[n].编号
      local 道具id1=玩家数据[操作id].角色.数据.道具[交易数据[交易id][操作id].道具[n].格子]
      if 道具id~=道具id1 or 玩家数据[操作id].道具.数据[道具id]==nil or 玩家数据[操作id].道具.数据[道具id1]==nil or 玩家数据[操作id].道具.数据[道具id1].识别码~=交易数据[交易id][操作id].道具[n].认证码 then
        常规提示(操作id,"#Y/你此次交易的道具数据与锁定前的数据不匹配，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易的道具数据与锁定前的数据不匹配，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].道具.数据[道具id1].不可交易 then
        常规提示(操作id,"#Y/该道具不可交易给他人，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的道具，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return

      end
    end
    local 操作id=id1
    local 对象id=id
    for n=1,#交易数据[交易id][操作id].道具 do
      local 道具id=交易数据[交易id][操作id].道具[n].编号
      local 道具id1=玩家数据[操作id].角色.数据.道具[交易数据[交易id][操作id].道具[n].格子]
      if 道具id~=道具id1 or 玩家数据[操作id].道具.数据[道具id]==nil or 玩家数据[操作id].道具.数据[道具id1]==nil or 玩家数据[操作id].道具.数据[道具id1].识别码~=交易数据[交易id][操作id].道具[n].认证码 then
        常规提示(操作id,"#Y/你此次交易的道具数据与锁定前的数据不匹配，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易的道具数据与锁定前的数据不匹配，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].道具.数据[道具id1].不可交易 then
        常规提示(操作id,"#Y/该道具不可交易给他人，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的道具，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      end
    end
    local 操作id=id
    local 对象id=id1
    for n=1,#交易数据[交易id][操作id].bb do
      local bb编号= 交易数据[交易id][操作id].bb[n].编号
      local 认证码=玩家数据[操作id].召唤兽.数据[bb编号].认证码
      if 认证码~=交易数据[交易id][操作id].bb[n].认证码 then
        常规提示(操作id,"#Y/你此次交易的召唤兽数据与锁定前的数据不匹配，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易的召唤兽数据与锁定前的数据不匹配，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].不可交易 then
        常规提示(操作id,"#Y/该召唤兽不可交易给他人，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的召唤兽，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].统御 ~= nil then
        常规提示(操作id,"#Y/已被统御的召唤兽无法进行交易，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的召唤兽，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].参战信息~=nil or 玩家数据[操作id].召唤兽.数据[bb编号].助战参战~=nil then
        常规提示(操作id,"#Y/请先取消该召唤兽参战状态，本次交易取消")
        常规提示(对象id,"#Y/对方尚未取消召唤兽参战状态，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      end
    end
    local 操作id=id1
    local 对象id=id
    for n=1,#交易数据[交易id][操作id].bb do
      local bb编号= 交易数据[交易id][操作id].bb[n].编号
      local 认证码=玩家数据[操作id].召唤兽.数据[bb编号].认证码
      if 认证码~=交易数据[交易id][操作id].bb[n].认证码 then
        常规提示(操作id,"#Y/你此次交易的召唤兽数据与锁定前的数据不匹配，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易的召唤兽数据与锁定前的数据不匹配，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].不可交易 then
        常规提示(操作id,"#Y/该召唤兽不可交易给他人，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的召唤兽，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].统御 ~= nil then
        常规提示(操作id,"#Y/已被坐骑统御的召唤兽不可交易给他人，本次交易取消")
        常规提示(对象id,"#Y/对方此次交易存在无法交易的召唤兽，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      elseif 玩家数据[操作id].召唤兽.数据[bb编号].参战信息~=nil or 玩家数据[操作id].召唤兽.数据[bb编号].助战参战~=nil then
        常规提示(操作id,"#Y/请先取消该召唤兽参战状态，本次交易取消")
        常规提示(对象id,"#Y/对方尚未取消召唤兽参战状态，本次交易取消")
        发送数据(玩家数据[操作id].连接id,3511)
        发送数据(玩家数据[对象id].连接id,3511)
        玩家数据[id1].交易信息=nil
        玩家数据[id].交易信息=nil
        交易数据[交易id]=nil
        return
      end
    end
    local 道具数量=玩家数据[id].角色:取道具格子2()
    local 道具数量1=玩家数据[id1].角色:取道具格子2()
    if 道具数量<#交易数据[交易id][id1].道具 then
      常规提示(id,"#Y/你身上的空间不够")
      常规提示(id1,"#Y/对方身上的空间不够")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    elseif 道具数量1<#交易数据[交易id][id].道具 then
      常规提示(id1,"#Y/你身上的空间不够")
      常规提示(id,"#Y/对方身上的空间不够")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    end
    if #玩家数据[id].召唤兽.数据+#交易数据[交易id][id1].bb>14 then
      常规提示(id,"#Y/你可携带的召唤兽数量已达上限")
      常规提示(id1,"#Y/对方可携带的召唤兽数量已达上限")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    elseif #玩家数据[id1].召唤兽.数据+#交易数据[交易id][id].bb>14 then
      常规提示(id1,"#Y/你可携带的召唤兽数量已达上限")
      常规提示(id,"#Y/对方可携带的召唤兽数量已达上限")
      发送数据(玩家数据[id].连接id,3511)
      发送数据(玩家数据[id1].连接id,3511)
      玩家数据[id1].交易信息=nil
      玩家数据[id].交易信息=nil
      交易数据[交易id]=nil
      return
    end
    --数据转移起始
    local 操作id=id
    local 对象id=id1
    local 账号=玩家数据[操作id].账号
    local 账号1=玩家数据[对象id].账号
    local 名称=玩家数据[操作id].角色.数据.名称
    local 名称1=玩家数据[对象id].角色.数据.名称
    if 交易数据[交易id][操作id].银子>0 then
      local 之前银子=玩家数据[操作id].角色.数据.银子
      玩家数据[操作id].角色.数据.银子 =玩家数据[操作id].角色.数据.银子 -  交易数据[交易id][操作id].银子
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除银子]给了[%s][%s][%s]银子,银子数额%s,之前数额%s,余额%s",账号1,对象id,名称1,交易数据[交易id][操作id].银子,之前银子,玩家数据[操作id].角色.数据.银子))
      local 之前银子=玩家数据[对象id].角色.数据.银子
      玩家数据[对象id].角色.数据.银子 =玩家数据[对象id].角色.数据.银子 +  交易数据[交易id][操作id].银子
      玩家数据[操作id].角色:日志记录(format("[交易系统-获得银子]获得[%s][%s][%s]银子,银子数额%s,之前数额%s,余额%s",账号,操作id,名称,交易数据[交易id][操作id].银子,之前银子,玩家数据[对象id].角色.数据.银子))
      常规提示(对象id,format("#Y/%s给了你%s两银子",名称,交易数据[交易id][操作id].银子))
      常规提示(操作id,format("#Y/你给了%s%s两银子",名称1,交易数据[交易id][操作id].银子))
    end
    for n=1,#交易数据[交易id][操作id].道具 do
      local 道具id=交易数据[交易id][操作id].道具[n].编号
      local 新格子=玩家数据[对象id].角色:取道具格子()
      local 新id=玩家数据[对象id].道具:取新编号()
      玩家数据[对象id].道具.数据[新id]=玩家数据[操作id].道具:取指定道具(道具id)
      玩家数据[对象id].角色.数据.道具[新格子]=新id
      玩家数据[操作id].道具.数据[道具id]=nil
      玩家数据[操作id].角色.数据.道具[交易数据[交易id][操作id].道具[n].格子]=nil
      local 道具识别码=玩家数据[对象id].道具.数据[新id].识别码
      local 道具名称=玩家数据[对象id].道具.数据[新id].名称
      更改道具归属(道具识别码,账号1,对象id,道具名称)
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除物品]给了[%s][%s][%s]物品,物品名称为%s,识别码为%s",账号1,对象id,名称1,道具名称,道具识别码))
      玩家数据[对象id].角色:日志记录(format("[交易系统-获得物品]获得[%s][%s][%s]物品,物品名称为%s,识别码为%s",账号,操作id,名称,道具名称,道具识别码))
      常规提示(对象id,format("#Y/%s给了你%s",名称,道具名称))
      常规提示(操作id,format("#Y/你给了%s%s",名称1,道具名称))
    end
    local 操作=false
    for n=1,#交易数据[交易id][操作id].bb do
      玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据+1]=table.loadstring(table.tostring(玩家数据[操作id].召唤兽.数据[交易数据[交易id][操作id].bb[n].编号]))
      玩家数据[操作id].召唤兽.数据[交易数据[交易id][操作id].bb[n].编号]=nil
      local bb名称=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].名称
      local bb模型=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].模型
      local bb种类=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].种类
      local bb等级=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].等级
      local bb认证码=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].认证码
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除bb]给了[%s][%s][%s]bb,名称为%s、模型为%s、种类为%s、等级为%s、认证码为%s",账号1,对象id,名称1,bb名称,bb模型,bb种类,bb等级,bb认证码))
      玩家数据[对象id].角色:日志记录(format("[交易系统-获得bb]获得[%s][%s][%s]bb,名称为%s、模型为%s、种类为%s、等级为%s、认证码为%s",账号,操作id,名称,bb名称,bb模型,bb种类,bb等级,bb认证码))
      操作=true
      常规提示(对象id,format("#Y/%s给了你%s",名称,bb名称))
      常规提示(操作id,format("#Y/你给了%s%s",名称1,bb名称))
    end
    local 临时bb={}
    if 操作 then
      for n,v in pairs(玩家数据[操作id].召唤兽.数据) do
        if 玩家数据[操作id].召唤兽.数据[n]~=nil then
          临时bb[#临时bb+1]=玩家数据[操作id].召唤兽.数据[n]
        end
      end
      玩家数据[操作id].召唤兽.数据={}
      玩家数据[操作id].召唤兽.数据=临时bb
      发送数据(玩家数据[操作id].连接id,3512,玩家数据[操作id].召唤兽.数据)
      发送数据(玩家数据[对象id].连接id,3512,玩家数据[操作id].召唤兽.数据)
    end
    --交换数据终止
    local 操作id=id1
    local 对象id=id
    local 账号=玩家数据[操作id].账号
    local 账号1=玩家数据[对象id].账号
    local 名称=玩家数据[操作id].角色.数据.名称
    local 名称1=玩家数据[对象id].角色.数据.名称
    if 交易数据[交易id][操作id].银子>0 then
      local 之前银子=玩家数据[操作id].角色.数据.银子
      玩家数据[操作id].角色.数据.银子 =玩家数据[操作id].角色.数据.银子 -  交易数据[交易id][操作id].银子
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除银子]给了[%s][%s][%s]银子,银子数额%s,之前数额%s,余额%s",账号1,对象id,名称1,交易数据[交易id][操作id].银子,之前银子,玩家数据[操作id].角色.数据.银子))
      local 之前银子=玩家数据[对象id].角色.数据.银子
      玩家数据[对象id].角色.数据.银子 =玩家数据[对象id].角色.数据.银子 +  交易数据[交易id][操作id].银子
      玩家数据[操作id].角色:日志记录(format("[交易系统-获得银子]获得[%s][%s][%s]银子,银子数额%s,之前数额%s,余额%s",账号,操作id,名称,交易数据[交易id][操作id].银子,之前银子,玩家数据[对象id].角色.数据.银子))
      常规提示(对象id,format("#Y/%s给了你%s两银子",名称,交易数据[交易id][操作id].银子))
      常规提示(操作id,format("#Y/你给了%s%s两银子",名称1,交易数据[交易id][操作id].银子))
    end
    for n=1,#交易数据[交易id][操作id].道具 do
      local 道具id=交易数据[交易id][操作id].道具[n].编号
      local 新格子=玩家数据[对象id].角色:取道具格子()
      local 新id=玩家数据[对象id].道具:取新编号()
      玩家数据[对象id].道具.数据[新id]=玩家数据[操作id].道具:取指定道具(道具id)
      玩家数据[对象id].角色.数据.道具[新格子]=新id
      玩家数据[操作id].道具.数据[道具id]=nil
      玩家数据[操作id].角色.数据.道具[交易数据[交易id][操作id].道具[n].格子]=nil
      local 道具识别码=玩家数据[对象id].道具.数据[新id].识别码
      local 道具名称=玩家数据[对象id].道具.数据[新id].名称
      更改道具归属(道具识别码,账号1,对象id,道具名称)
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除物品]给了[%s][%s][%s]物品,物品名称为%s,识别码为%s",账号1,对象id,名称1,道具名称,道具识别码))
      玩家数据[对象id].角色:日志记录(format("[交易系统-获得物品]获得[%s][%s][%s]物品,物品名称为%s,识别码为%s",账号,操作id,名称,道具名称,道具识别码))
      常规提示(对象id,format("#Y/%s给了你%s",名称,道具名称))
      常规提示(操作id,format("#Y/你给了%s%s",名称1,道具名称))
    end
    local 操作=false
    for n=1,#交易数据[交易id][操作id].bb do
      玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据+1]=table.loadstring(table.tostring(玩家数据[操作id].召唤兽.数据[交易数据[交易id][操作id].bb[n].编号]))
      玩家数据[操作id].召唤兽.数据[交易数据[交易id][操作id].bb[n].编号]=nil
      玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].认证码 = 对象id.."_"..os.time().."_"..服务端参数.运行时间.."_"..取随机数(111111111111,999999999999)
      local bb名称=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].名称
      local bb模型=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].模型
      local bb种类=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].种类
      local bb等级=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].等级
      local bb认证码=玩家数据[对象id].召唤兽.数据[#玩家数据[对象id].召唤兽.数据].认证码
      玩家数据[操作id].角色:日志记录(format("[交易系统-扣除bb]给了[%s][%s][%s]bb,名称为%s、模型为%s、种类为%s、等级为%s、认证码为%s",账号1,对象id,名称1,bb名称,bb模型,bb种类,bb等级,bb认证码))
      玩家数据[对象id].角色:日志记录(format("[交易系统-获得bb]获得[%s][%s][%s]bb,名称为%s、模型为%s、种类为%s、等级为%s、认证码为%s",账号,操作id,名称,bb名称,bb模型,bb种类,bb等级,bb认证码))
      操作=true
      常规提示(对象id,format("#Y/%s给了你%s",名称,bb名称))
      常规提示(操作id,format("#Y/你给了%s%s",名称1,bb名称))
    end
    local 临时bb={}
    if 操作 then
      for n,v in pairs(玩家数据[操作id].召唤兽.数据) do
        if 玩家数据[操作id].召唤兽.数据[n]~=nil then
          临时bb[#临时bb+1]=玩家数据[操作id].召唤兽.数据[n]
        end
      end
      玩家数据[操作id].召唤兽.数据={}
      玩家数据[操作id].召唤兽.数据=临时bb
      发送数据(玩家数据[操作id].连接id,3512,玩家数据[操作id].召唤兽.数据)
      发送数据(玩家数据[对象id].连接id,3512,玩家数据[对象id].召唤兽.数据)
    end
    发送数据(玩家数据[id].连接id,3511,玩家数据[id].召唤兽.数据)
    发送数据(玩家数据[id1].连接id,3511,玩家数据[id1].召唤兽.数据)
    道具刷新(id)
    道具刷新(id1)
    交易数据[交易id]=nil
    玩家数据[id].交易信息=nil
    玩家数据[id1].交易信息=nil
  end
end

function 道具处理类:设置交易数据(连接id,id,数据)
  if 玩家数据[id].交易信息 == nil then
      常规提示(id,"#Y/交易信息错误，本次交易取消")
      发送数据(玩家数据[id].连接id,3511)
      玩家数据[id].交易信息=nil
      交易数据[id]=nil
      return
  end
  local 交易id=玩家数据[id].交易信息.编号
  local 对方id=玩家数据[id].交易信息.id
  if 交易数据[交易id][id].锁定 and 交易数据[交易id][对方id].锁定==nil then
    常规提示(id,"#Y/请耐心等待对方锁定交易状态")
    return
  end
  local 道具数据={}
  local bb数据={}
  local 银子数据=数据.银子
  交易数据[交易id][id].道具={}
  交易数据[交易id][id].bb={}
  交易数据[交易id][id].银子=银子数据+0
  交易数据[交易id][id].锁定=true
  for n=1,3 do
    local 道具格子=数据.道具[n]
    if 道具格子~=nil then
      道具id=玩家数据[id].角色.数据.道具[道具格子]
      道具数据[#道具数据+1]=self:取指定道具(道具id)
      交易数据[交易id][id].道具[#交易数据[交易id][id].道具+1]={认证码=道具数据[#道具数据].识别码,格子=道具格子,编号=道具id}
    end
  end
  for n=1,3 do
    local bb编号=数据.bb[n]
    if bb编号~=nil then
      bb数据[#bb数据+1]=table.loadstring(table.tostring(玩家数据[id].召唤兽.数据[bb编号]))
      交易数据[交易id][id].bb[#交易数据[交易id][id].bb+1]={认证码=bb数据[#bb数据].认证码,编号=bb编号}
    end
  end
  发送数据(连接id,3508)
  常规提示(id,"#Y/你已经锁定了交易状态，对方锁定交易状态后点击确定即可完成交易")
  常规提示(对方id,"#Y/对方已经锁定了交易状态，等你锁定交易状态后点击确定即可完成交易")
  发送数据(玩家数据[对方id].连接id,3510,{bb=bb数据,道具=道具数据,银子=银子数据})
end

function 道具处理类:系统给予处理(连接id,id,数据)
  local 事件=玩家数据[id].给予数据.事件
  -- print(数据.格子[1],玩家数据[id].角色.数据.道具[数据.格子[1]],self.数据[玩家数据[id].角色.数据.道具[数据.格子[1]]])
  -- if 数据.格子[1]==nil or 玩家数据[id].角色.数据.道具[数据.格子[1]]==nil or self.数据[玩家数据[id].角色.数据.道具[数据.格子[1]]]==nil then
  --   常规提示(id,"#Y/你没有这样的道具")
  --   return
  -- end
  if 事件=="打造角色装备" then
    local 任务id=玩家数据[id].角色:取任务(5)
    if 任务id==0 then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    if 检查格子(id)==false then
      常规提示(id,"#Y/你身上没有足够的空间")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if 道具id == nil or self.数据[道具id] == nil then
      常规提示(id,"#Y/你的东西呢?")
      return
    end
    if self.数据[道具id].名称~=任务数据[任务id].石头 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if 任务数据[任务id].数量>1 and self.数据[道具id].数量<任务数据[任务id].数量 then
      常规提示(id,"#Y/该物品的数量无法达到要求")
      return
    end
    if 任务数据[任务id].数量>1 then
      self.数据[道具id].数量=self.数据[道具id].数量-任务数据[任务id].数量
    end
    if self.数据[道具id].数量==nil or self.数据[道具id].数量<=0 then
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    if 任务数据[任务id].打造类型=="装备" then
      玩家数据[id].装备:添加强化打造装备(id,任务id)
          elseif 任务数据[任务id].打造类型 == "160装备" then
      -- if 任务数据[任务id].技能等级~=nil then
      --   摆摊打造类:添加强化打造160装备(id,任务id,任务数据[任务id].技能等级,任务数据[任务id].技能名称,任务数据[任务id].价格,任务数据[任务id].摊主名字,任务数据[任务id].打造模式)
      -- else
          打造处理类:添加强化打造160装备(id,任务id,玩家数据[id].角色.数据.辅助技能)
      -- end
 常规提示(id,"#Y/打造成功")
    elseif 任务数据[任务id].打造类型=="灵饰" then
      local 临时id=self:取新编号()
      local 临时格子=玩家数据[id].角色:取道具格子()
      local 道具 = 物品类()
      道具:置对象(任务数据[任务id].名称)
      道具.级别限制 = 任务数据[任务id].级别
      道具.幻化等级=0
      self.数据[临时id]=道具
      self.数据[临时id].部位类型=任务数据[任务id].部位
      self:灵饰处理(id,临时id,任务数据[任务id].级别,1,任务数据[任务id].部位)
      self.数据[临时id].灵饰=true
      self.数据[临时id].耐久=500
      self.数据[临时id].制造者 = 玩家数据[id].角色.数据.名称.."强化打造"
      玩家数据[id].角色.数据.道具[临时格子]=临时id
      常规提示(id,"#Y/你得到了#R/"..self.数据[临时id].名称)
      玩家数据[id].角色:取消任务(任务id)
      任务数据[任务id]=nil
    end
    道具刷新(id)
  elseif 事件=="侠义任务物品" then
    local 任务id=玩家数据[id].角色:取任务(346)
    if 任务id==0 then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id] == nil then
      常规提示(id,"#Y/请检查你给予的物品是否存在")
      道具刷新(id)
      return
    end
    local 名称=self.数据[道具id].名称
    local 所需物品=任务数据[任务id].物品
    if 名称=="魔兽要诀" or 名称=="召唤兽内丹" then
      名称=self.数据[道具id].附带技能
    elseif 名称 == "怪物卡片" then
      名称 = self.数据[道具id].造型
    elseif 名称 == "鬼谷子" then
      名称 = self.数据[道具id].子类
    end
    if 名称~=所需物品 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      道具刷新(id)
      return
    end
    if 名称==所需物品 then
      if 所需物品=="青龙石" or 所需物品=="白虎石" or 所需物品=="朱雀石" or 所需物品=="玄武石" then
        if self.数据[道具id].数量<10 then
          常规提示(id,"#Y/你给予的物品不满足条件，强化石需要数量为10个")
          道具刷新(id)
          return
        end
      end
      if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        if 所需物品=="青龙石" or 所需物品=="白虎石" or 所需物品=="朱雀石" or 所需物品=="玄武石" then
          self.数据[道具id].数量 = self.数据[道具id].数量 - 10
        else
          self.数据[道具id].数量 = self.数据[道具id].数量 - 1
        end
        任务处理类:完成侠义任务(任务id,id)
        道具刷新(id)
      else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
        任务处理类:完成侠义任务(任务id,id)
        道具刷新(id)
      end
    end
  elseif 事件=="熔合角色装备" then
    local 任务id=玩家数据[id].角色:取任务(7758)
    if 任务id==0 then
      常规提示(id,"#Y/你没有这样的任务")
      return
    elseif 检查格子(id)==false then
      常规提示(id,"#Y/你身上没有足够的空间")
      return
    end
    if not 任务数据[任务id].完成 then
      if 数据.格子[1] == nil or 数据.格子[2] == nil or 数据.格子[3] == nil then
        常规提示(id,"#Y/我需要3件物品你是不是少给了我一些物品啊")
        return
      end
      local 检测通过={[1]=0,[2]=0,[3]=0}
      for i=1,3 do
        local 道具id=玩家数据[id].角色.数据.道具[数据.格子[i]]
        if self.数据[道具id] == nil then
          常规提示(id,"#Y/请检查你给予的物品是否存在")
          道具刷新(id)
          return
        end
        local 名称 = self.数据[道具id].名称
        if self.数据[道具id].名称 == "高级魔兽要诀" then
          名称 = self.数据[道具id].附带技能
        elseif self.数据[道具id].名称 == "高级召唤兽内丹" then
          名称 = self.数据[道具id].附带技能
        elseif self.数据[道具id].名称 == "怪物卡片" then
          名称 = self.数据[道具id].造型
        end
        for n=1,3 do
          if 名称==任务数据[任务id].物品[n] and self.数据[道具id].数量 == nil then
            检测通过[i] = 1
            break
          elseif 名称==任务数据[任务id].物品[n] and self.数据[道具id].数量 ~= nil and self.数据[道具id].数量 >= 99 then
            检测通过[i] = 1
            break
          end
        end
      end
      for i=1,3 do
        if 检测通过[i] == 0 then
          常规提示(id,"#Y/请检查给予的物品是否是对方需要的物品,或则药品数量是否达到99个")
          return
        end
      end
      if 任务数据[任务id].分类 == 1 then
        玩家数据[id].装备:添加强化打造装备(id,任务id,1)
      else
        if 取随机数() <= 50 then
          玩家数据[id].装备:添加熔合装备属性(id,任务id)
        else
          玩家数据[id].装备:添加熔合装备属性(id,任务id)
        end
      end
      for i=1,3 do
        local 道具id=玩家数据[id].角色.数据.道具[数据.格子[i]]
        if self.数据[道具id].数量 ~= nil then
          self.数据[道具id].数量 = self.数据[道具id].数量 - 99
        end
        if self.数据[道具id].数量 == nil or self.数据[道具id].数量 <= 0 then
          self.数据[道具id] = nil
          玩家数据[id].角色.数据.道具[数据.格子[i]] = nil
        end
      end
    else
      if 任务数据[任务id].分类 == 1 then
        玩家数据[id].装备:添加强化打造装备(id,任务id,1)
      else
        玩家数据[id].装备:添加熔合装备属性(id,任务id)
      end
    end
    道具刷新(id)
  elseif 事件=="给予银票" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if 活动次数查询(id,"跑商")==false then
    return
    end
    if self.数据[道具id].名称 ~= "帮派银票" then
        常规提示(id,"#Y/对方需要的不是这种物品")
        return
    end
    if self.数据[道具id].初始金额 < self.数据[道具id].完成金额 then
        常规提示(id,"#Y/还没赚够足够的银票，你这是糊弄我呢？")
        return
    end
      if os.time() - 玩家数据[id].角色.数据.跑商时间 <= 15 or 玩家数据[id].角色.数据.跑商时间==nil then
        __S服务:输出("玩家"..id.." 疑似重复刷跑商任务!")
        写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
        写配置("./ip封禁.ini","ip",玩家数据[id].ip.." 疑似重复刷跑商任务,玩家ID:"..id,1)
        发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
        --__S服务:断开连接(玩家数据[id].连接id)
        return
      elseif os.time() - 玩家数据[id].角色.数据.跑商时间 <= 30 then
        常规提示(id,"#Y/我这里正在忙着整理商品，请你稍后再来！(30秒内仅可上交一次)")
        return
      end
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    玩家数据[id].角色.数据.跑商=nil
    玩家数据[id].角色.数据.跑商时间=nil
    local 帮派编号 = 玩家数据[id].角色.数据.帮派数据.编号
    帮派数据[帮派编号].成员数据[id].跑商 = 帮派数据[帮派编号].成员数据[id].跑商 + 1
        添加活动次数(id,"跑商")
        玩家数据[id].道具:一键回收跑商物品(id,id)
        玩家数据[id].角色:添加银子(100000,"帮派跑商",1)
        玩家数据[id].角色:添加经验(100000,"帮派跑商",1)
        玩家数据[id].角色:添加储备(600000,"帮派跑商",1)
        -- if 取随机数(1,100)<=90 then
        -- 玩家数据[id].道具:给予道具(id,"金柳露",取随机数(1,5))
        -- 常规提示(id,"#Y你获得了金柳露")
        -- else
        -- 玩家数据[id].道具:给予道具(id,"超级金柳露",取随机数(1,5))
        -- 常规提示(id,"#Y你获得了超级金柳露")
        -- end
        -- if 取随机数(1,100)<=1 then
        --   local 名称="110级书铁"
        --   self:给予书铁(id,{11,11})
        --   常规提示(id,"#Y/你获得了#R110级书铁")
        --   广播消息({内容=format("#S(跑商活动)#R/%s#Y在跑商活动中如有神助，妙笔生花，获得了#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
        --end
        玩家数据[id].角色.数据.帮贡 = 玩家数据[id].角色.数据.帮贡 + 500
        帮派数据[帮派编号].成员数据[id].帮贡.当前 = 帮派数据[帮派编号].成员数据[id].帮贡.当前 + 500
        帮派数据[帮派编号].成员数据[id].帮贡.上限 = 帮派数据[帮派编号].成员数据[id].帮贡.上限 + 500
        帮派数据[帮派编号].繁荣度 = 帮派数据[帮派编号].繁荣度 + 50
    帮派数据[帮派编号].帮派资金.当前 = 帮派数据[帮派编号].帮派资金.当前 + self.数据[道具id].初始金额
    if 帮派数据[帮派编号].帮派资金.当前 > 帮派数据[帮派编号].帮派资金.上限 then
        帮派数据[帮派编号].帮派资金.当前 = 帮派数据[帮派编号].帮派资金.上限
    end
    广播帮派消息({内容="[帮派总管]#R/"..玩家数据[id].角色.数据.名称.."#Y/完成跑商任务，帮派资金增加了#R/"..self.数据[道具id].初始金额.."#Y/两。",频道="bp"},帮派编号)
    常规提示(id,"#Y/感谢少侠为帮派的发展做出的贡献！")
    道具刷新(id)
  elseif 事件=="给予金银锦盒" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称 ~= "金银锦盒" then
        常规提示(id,"#Y/对方需要的不是这种物品")
        return
    end
    local 增加帮派资金=self.数据[道具id].数量*1000
    local 增加帮贡=self.数据[道具id].数量+0
    玩家数据[id].角色.数据.帮贡=玩家数据[id].角色.数据.帮贡+增加帮贡
    帮派数据[玩家数据[id].角色.数据.帮派数据.编号].成员数据[id].帮贡.当前=帮派数据[玩家数据[id].角色.数据.帮派数据.编号].成员数据[id].帮贡.当前+增加帮贡
    帮派数据[玩家数据[id].角色.数据.帮派数据.编号].成员数据[id].帮贡.上限=帮派数据[玩家数据[id].角色.数据.帮派数据.编号].成员数据[id].帮贡.上限+增加帮贡
    帮派数据[玩家数据[id].角色.数据.帮派数据.编号].帮派资金.当前=帮派数据[玩家数据[id].角色.数据.帮派数据.编号].帮派资金.当前+增加帮派资金
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
    常规提示(id,"#Y/成功为帮派增加了#R/"..增加帮派资金.."#Y/两银子。获得了#R/"..增加帮贡.."#Y/点帮贡")
    广播帮派消息({内容="[金库总管]#G/"..玩家数据[id].角色.数据.名称.."#Y/上交金银锦盒为帮派增加了帮派资金#R/"..增加帮派资金.."#Y/。#93",频道="bp"},玩家数据[id].角色.数据.帮派数据.编号)
  elseif 事件=="精铁兑换打造熟练度" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~="百炼精铁" then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id].子类 >90 then
        常规提示(id,"#Y/只有90级以下的精铁才能兑换熟练度")
        return
    end
    local 增加熟练度 = qz(self.数据[道具id].子类/10)
    if 增加熟练度 > 10 then
        增加熟练度 = 15
    end
    玩家数据[id].角色.数据.打造熟练度 = 玩家数据[id].角色.数据.打造熟练度 + 增加熟练度
    常规提示(id,"#Y/恭喜你增加了#R/"..增加熟练度.."#Y/点打造熟练度。当前熟练度为#R/"..玩家数据[id].角色.数据.打造熟练度)
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
  elseif 事件=="用90级铁换100-120级铁" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~="百炼精铁" then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id].子类 ~=90 then
        常规提示(id,"#Y/只有90级的精铁才能兑换")
        return
    end
  if 玩家数据[id].角色.数据.银子<10000000 then
    常规提示(id,"你没有1000万两银子")
    return
  end
  if 玩家数据[id].角色.数据.当前经验<10000000 then
      常规提示(id,"你没有1000万经验")
    return
  end
    玩家数据[id].角色:扣除经验(10000000,"铁兑换",1)
    玩家数据[id].角色:扣除银子(10000000,0,0,"铁兑换",1)
        if 取随机数(1,110)<=80 then
    玩家数据[id].道具:给予书铁(id,{12,12},"精铁")
  else
    玩家数据[id].道具:给予书铁(id,{12,10},"精铁")
  end
    常规提示(id,"你兑换了精铁")
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
  elseif 事件=="用90级书换100-120级书" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~="制造指南书" then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id].子类 ~=90 then
        常规提示(id,"#Y/只有90级的指南书才能兑换")
        return
    end
  if 玩家数据[id].角色.数据.银子<10000000 then
    常规提示(id,"你没有1000万两银子")
    return
  end
  if 玩家数据[id].角色.数据.当前经验<10000000 then
      常规提示(id,"你没有1000万经验")
    return
  end
    玩家数据[id].角色:扣除经验(10000000,"铁兑换",1)
    玩家数据[id].角色:扣除银子(10000000,0,0,"铁兑换",1)
    if 取随机数(1,110)<=80 then
    玩家数据[id].道具:给予书铁(id,{12,12},"指南书")
  else
    玩家数据[id].道具:给予书铁(id,{12,10},"指南书")
  end
    常规提示(id,"你兑换了精铁")
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
  elseif 事件=="上交魔兽残卷" then
    if 玩家数据[id].角色.数据.魔兽残卷 == nil then
      玩家数据[id].角色.数据.魔兽残卷 = 0
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~="魔兽残卷" then
      常规提示(id,"#Y/你确定给我的是魔兽残卷么")
      return
    else
      local 欠缺 = 300 - 玩家数据[id].角色.数据.魔兽残卷
      if self.数据[道具id].数量 < 欠缺 then
        玩家数据[id].角色.数据.魔兽残卷 = 玩家数据[id].角色.数据.魔兽残卷 + self.数据[道具id].数量
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
        道具刷新(id)
        常规提示(id,"#Y/上交魔兽残卷成功")
      else
        self.数据[道具id].数量 = self.数据[道具id].数量 - 欠缺
        玩家数据[id].角色.数据.魔兽残卷 = 0
        local 名称="高级魔兽要诀"
        local 技能=取特殊要诀()
        玩家数据[id].道具:给予道具(id,名称,nil,技能)
        玩家数据[id].角色.数据.千亿兽决 = 1
        常规提示(id,"#Y/你获得了"..名称)
        广播消息({内容=format("#S(魔兽残卷)#R/%s#Y累计收集了300份#R魔兽残卷#Y,受到#R唐王#Y大加赞赏,特赐下#G/特殊魔兽要诀-%s#Y以示褒奖！".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,技能),频道="xt"})
      end
    end

   elseif 事件=="上交熊胆" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="熊胆"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/熊胆#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc1(id,5)
   玩家数据[id].道具:给予道具(id,"烤鸭",1,nil,nil,"专用")
   常规提示(id,"#Y/你获得一只#G烤鸭")
   道具刷新(id)

    elseif 事件=="上交餐风饮露" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="餐风饮露"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/餐风饮露#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,12)
   玩家数据[id].道具:给予道具(id,"定神香",1,nil,nil,"专用")
   常规提示(id,"#Y/你获得一只#G定神香")
   道具刷新(id)

    elseif 事件=="上交特别的美味" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="臭豆腐"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/特别的美味#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,32)
   玩家数据[id].道具:给予道具(id,"避水珠",1,nil,nil,"专用")
   常规提示(id,"#Y/你获得一只#G避水珠")
   添加最后对话(id,"谢谢你,#G臭豆腐#真是美味至极啊!")
   道具刷新(id)

    elseif 事件=="上交佛光舍利子" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="佛光舍利子"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/佛光舍利子#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,16)
   添加最后对话(id,"玄奘法师是我从河里#G捡回来的孩子\n并非外面的八卦消息所传,他根本就#Y不可能是我的野种\n虽然我年轻的时候也#P风流倜傥#,#S玉树临风#,但那都是多少年前的事情了\n我看这孩子慧根深厚,与佛有缘,才把他#Y带回寺院的\n这里有他出生时留下的#R血书#,你拿给他看吧")
   道具刷新(id)

    elseif 事件=="上交吃的" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="烤鸭"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/有肉的东西#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,37)
   添加最后对话(id,"谢谢你年轻人,我这就和你一起去见我媳妇\n真的有好多年都没见了,我以为他们都死了#15")
   道具刷新(id)

   elseif 事件=="上交火凤之睛" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="火凤之睛"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我要的不是这个!")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
  if 玩家数据[id].角色:取任务(996) ~= 0 and 任务数据[玩家数据[id].角色:取任务(996)].进程 == 7 then
  任务数据[玩家数据[id].角色:取任务(996)].进程=8
  玩家数据[id].角色:刷新任务跟踪()
  end
   添加最后对话(id,"很好,现在你拿着仙露,回去找清风吧!")
   道具刷新(id)

    elseif 事件=="上交九转回魂丹" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="九转回魂丹"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/九转回魂丹#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,25)
   添加最后对话(id,"玄奘法师清醒了过来\n看着#R血书#的内容:\n(此儿讳陈光蕊,官除江洲令,妾名#Y殷温娇#,亦为相门女\n贼子#G刘洪杀夫霸妾#,冒官江州,妾恐贼加害此遗腹子\n忍痛弃之江中,若蒙善人#S拾养#,妾必感深嗯,街环以报)\n原来我身世中藏此#R深仇大恨#,#S父母之仇,不能报复#,玄奘又何以为人?\n我要拿起#Y屠刀#,还俗报仇!#4")
   道具刷新(id)

    elseif 事件=="上交定神香" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="定神香"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/定神香#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,13)
   添加最后对话(id,"少侠可还记得打伤我的#Y白琉璃?\n她盗取了化生寺的#G佛光舍利子\n还请少侠继续帮帮忙,去调查一下#S它的来历\n和它交手时,发现它并非妖物,而是有#Y通灵仙气#的东西\n你可以去#R天宫#打探一下")
   道具刷新(id)

    elseif 事件=="上交百色花" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="百色花"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/百色花#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc2(id,5)
   local 名称=self:给予书铁(id,{3,4})
   常规提示(id,"#Y你获得了#R"..名称[1])
   道具刷新(id)

    elseif 事件=="上交烤鸭" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="烤鸭"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/烤鸭#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil新
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc1(id,6)
   添加最后对话(id,"法事我会筹办的,你无需担心了\n你现在把我的#G安魂草#交给#Y老孙头\n让他安定心神不在被鬼魂骚扰")
   常规提示(id,"#Y/你获得一捆#G安魂草")
   道具刷新(id)
    elseif 事件=="上交地狱灵芝" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="地狱灵芝"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/地狱灵芝#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   xsjc1(id,11)
   任务处理类:设置新手指引任务(id)
   添加最后对话(id,"谢谢你治好了我的病,事情的#S来龙去脉#是这样的:\n多年前我和一个朋友遇到海啸,#Y我和他双双落入海里\n就在#R危难之际#我们的身边出现一块#G木板#,但这块木板#P只能够一个人浮起来\n我的那位朋友#C为了让我活下#来就把木板让给了我,最终我活了下来,#S我的朋友却死了\n不知为何他死后#Y化作厉鬼在海底沉船#兴风作浪\n要了不少无辜人的性命,我每年都会让#G道士去超度他\n可是都没用,他的#Z怨气太重了#,少侠既然可以搞到地狱灵芝,想必也有#G超凡本事\n今年的超度就麻烦少侠你了\n不管成功与否,到时候都可以到我这里#Y领取酬劳")
   道具刷新(id)
    elseif 事件=="上交枯萎的金莲" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="枯萎的金莲"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是#G/枯萎的金莲#W/，你给我的这个能当饭吃吗？#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   任务数据[玩家数据[id].角色:取任务(400)].进程=12
   道具刷新(id)
  玩家数据[id].角色:刷新任务跟踪()
  发送数据(玩家数据[id].连接id,3533.2)
    elseif 事件=="真是他妈太臭了" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="丁香水"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"看来这个宝箱不需要这件物品#4")
      return
    end
   self.数据[道具id]=nil
   玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
   任务处理类:设置妖风支线(id)
   道具刷新(id)
     elseif 事件=="上交雪人物品" then
    local 任务id = 玩家数据[id].角色:取任务(7760)
    if 任务id == 0 then
      常规提示(id,"#Y/你好像没有这样的任务！")
      return
    elseif 任务数据[任务id].分类 ~= 2 then
      常规提示(id,"#Y/你的任务好像不是这类！")
      return
    else
      local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
      local 名称=self.数据[道具id].名称
      local 任务物品 =任务数据[任务id].物品
      if 名称 ~= 任务物品 then
        常规提示(id,"#Y/我要的不是这个物品哟！")
        return
      end
      if self.数据[道具id].数量 ~= nil then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      end
      if self.数据[道具id].数量 == nil or self.数据[道具id].数量 <= 0 then
        self.数据[道具id] = nil
        玩家数据[id].角色.数据.道具[数据.格子[1]] = nil
      end
      任务处理类:完成雪人任务(id)
    end
  elseif 事件=="上交雪人道具" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=self.数据[道具id].名称
    if 名称 ~= "雪人鼻子" and 名称 ~= "雪人帽子" and 名称 ~= "雪人眼睛" then
      常规提示(id,"#Y/你交给我的是神马东西！")
      return
    elseif 雪人活动[名称] >= 雪人活动.上限 then
      常规提示(id,"#Y/本轮活动该道具已经满了,等待下一轮再前来吧！")
      return
    else
      local 应扣数量 = 雪人活动.上限- 雪人活动[名称]
      if self.数据[道具id].数量 < 应扣数量 then
        应扣数量 = self.数据[道具id].数量
      end
      local 经验 = 10000*应扣数量
      local 银子 = 5000*应扣数量
      self.数据[道具id].数量 = self.数据[道具id].数量 - 应扣数量
      雪人活动[名称]=雪人活动[名称]+应扣数量
      if 玩家数据[id].角色.数据.春节雪人 == nil then
        玩家数据[id].角色.数据.春节雪人 = 应扣数量
      else
        玩家数据[id].角色.数据.春节雪人 = 玩家数据[id].角色.数据.春节雪人 + 应扣数量
      end
      玩家数据[id].角色:添加储备(银子,"雪人上交"..应扣数量,1)
      玩家数据[id].角色:添加经验(经验,"雪人上交"..应扣数量,1)
      常规提示(id,"#Y/你获得了"..应扣数量.."点雪人积分！")
      if self.数据[道具id].数量 <= 0 then
        self.数据[道具id] = nil
        玩家数据[id].角色.数据.道具[数据.格子[1]] = nil
      end
      道具刷新(id)
      for i,v in pairs(雪人活动) do
        if i~="上限" then
          if v < 雪人活动.上限 then
            return
          end
        end
      end
      for i,v in pairs(玩家数据) do
        if 玩家数据[i] ~= nil and 玩家数据[i].管理 == nil then
          玩家数据[i].道具:发放雪人奖励(i)
        end
      end
      for i,v in pairs(雪人活动) do
        if i~="上限" then
          雪人活动[i]=0
        end
      end
    end
  elseif 事件=="上交心魔宝珠" then
    if 玩家数据[id].角色.数据.等级>=175 then
      常规提示(id,"#Y/你已经脱离了新手阶段，无法获得此种奖励")
      return
    elseif 玩家数据[id].角色.数据.等级<1 then
      常规提示(id,"#Y/只有等级达到1级的玩家才可获得此种奖励")
      return
    elseif 心魔宝珠[id]~=nil and 心魔宝珠[id]>=20 then
      常规提示(id,"#Y/请明天再来上交心魔宝珠")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="心魔宝珠"
    local 数量=50
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if 数量>1 and self.数据[道具id].数量<数量 then
      常规提示(id,"#Y/该物品的数量至少要50个才能一交")
      return
    end
    if 数量>1 then
      self.数据[道具id].数量=self.数据[道具id].数量-数量
    end
    if self.数据[道具id].数量==nil or self.数据[道具id].数量<=0 then
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    local 等级=取等级(id)
    local 经验=等级*150*4
    local 储备=等级*50*4
    玩家数据[id].角色:添加经验(经验,"心魔宝珠奖励")
    玩家数据[id].角色:添加银子(储备,"心魔宝珠奖励",1)
    local 名称=取宝石()
    玩家数据[id].道具:给予道具(id,名称,取随机数(3,5))
    常规提示(id,"#Y/你获得了"..名称)
    if 取随机数(1,100)<=30 then
    玩家数据[id].道具:给予书铁(id,{8,11},"精铁")
    常规提示(id,"#Y/你获得了#G80-110级#精铁奖励")
    广播消息({内容=format("#S(心魔宝珠)#R/%s#Y完成上交心魔宝珠运气包爆棚，#Y因此获得了#G80-110级精铁",玩家数据[id].角色.数据.名称),频道="xt"})
    end
    if 玩家数据[id].角色:取任务(402)~=0 and 任务数据[玩家数据[id].角色:取任务(402)].进程 == 4 then
    任务数据[玩家数据[id].角色:取任务(402)].进程=5
    玩家数据[id].角色:刷新任务跟踪()
    end
    if 心魔宝珠[id]==nil then
      心魔宝珠[id]=1
    else
      心魔宝珠[id]=心魔宝珠[id]+1
    end
    常规提示(id,format("#Y/你本日还可领取#R/%s#Y/次奖励",(20-心魔宝珠[id])))
    道具刷新(id)
 elseif 事件=="官职任务上交物品" then
    local 任务id=玩家数据[id].角色:取任务(110)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="？？？"
    if 任务数据[任务id].分类==3 then
      名称="情报"
    elseif 任务数据[任务id].分类==4 then
      名称=任务数据[任务id].物品
    end
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务处理类:完成官职任务(id,任务数据[任务id].分类)
    道具刷新(id)
   elseif 事件=="节日活动上交物品" then
    local 任务id=玩家数据[id].角色:取任务(411)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="？？？"
    if 任务数据[任务id].分类==3 then
      名称="情报"
    elseif 任务数据[任务id].分类==4 then
      名称=任务数据[任务id].药品
    end
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
      self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      任务处理类:完成节日活动(id,任务数据[任务id].分类)
      道具刷新(id)
   else
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务处理类:完成节日活动(id,任务数据[任务id].分类)
    道具刷新(id)
    end

  elseif 事件=="门派任务上交物品" then
    local 任务id=玩家数据[id].角色:取任务(111)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].物品

    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    local 双倍
    if 任务数据[任务id].品质~=nil and self.数据[道具id].阶品>=任务数据[任务id].品质 then
      双倍=1
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务处理类:完成门派任务(id,4,双倍)
    道具刷新(id)
  elseif 事件=="青龙任务给予药品" then
    local 任务id=玩家数据[id].角色:取任务(301)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].药品
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
      self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      任务处理类:完成青龙任务(任务id,id,2)
      道具刷新(id)
    else
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
      任务处理类:完成青龙任务(任务id,id,2)
      道具刷新(id)
    end
  elseif 事件=="青龙任务给予烹饪" then
    local 任务id=玩家数据[id].角色:取任务(301)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].烹饪
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
      self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      任务处理类:完成青龙任务(任务id,id,3)
      道具刷新(id)
    else
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
      任务处理类:完成青龙任务(任务id,id,3)
      道具刷新(id)
    end
  elseif 事件=="玄武任务给予药品" then
    local 任务id=玩家数据[id].角色:取任务(302)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].药品
    if 道具id==nil or self.数据[道具id].名称==nil or self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    local id组 = 取id组(id)
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
      self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      任务处理类:完成玄武任务(任务id,id组,2)
      道具刷新(id)
    else
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
      任务处理类:完成玄武任务(任务id,id组,2)
      道具刷新(id)
    end
  elseif 事件=="玄武任务给予烹饪" then
    local 任务id=玩家数据[id].角色:取任务(302)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].烹饪
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    local id组 = 取id组(id)
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
      self.数据[道具id].数量 = self.数据[道具id].数量 - 1
      任务处理类:完成玄武任务(任务id,id组,3)
      道具刷新(id)
    else
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
      任务处理类:完成玄武任务(任务id,id组,3)
      道具刷新(id)
    end
  elseif 事件=="坐骑任务给予烹饪" then
    local 任务id=玩家数据[id].角色:取任务(307)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].烹饪
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
        任务数据[任务id].分类=3
        发送数据(玩家数据[id].连接id,1501,{名称="太白金星",模型="太白金星",对话=format("天宫的千里眼能眼观天下，他也许知道天马的消息！"),选项={"我这就去"}})
        道具刷新(id)
        玩家数据[id].角色:刷新任务跟踪()
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
        任务数据[任务id].分类=3
        发送数据(玩家数据[id].连接id,1501,{名称="太白金星",模型="太白金星",对话=format("天宫的千里眼能眼观天下，他也许知道天马的消息！"),选项={"我这就去"}})
        道具刷新(id)
        玩家数据[id].角色:刷新任务跟踪()
    end
  elseif 事件=="坐骑任务给予药品" then
    local 任务id=玩家数据[id].角色:取任务(307)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].药品
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
        任务数据[任务id].分类=12
        发送数据(玩家数据[id].连接id,1501,{名称="大大王",模型="大大王",对话=format("听说马儿跑了到建业一带，少侠可以去那里找找"),选项={"我这就去建业看看"}})
        道具刷新(id)
        玩家数据[id].角色:刷新任务跟踪()
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
        任务数据[任务id].分类=12
        发送数据(玩家数据[id].连接id,1501,{名称="大大王",模型="大大王",对话=format("听说马儿跑了到建业一带，少侠可以去那里找找"),选项={"我这就去建业看看"}})
        道具刷新(id)
        玩家数据[id].角色:刷新任务跟踪()
    end
  elseif 事件=="飞升任务给予药品" then
    local 任务id=玩家数据[id].角色:取任务("飞升剧情")
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~=任务数据[任务id].药品.药品.名称 and self.数据[道具id].名称~=任务数据[任务id].药品.药品1.名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id].名称==任务数据[任务id].药品.药品.名称 then
        任务数据[任务id].药品.药品.获得=true
    elseif self.数据[道具id].名称==任务数据[任务id].药品.药品1.名称 then
        任务数据[任务id].药品.药品1.获得=true
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    道具刷新(id)
    if 任务数据[任务id].药品.药品.获得 and 任务数据[任务id].药品.药品1.获得 then
      if 任务数据[任务id].进程==3 then
          任务数据[任务id].进程=4
          发送数据(玩家数据[id].连接id,1501,{名称="太上老君",模型="男人_太上老君",对话=format("嗯，你做的很好。看来你的确潜心向道。我要向玉皇大帝引见你，让你获得进行仙界的试练资格。")})
          发送数据(玩家数据[id].连接id,39)
          任务数据[任务id].药品=nil
          玩家数据[id].角色:刷新任务跟踪()
      elseif 任务数据[任务id].进程==5 and 任务数据[任务id].四法宝.炼金鼎==false then
          任务数据[任务id].四法宝.炼金鼎=true
          玩家数据[id].道具:给予道具(id,"炼金鼎",1,nil,nil,"专用")
          发送数据(玩家数据[id].连接id,39)
          发送数据(玩家数据[id].连接id,1501,{名称="镇元子",模型="镇元子",对话=format("嗯，好！这就是你要的炼金鼎！")})
          玩家数据[id].角色:刷新任务跟踪()
      end
    else
      if 任务数据[任务id].进程==3 then
          发送数据(玩家数据[id].连接id,1501,{名称="太上老君",模型="男人_太上老君",对话=format("还有一味药呢")})
      elseif 任务数据[任务id].进程==5 then
          发送数据(玩家数据[id].连接id,1501,{名称="镇元子",模型="镇元子",对话=format("还有一味药呢")})
      end
    end
  elseif 事件=="飞升任务给予武器" then
    local 任务id=玩家数据[id].角色:取任务("飞升剧情")
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].所需武器
    if self.数据[道具id].名称~=名称 and self.数据[道具id].总类~=2 and self.数据[道具id].分类~=3 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务数据[任务id].四法宝.定海针=true
    任务数据[任务id].触发龙宫=nil
    玩家数据[id].道具:给予道具(id,"定海针",1,nil,nil,"专用")
    发送数据(玩家数据[id].连接id,39)
    发送数据(玩家数据[id].连接id,1501,{名称="东海龙王",模型="东海龙王",对话=format("这是镇海针，你要好好护送它到玉帝那！")})
    道具刷新(id)
    玩家数据[id].角色:刷新任务跟踪()
  elseif 事件=="飞升任务给予法器" then
    local 任务id=玩家数据[id].角色:取任务("飞升剧情")
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~="定海针" and self.数据[道具id].名称~="避火诀" and self.数据[道具id].名称~="修篁斧" and self.数据[道具id].名称~="炼金鼎" then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务数据[任务id].四法宝.进度=任务数据[任务id].四法宝.进度+1
    if 任务数据[任务id].四法宝.进度==4 then
        发送数据(玩家数据[id].连接id,1501,{名称="玉皇大帝",模型="男人_玉帝",对话=format("要你找的这四样宝贝暗含四象之妙，可以激发你的潜力，如果再加上地藏王的不死壤，那么五行妙法就齐备了。可惜自从大禹治水后，就再也没有人见过不死壤了。天庭已经没有什么好教你的了，你再去人界修炼妙法吧。")})
        任务数据[任务id].进程=6
        玩家数据[id].角色:刷新任务跟踪()
    else
        发送数据(玩家数据[id].连接id,1501,{名称="玉皇大帝",模型="男人_玉帝",对话=format("剩余的几样东西呢？")})
    end
    发送数据(玩家数据[id].连接id,39)
    道具刷新(id)
  elseif 事件=="飞升任务给予烹饪" then
    local 任务id=玩家数据[id].角色:取任务("飞升剧情")
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].烹饪
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    任务数据[任务id].征求意见.春十三娘=true
    任务数据[任务id].触发春十三娘=nil
    常规提示(id,"获得春十三娘的同意")
    发送数据(玩家数据[id].连接id,1501,{名称="春十三娘",模型="春十三娘",对话=format("嗯，东西不错。我没什么意见了，反正不死壤我也没兴趣。")})
    道具刷新(id)
    玩家数据[id].角色:刷新任务跟踪()
  elseif 事件=="飞升任务给予兽诀" then
    local 任务id=玩家数据[id].角色:取任务("飞升剧情")
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].所需兽诀
    if self.数据[道具id].附带技能~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    任务数据[任务id].征求意见.大大王=true
    任务数据[任务id].触发大大王=nil
    任务数据[任务id].触发兽诀=nil
    常规提示(id,"获得大大王的同意")
    发送数据(玩家数据[id].连接id,1501,{名称="大大王",模型="大大王",对话=format("嗯，不错不错，我没意见了！")})
    道具刷新(id)
    玩家数据[id].角色:刷新任务跟踪()
  elseif 事件=="法宝任务给予药品" then
    local 任务id=玩家数据[id].角色:取任务(308)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].物品
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    if 玩家数据[id].角色.法宝进程==1 then
        发送数据(玩家数据[id].连接id,1501,{名称="金童子",模型="男人_道童",对话=format("少侠已经集齐法宝合成的材料了，可以来天宫找我领取内丹任务进行法宝合成哦")})
    end
    任务处理类:完成法宝任务(任务id,id,2)
    道具刷新(id)
  elseif 事件=="法宝任务给予烹饪" then
    local 任务id=玩家数据[id].角色:取任务(308)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].物品
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    if self.数据[道具id]~=nil and self.数据[道具id].数量~=nil and self.数据[道具id].数量 >1 then
        self.数据[道具id].数量 = self.数据[道具id].数量 - 1
    else
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    if 玩家数据[id].角色.法宝进程==1 then
        发送数据(玩家数据[id].连接id,1501,{名称="金童子",模型="男人_道童",对话=format("少侠已经集齐法宝合成的材料了，可以来天宫找我领取内丹任务进行法宝合成哦")})
    end
    任务处理类:完成法宝任务(任务id,id,3)
    道具刷新(id)
  elseif 事件=="渡劫任务上交武器" then
    local 任务id=玩家数据[id].角色:取任务(8800)
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=任务数据[任务id].所需武器
    if self.数据[道具id].名称~=名称 and self.数据[道具id].总类~=2 and self.数据[道具id].分类~=3 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    发送数据(玩家数据[id].连接id,39)
    发送数据(玩家数据[id].连接id,1501,{名称="妄空妖魔",模型="海星",对话=format("很好，陷阱已经布置完成了，等待勇士们和天冷曰妄空的到来。")})
    道具刷新(id)
    剧情数据.渡劫.进行[id].进程=12
    任务处理类:取渡劫任务(id)
    玩家数据[id].角色:刷新任务跟踪()
  elseif 事件=="门派任务上交乾坤袋" then
    local 任务id=玩家数据[id].角色:取任务(111)
    --print(任务id,任务数据[任务id])
    if 任务id==0 or 任务数据[任务id]==nil then
      常规提示(id,"#Y/你没有这样的任务")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="乾坤袋"
    if self.数据[道具id].名称~=名称 then
      常规提示(id,"#Y/对方需要的不是这种物品")
      return
    elseif 任务数据[任务id].乾坤袋==nil then
      常规提示(id,"#Y/你似乎还没有完成这个任务哟~")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    任务处理类:完成门派任务(id,7,双倍)
    道具刷新(id)
  elseif 事件=="偷偷怪上交物品" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称=self.数据[道具id].名称
    if 玩家数据[id].角色.数据.五宝数据[名称]==nil then
      添加最后对话(id,"我要的是金刚石、龙鳞、定魂珠、避水珠、夜光珠，你给我的是个啥玩意？")
      return
    elseif 玩家数据[id].角色.数据.五宝数据[名称]~=0 then
      添加最后对话(id,"您可真是贵人多忘事，您不是已经给了我"..名称.."吗？这么快就忘记了？是到了要喝脑白金的年纪吗？")
      return
    end
    玩家数据[id].角色.数据.五宝数据[名称]=1
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    local 满足=true
    for n=1,#五宝名称 do
      if 玩家数据[id].角色.数据.五宝数据[五宝名称[n]]==0 then
        满足=false
      end
    end
    if 满足 then
      玩家数据[id].角色.数据.五宝数据={夜光珠=0,龙鳞=0,定魂珠=0,避水珠=0,金刚石=0}
      self:给予道具(id,"特赦令牌")
      添加最后对话(id,"这块特赦令牌你可收好了，要是给了那些在地狱里无法进入轮回的鬼怪，说不定可以得到什么好东西呢！")
      常规提示(id,"#Y你获得了#R特赦令牌")
    end
    道具刷新(id)
  elseif 事件=="无名野鬼上交物品" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="特赦令牌"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是特赦令牌，你给我的这个能当饭吃吗？")
      return
    end
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    self:给予道具(id,"高级藏宝图")
    添加最后对话(id,"您可真是大好人啊，这块特赦令牌终于让我能离开这地狱了。我这里有一张高级藏宝图你拿去吧，就当你做好事的回报。")
    常规提示(id,"#Y你获得了#R高级藏宝图")
    道具刷新(id)
  elseif 事件=="进阶变身卡" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    local 名称="怪物卡片"
    if self.数据[道具id].名称~=名称 then
      添加最后对话(id,"我需要的是怪物卡片，你给我的这个能当饭吃吗？")
      return
    elseif string.find(self.数据[道具id].造型,"进阶")~= nil then
      添加最后对话(id,"已经是进阶卡了,你还兑换个毛线啊！")
      return
    elseif self.数据[道具id].等级<=4 then
      添加最后对话(id,"变身卡等级低于5级没有进阶造型！")
      return
    elseif 玩家数据[id].角色.数据.银子<500000 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",500000))
      return
    end
    玩家数据[id].道具:给予道具(id,"怪物卡片","进阶"..self.数据[道具id].造型,1)
    常规提示(id,"#Y你获得了#R进阶变身卡")
    玩家数据[id].角色:扣除银子(500000,0,0,"进阶变身卡",1)
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
  elseif 事件=="添加装备特效" then
  local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
  if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
  添加最后对话(id,"请给予我要添加特效的装备！")
  return
  end
  if 玩家数据[id].角色.数据.银子<20000000 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",20000000))
      return
  elseif 玩家数据[id].角色.数据.当前经验<5000000 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两经验，你似乎手头有点紧哟？",5000000))
      return
  end
    玩家数据[id].角色:扣除银子(20000000,0,0,"点化装备",1)
    玩家数据[id].角色:扣除经验(5000000,"点化装备",1)
  if 取随机数(1,100)<=15 then
  self.数据[道具id].第二特效="无级别限制"
  添加最后对话(id,"添加装备特效成功！")
  广播消息({内容=format("#S(无级别特效)#R/%s#Y在奖励发放员处成功添加#Y无级别#G装备#特效",玩家数据[id].角色.数据.名称),频道="xt"})
  else
  添加最后对话(id,"不好意思，你添加无级别效果失败了！下次继续努力！")
  end


  elseif 事件=="道具添加装备特效" then
  local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
  if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
  添加最后对话(id,"请给予我要添加特效的装备！")
  return
  end
  self.数据[道具id].第二特效="无级别限制"
  添加最后对话(id,"添加装备特效成功！")


 elseif 事件=="道具添加装备特效1" then
  local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
  if self.数据[道具id].灵饰==nil then
  添加最后对话(id,"请给予我要添加特效的灵饰！")
  return
  end
  self.数据[道具id].特效="无级别限制"
  添加最后对话(id,"添加灵饰特效成功！")






  elseif 事件=="取消装备专用" then
  local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
  if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
  添加最后对话(id,"请给予我要添加的装备！")
  return
  end
  if 玩家数据[id].角色:扣除积分(500000,"取消装备专用",id) == false then
  添加最后对话(id,"你身上的比武积分不够#Y50万")
  return
  end
  self.数据[道具id].专用=nil
  self.数据[道具id].不可交易=nil
  添加最后对话(id,"取消专用成功！")

  elseif 事件=="添加装备特效1" then
  local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
  if self.数据[道具id].灵饰==nil then
  添加最后对话(id,"请给予我要添加特效的灵饰！")
  return
  end
  if 玩家数据[id].角色.数据.银子<20000000 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",20000000))
      return
    elseif 玩家数据[id].角色.数据.当前经验<5000000 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两经验，你似乎手头有点紧哟？",5000000))
      return
    end
    玩家数据[id].角色:扣除银子(20000000,0,0,"点化装备",1)
    玩家数据[id].角色:扣除经验(5000000,"点化装备",1)
  if 取随机数(1,100)<=25 then
  self.数据[道具id].特效="无级别限制"
  添加最后对话(id,"添加灵饰特效成功！")
  广播消息({内容=format("#S(无级别特效)#R/%s#Y在奖励发放员处成功添加#Y无级别#G灵饰#特效",玩家数据[id].角色.数据.名称),频道="xt"})
  else
  添加最后对话(id,"不好意思，你添加无级别效果失败了！下次继续努力！")
  end
  elseif 事件=="点化装备" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
      添加最后对话(id,"我这里目前只能点化人物装备，其它的我可没那么大的能耐。")
      return
    end
    local 银子=self.数据[道具id].级别限制*5000
    if 玩家数据[id].角色.数据.银子<银子 then
      添加最后对话(id,format("本次点化需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",银子))
      return
    end
    玩家数据[id].角色:扣除银子(银子,0,0,"点化装备",1)
    local 套装类型={"附加状态","追加法术"}
    套装类型=套装类型[取随机数(1,#套装类型)]
    local 套装效果={
    附加状态={
      "金刚护法","金刚护体","生命之泉","炼气化神","普渡众生","定心术","碎星诀","变身","凝神术","逆鳞","不动如山","法术防御","明光宝烛","天神护体","移魂化骨","蜜润","杀气诀","韦陀护法","一苇渡江","天神护法","乘风破浪","魔息术","盘丝阵","炎护"}
      ,追加法术={"横扫千军","善恶有报","惊心一剑","壁垒击破","满天花雨","浪涌","唧唧歪歪","五雷咒","龙卷雨击","剑荡四方","裂石","烟雨剑法","天雷斩","力劈华山","夜舞倾城","上古灵符","叱咤风云","天降灵葫","月光","八凶法阵","死亡召唤","天罗地网","夺命咒","落叶萧萧","落雷符","雨落寒沙","苍茫树","飞砂走石","阎罗令","水攻","烈火","落岩","雷击","泰山压顶","水漫金山","地狱烈火","奔雷咒"} --
    }
    self.数据[道具id].套装效果={套装类型,套装效果[套装类型][取随机数(1,#套装效果[套装类型])]}
    玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(14))
    玩家数据[id].角色:刷新任务跟踪()
    添加最后对话(id,format("点化装备成功,您本次点化后的套装效果为#Y%s：%s",self.数据[道具id].套装效果[1],self.数据[道具id].套装效果[2]),{"继续点化","告辞"})

      elseif 事件=="添加160级装备特技(10亿一次)" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
      添加最后对话(id,"我这里目前只能添加人物装备，其它的我可没那么大的能耐。")
      return
    end
    if self.数据[道具id].级别限制<160 then
      添加最后对话(id,"非160级装备不能添加")
      return
    end
    local 银子=1000000000
    if 玩家数据[id].角色.数据.银子<银子 then
      添加最后对话(id,format("本次添加需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",银子))
      return
    end
    玩家数据[id].角色:扣除银子(银子,0,0,"点化装备",1)
    local 通用特技={"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    self.数据[道具id].特技=通用特技[取随机数(1,#通用特技)]
    添加最后对话(id,format("添加特技成功,您本次添加特技效果为#Y%s",self.数据[道具id].特技))

    elseif 事件=="添加160级装备特效(10亿一次)" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
      添加最后对话(id,"我这里目前只能添加人物装备，其它的我可没那么大的能耐。")
      return
    end
    if self.数据[道具id].级别限制<160 then
      添加最后对话(id,"非160级装备不能添加")
      return
    end
    local 银子=1000000000
    if 玩家数据[id].角色.数据.银子<银子 then
      添加最后对话(id,format("本次添加需要消耗#Y%s#W两银子，你似乎手头有点紧哟？",银子))
      return
    end
    玩家数据[id].角色:扣除银子(银子,0,0,"点化装备",1)
    local 通用特效={"愤怒","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    self.数据[道具id].特效=通用特效[取随机数(1,#通用特效)]
    添加最后对话(id,format("添加特技成功,您本次添加特技效果为#Y%s",self.数据[道具id].特效))

  elseif 事件=="合成旗4" then --补充
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=11 or  self.数据[道具id].分类~=2 then
      常规提示(id,"#Y我只可以为合成旗补充次数哟。")
      return
    elseif self.数据[道具id].次数>=140 then
      常规提示(id,"#Y你的这个合成旗次数已经满了")
      return
    end
    local 编号=玩家数据[id].法宝id
    if 玩家数据[id].角色.数据.法宝[编号]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]].名称~="五色旗盒" then
      常规提示(id,"#Y你没有这样的法宝")
      return
    end
    local 灵气=140-self.数据[道具id].次数
    灵气=math.floor(灵气/5)
    if 灵气<1 then 灵气=1 end
    if 灵气>self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法 then
      常规提示(id,"#Y本次补充需要消耗#R"..灵气.."#Y点法宝灵气，你的法宝没有那么多的灵气")
      return
    end
    self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法=self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法-灵气
    self.数据[道具id].次数=140
    发送数据(连接id,38,{内容="你的法宝#R/五色旗盒#W/灵气减少了"..灵气.."点"})
    常规提示(id,"#Y补充成功！你的这个合成旗可使用次数已经恢复到140次了")
    道具刷新(id)
  elseif 事件=="合成旗" then
    -- table.print(数据.格子)
    local 道具id={}
    for n=1,#数据.格子 do
      if 数据.格子[n]~=nil  then
        道具id[n]=数据.格子[n]
        local 临时id=玩家数据[id].角色.数据.道具[数据.格子[n]]
        if self.数据[临时id].总类~=11 and self.数据[临时id].分类~=1 then
          常规提示(id,"#Y只有导标旗才可以合成哟")
          return
        end
      end
    end
    if 玩家数据[id].合成旗序列==nil then
      玩家数据[id].合成旗序列={}
      for n=1,#道具id do
        local 临时id=玩家数据[id].角色.数据.道具[道具id[n]]
        for i=1,#道具id do
          local 临时id1=玩家数据[id].角色.数据.道具[道具id[i]]
          if i~=n and 临时id1==临时id then
            常规提示(id,"#Y合成的导标旗中存在重复导标旗")
            return
          elseif i~=n and self.数据[临时id].地图~=self.数据[临时id1].地图 then
            常规提示(id,"#Y合成的导标旗定标场景必须为同一个")
            return
          end
        end
      end
    else
      for n=1,#道具id do
        local 临时id=玩家数据[id].角色.数据.道具[道具id[n]]
        if 玩家数据[id].合成旗序列.地图~=nil and 玩家数据[id].合成旗序列.地图~=self.数据[临时id].地图 then
          常规提示(id,"#Y只有#R"..取地图名称(玩家数据[id].合成旗序列.地图).."#Y的导标旗才可合成")
          return
        end
        for i=1,#道具id do
          local 临时id1=玩家数据[id].角色.数据.道具[道具id[i]]
          if i~=n and 临时id1==临时id then
            常规提示(id,"#Y合成的导标旗中存在重复导标旗")
            return
          end
        end
        for i=1,#玩家数据[id].合成旗序列 do
          local 临时id1=玩家数据[id].角色.数据.道具[玩家数据[id].合成旗序列[i]]
          if  临时id1==临时id then
            常规提示(id,"#Y合成的导标旗中存在重复导标旗")
            return
          end
        end
      end
    end
    local 编号=玩家数据[id].法宝id
    if 玩家数据[id].角色.数据.法宝[编号]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]].名称~="五色旗盒" then
      常规提示(id,"#Y你没有这样的法宝")
      return
    end
    local 上限=7
    if self.数据[玩家数据[id].角色.数据.法宝[编号]].气血<=0 then
      上限=3
    elseif self.数据[玩家数据[id].角色.数据.法宝[编号]].气血<=2 then
      上限=4
    elseif self.数据[玩家数据[id].角色.数据.法宝[编号]].气血<=5 then
      上限=5
    elseif self.数据[玩家数据[id].角色.数据.法宝[编号]].气血<=8 then
      上限=6
    elseif self.数据[玩家数据[id].角色.数据.法宝[编号]].气血<=9 then
      上限=7
    end
    for n=1,#道具id do
      if #玩家数据[id].合成旗序列<上限 then
        if 玩家数据[id].合成旗序列.地图==nil then
          玩家数据[id].合成旗序列.地图=self.数据[玩家数据[id].角色.数据.道具[道具id[n]]].地图
        end
        玩家数据[id].合成旗序列[#玩家数据[id].合成旗序列+1]=道具id[n]
      end
    end
    if #玩家数据[id].合成旗序列==上限 then
      local aa ="请选择超级合成旗的颜色："
      local xx={"绿色合成旗","蓝色合成旗","红色合成旗","白色合成旗","黄色合成旗",}
      发送数据(连接id,1501,{名称="五色旗盒",对话=aa,选项=xx})
      玩家数据[id].最后操作="合成旗3"
    else
      玩家数据[id].给予数据={类型=1,id=0,事件="合成旗"}
      发送数据(连接id,3507,{道具=玩家数据[id].道具:索要道具1(id),名称="五色旗盒",类型="法宝",等级="无"})
      玩家数据[id].最后操作="合成旗2"
      常规提示(id,format("#Y你已提交%s个导标旗，还需要提交%s个导标旗",#玩家数据[id].合成旗序列,上限-#玩家数据[id].合成旗序列))
    end
  elseif 事件=="装备出售" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id] == nil then
      return
    end
    if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
      添加最后对话(id,"我这里只收购人物装备哟，其它的破铜烂铁我可是不收滴哟。")
      return
    end
    玩家数据[id].出售装备=数据.格子[1]
    玩家数据[id].最后操作="出售装备"
    添加最后对话(id,format("你的这件#Y%s#W我将以#R%s#W两银子进行收购，请确认是否出售该装备？",self.数据[道具id].名称,self:取装备价格(道具id)),{"确认出售","我不卖了"})

  elseif 事件=="装备鉴定" then
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id] == nil then
      return
    end
    if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
      添加最后对话(id,"我这里只收购人物装备哟，其它的破铜烂铁我可是不收滴哟。")
      return
    end
    玩家数据[id].鉴定装备=数据.格子[1]
    玩家数据[id].最后操作="鉴定装备"
    添加最后对话(id,format("你的这件#Y%s#W我将以#R%s#W两银子进行鉴定，请确认是否鉴定该装备？",self.数据[道具id].名称,self:取装备价格(道具id)),{"确认鉴定","我不鉴定了"})
  elseif 事件=="法宝补充灵气" then
    local 道具id=玩家数据[id].角色.数据.法宝[数据.格子[1]]
    if self.数据[道具id].总类~=1000 then
      添加最后对话(id,"只有法宝才可以补充灵气哟，你这个是什么玩意？")
      return
    end
    local 价格=2000000
    if self.数据[道具id].分类==2 then
      价格=2000000
    elseif self.数据[道具id].分类==3 then
      价格=2000000
    end
    if 玩家数据[id].角色.数据.银子<价格 then
      添加最后对话(id,"本次补充法宝灵气需要消耗"..价格.."两银子，你身上没有那么多的现金哟。")
      return
    end
    玩家数据[id].角色:扣除银子(价格,0,0,"补充法宝扣除，法宝名称为"..self.数据[道具id].名称,1)
    self.数据[道具id].魔法=取灵气上限(self.数据[道具id].分类)
    添加最后对话(id,"补充法宝灵气成功！")
  elseif 事件=="宠修物品" then
    local 任务id=玩家数据[id].角色:取任务(13)
    if 任务id==0 then
      添加最后对话(id,"你没有这个任务！")
      return
    end
    local 道具id=玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].名称~=任务数据[任务id].物品  then
      添加最后对话(id,"我拿这个玩意用来干啥？")
      return
    end
    if self.数据[道具id].数量~=nil and self.数据[道具id].数量>0 then
      self.数据[道具id].数量=self.数据[道具id].数量-1
      if self.数据[道具id].数量<=0 then
        self.数据[道具id]=nil
        玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
      end
    else
      self.数据[道具id]=nil
      玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    end
    道具刷新(id)
    任务处理类:完成宠修任务(id,任务id)
  elseif 事件=="枪矛" or 事件=="斧钺" or 事件=="剑" or 事件=="双短剑" or 事件=="飘带" or 事件=="爪刺" or 事件=="扇" or 事件=="魔棒" or 事件=="锤" or 事件=="鞭" or 事件=="环圈" or 事件=="刀" or 事件=="法杖" or 事件=="弓弩" or 事件=="宝珠" or 事件=="巨剑" or 事件=="伞" or 事件=="灯笼" or 事件=="头盔" or 事件=="发钗" or 事件=="女衣" or 事件=="男衣" then
    local 道具id = 玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=2 then
        添加最后对话(id,"只有装备才能进行转换")
        return
    end
    local 子类=self:取武器类型(事件)
    local 等级=self.数据[道具id].级别限制
    玩家数据[id].角色:转换武器操作(id,self.数据[道具id],子类)

  elseif 事件=="道观建设" then
    local 道具id = 玩家数据[id].角色.数据.道具[数据.格子[1]]
    if self.数据[道具id].总类~=21 then
      添加最后对话(id,"只能上交木材")
      return
    end
    local 任务id=玩家数据[id].角色:取任务(130)
    local 副本id=任务数据[任务id].副本id
    local 增加进度=self.数据[道具id].数量*1
    副本数据.车迟斗法.进行[副本id].车迟木材=副本数据.车迟斗法.进行[副本id].车迟木材+增加进度
    for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
    if 队伍处理类:取是否助战(玩家数据[id].队伍,n) == 0 then
    if 副本数据.车迟斗法.进行[副本id].车迟木材>= 5 then --
    地图处理类:当前消息广播1(6021,"#Y当前道观建设已满，速去找有个和尚")
    副本数据.车迟斗法.进行[副本id].进程=2
    玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].角色:刷新任务跟踪()
    end
    玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].角色:刷新任务跟踪()
    end
    end
    常规提示(id,"#Y你上交了#R"..self.数据[道具id].数量.."#Y个木材，为道观增加了#R"..增加进度.."#Y建设度。")
    self.数据[道具id]=nil
    玩家数据[id].角色.数据.道具[数据.格子[1]]=nil
    道具刷新(id)
    任务处理类:设置车迟斗法副本(副本id)
    end
    end



function 道具处理类:出售装备(连接id,id)
  if 玩家数据[id].出售装备==nil or 玩家数据[id].角色.数据.道具[玩家数据[id].出售装备]==nil then
    添加最后对话(id,"该装备不存在！")
    return
  end
  local 道具id=玩家数据[id].角色.数据.道具[玩家数据[id].出售装备]
  if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
    添加最后对话(id,"该物品无法被我收购")
    return
  end
  local 银子=self:取装备价格(道具id)
  玩家数据[id].角色:添加银子(银子,format("出售装备:%s,%s",self.数据[道具id].名称,self.数据[道具id].识别码),1)
  self.数据[道具id]=nil
  玩家数据[id].角色.数据.道具[玩家数据[id].出售装备]=nil
  玩家数据[id].出售装备=nil
  添加最后对话(id,"出售装备成功，你获得了"..银子.."两银子")
  道具刷新(id)
  return
end

function 道具处理类:取装备价格(道具id)
  local 等级=self.数据[道具id].级别限制
  local 价格=150
  if  等级 ==10 then
    价格=1
  elseif 等级<10 then
    价格=1
  elseif  等级<=20 then
    价格=1
  elseif 等级<=30 then
   价格=1
  elseif 等级<=40 then
   价格=1
  else
   价格=100
  end
  if self.数据[道具id].专用~=nil then
    价格=1
    等级=1
  end
  return 价格*等级
end

function 道具处理类:生成合成旗(连接id,id,名称)
  if 玩家数据[id].合成旗序列==nil or #玩家数据[id].合成旗序列<=0 then
    常规提示(id,"#Y未找到已提交的导标旗，请重新使用法宝进行合成")
    玩家数据[id].合成旗序列=nil
    return
  end
  local 编号=玩家数据[id].法宝id
  if 玩家数据[id].角色.数据.法宝[编号]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]]==nil or self.数据[玩家数据[id].角色.数据.法宝[编号]].名称~="五色旗盒" then
    常规提示(id,"#Y你没有这样的法宝")
    return
  elseif self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法<=0 then
    常规提示(id,"#Y你的法宝灵气不足")
    return
  end
  self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法=self.数据[玩家数据[id].角色.数据.法宝[编号]].魔法-1
  local 次数=0
  for n=1,#玩家数据[id].合成旗序列 do
    local 临时id=玩家数据[id].角色.数据.道具[玩家数据[id].合成旗序列[n]]
    if 临时id==nil or self.数据[临时id]==nil or self.数据[临时id].总类~=11 or self.数据[临时id].分类~=1 or self.数据[临时id].地图~=玩家数据[id].合成旗序列.地图 or self.数据[临时id].次数==nil then
      常规提示(id,"#Y你的旗子没有定点，合成失败")
      玩家数据[id].合成旗序列=nil
      return
    end
    次数=次数+self.数据[临时id].次数
  end
  local 临时id=玩家数据[id].角色.数据.道具[玩家数据[id].合成旗序列[1]]
  self.数据[临时id].名称=名称
  self.数据[临时id].分类=2
  self.数据[临时id].次数=次数
  self.数据[临时id].xy={}
  for n=1,#玩家数据[id].合成旗序列 do
    local 临时id1=玩家数据[id].角色.数据.道具[玩家数据[id].合成旗序列[n]]
    self.数据[临时id].xy[n]={x=self.数据[临时id1].x,y=self.数据[临时id1].y}
    if n~=1 then
      玩家数据[id].角色.数据.道具[玩家数据[id].合成旗序列[n]]=nil
      self.数据[临时id1]=nil
    end
  end
  玩家数据[id].合成旗序列=nil
  玩家数据[id].法宝id=nil
  玩家数据[id].最后操作=nil
  发送数据(连接id,38,{内容="你的法宝#R/五色旗盒#W/灵气减少了1点"})
  常规提示(id,"#Y您获得了#R"..名称)
  道具刷新(id)
end
function 道具处理类:取装备1价格(道具id)
  local 等级=self.数据[道具id].级别限制
  local 价格=150
  if  等级 ==10 then
    价格=1
  elseif 等级<10 then
    价格=100000
  elseif  等级<=20 then
    价格=1
  elseif 等级<=30 then
   价格=1
  elseif 等级<=40 then
   价格=1
  else
   价格=100
  end
  if self.数据[道具id].专用~=nil then
    价格=1
    等级=1
  end
  return 价格
end
function 道具处理类:给予处理(连接id,id,数据)
  if 玩家数据[id].给予数据==nil  then
    return
  elseif 玩家数据[id].给予数据.类型==1 then --npc给予
    self:系统给予处理(连接id,id,数据)
    return
  end
  local 对方id=玩家数据[id].给予数据.id
  if 玩家数据[对方id]==nil then
    常规提示(id,"#Y/对方并不在线")
    return
  end
  if 地图处理类:比较距离(id,对方id,5000)==false then
    常规提示(id,"#Y/你们的距离太远了")
    return
  end
  if 玩家数据[对方id].摊位数据 ~= nil then
    常规提示(id,"#Y/对方正在摆摊无法给予物品")
    return
  end
  if 玩家数据[对方id].角色.数据.接受给予 == false then
    常规提示(id,"#Y/对方不接受任何方式给予物品")
    return
  end
  -- 给予银子
  local 银子=0
  local 银子来源=数据.银子
  local 名称=玩家数据[id].角色.数据.名称
  local 名称1=玩家数据[对方id].角色.数据.名称
  if 银子来源=="" or 银子来源==nil then
    银子=0
  else
    银子=数据.银子+0
  end
  if 银子<0 then
    return
  end
  if 玩家数据[id].角色.数据.银子<银子 then
    常规提示(id,"#Y/你没有那么多的银子")
    return
  end
  -- print(银子,数据.银子)
  if 银子>0 then
    local 之前银子=玩家数据[id].角色.数据.银子
    玩家数据[id].角色.数据.银子=玩家数据[id].角色.数据.银子-银子
    玩家数据[id].角色:日志记录(format("[给予系统-发起]接受账号为[%s][%s][%s]角色%s两银子，初始银子为%s，余额为%s两银子",玩家数据[对方id].账号,对方id,玩家数据[对方id].角色.数据.名称,银子,之前银子,玩家数据[id].角色.数据.银子))
    local 之前银子=玩家数据[对方id].角色.数据.银子
    玩家数据[对方id].角色.数据.银子=玩家数据[对方id].角色.数据.银子+银子
    玩家数据[对方id].角色:日志记录(format("[给予系统-接受]发起账号为[%s][%s][%s]角色%s两银子，初始银子为%s，余额为%s两银子",玩家数据[id].账号,id,玩家数据[id].角色.数据.名称,银子,之前银子,玩家数据[对方id].角色.数据.银子))
    常规提示(id,format("#Y/你给了%s%s两银子",名称1,银子))
    常规提示(对方id,format("#Y/%s给了你%s两银子",名称,银子))
  end
  for n=1,3 do
    if 数据.格子[n]~=nil then
      local 格子=数据.格子[n]
      if 格子~=nil then
        local 道具id=玩家数据[id].角色.数据.道具[数据.格子[n]]
        if 道具id~=nil and 玩家数据[id].道具.数据[道具id]~=nil then
          if 玩家数据[id].道具.数据[道具id].绑定 or 玩家数据[id].道具.数据[道具id].不可交易 then
            常规提示(id,"#Y/该物品无法交易或给予给他人")
          else
            local 对方格子=玩家数据[对方id].角色:取道具格子()
            if 对方格子==0 then
              常规提示(id,"#Y/对方身上没有足够的空间")
            else
              local 对方道具=玩家数据[对方id].道具:取新编号()
              local 道具名称=玩家数据[id].道具.数据[道具id].名称
              local 道具识别码=玩家数据[id].道具.数据[道具id].识别码
              玩家数据[对方id].道具.数据[对方道具]=table.loadstring(table.tostring(玩家数据[id].道具.数据[道具id]))
              玩家数据[对方id].角色.数据.道具[对方格子]=对方道具
              玩家数据[id].道具.数据[道具id]=nil
              玩家数据[id].角色.数据.道具[数据.格子[n]]=nil
              常规提示(id,"#Y/你给了"..名称1..玩家数据[对方id].道具.数据[对方道具].名称)
              常规提示(对方id,"#Y/"..名称.."给了你"..玩家数据[对方id].道具.数据[对方道具].名称)
              玩家数据[id].角色:日志记录(format("[给予系统-发起]物品名称%s、识别码%s,对方信息[%s][%s][%s]",道具名称,道具识别码,玩家数据[对方id].账号,对方id,名称1))
              玩家数据[对方id].角色:日志记录(format("[给予系统-接受]物品名称%s、识别码%s,对方信息[%s][%s][%s]",道具名称,道具识别码,玩家数据[id].账号,id,名称))
              更改道具归属(道具识别码,玩家数据[对方id].账号,对方id,名称1)
            end
          end
        end
      end
    end
  end
  道具刷新(id)
  道具刷新(对方id)
  玩家数据[id].给予数据=nil
end

function 道具处理类:开启宝藏山小宝箱(id,任务id)
  if 任务数据[任务id]==nil then
    常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
    return
  elseif 活动次数查询(id,"宝藏山小宝箱")==false then
    return
  elseif 宝藏山数据[id].小宝箱>10 then
    常规提示(id,"#Y你在本次活动中开启的小宝箱数量已达10个，无法再开启更多的小宝箱了")
    return
  end
  地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
  任务数据[任务id]=nil
  宝藏山数据[id].小宝箱=宝藏山数据[id].小宝箱+1
  宝藏山数据.小宝箱=宝藏山数据.小宝箱-1
  地图处理类:当前消息广播1(5001,format("#G当前场景内小宝箱剩余数量为：#R%s#G个",宝藏山数据.小宝箱))
  常规提示(id,"#Y你在本次活动中还可以开启#R"..(10-宝藏山数据[id].小宝箱).."个小宝箱")
  添加活动次数(id,"宝藏山小宝箱")
  if 妖魔积分[id]==nil then
  妖魔积分[id]={当前=0,总计=0,使用=0}
  end
  妖魔积分[id].当前=妖魔积分[id].当前+1
  妖魔积分[id].总计=妖魔积分[id].总计+1
  常规提示(id,"#Y/你获得了1点妖魔积分(可用于兑换和幸运转盘抽奖)")
  local 奖励参数=取随机数(1,200)
  if 奖励参数<=10 then
   local 名称=取强化石()
   玩家数据[id].道具:给予道具(id,名称,取随机数(5,10))
   常规提示(id,"#Y你获得了#R"..名称)
  elseif 奖励参数<=30 then
   local 名称="月华露"
   玩家数据[id].道具:给予道具(id,名称,取随机数(1,3),50)
   常规提示(id,"#Y你获得了#R"..名称)
  elseif 奖励参数<=60 then
   local 名称=self:给予书铁(id,{8,12})
   常规提示(id,"#Y你获得了#R"..名称[1])
   广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个小宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"80-120级书铁"),频道="xt"})
  elseif 奖励参数<=80 then
   local 名称=self:给予书铁(id,{8,13})
   常规提示(id,"#Y你获得了#R"..名称[1])
   广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个小宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"80-130级书铁"),频道="xt"})
  elseif 奖励参数<=110 then
   local 名称="魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称)
    常规提示(id,"#Y/你获得了"..名称)
  elseif 奖励参数<=130 then
   local 名称="金柳露"
   玩家数据[id].道具:给予道具(id,名称,1)
   常规提示(id,"#Y你获得了#R"..名称)
  else
   local 等级=玩家数据[id].角色.数据.等级
   local 经验=(等级*150*2)
   经验=取随机数(经验,经验*2)
   玩家数据[id].角色:添加经验(经验,"宝藏山小箱子",1)
  end
end

function 道具处理类:开启宝藏山大宝箱(id,任务id)
  if 任务数据[任务id]==nil then
    常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
    return
  elseif 活动次数查询(id,"宝藏山大宝箱")==false then
    return
  elseif 宝藏山数据[id].大宝箱>5 then
    常规提示(id,"#Y你在本次活动中开启的大宝箱数量已达5个，无法再开启更多的大宝箱了")
    return
  end
  地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
  任务数据[任务id]=nil
  宝藏山数据[id].大宝箱=宝藏山数据[id].大宝箱+1
  宝藏山数据.大宝箱=宝藏山数据.大宝箱-1
  地图处理类:当前消息广播1(5001,format("#G当前场景内大宝箱剩余数量为：#R%s#G个",宝藏山数据.大宝箱))
  常规提示(id,"#Y你在本次活动中还可以开启#R"..(5-宝藏山数据[id].大宝箱).."个大宝箱")
  添加活动次数(id,"宝藏山大宝箱")
  if 妖魔积分[id]==nil then
  妖魔积分[id]={当前=0,总计=0,使用=0}
  end
  妖魔积分[id].当前=妖魔积分[id].当前+5
  妖魔积分[id].总计=妖魔积分[id].总计+5
  常规提示(id,"#Y/你获得了5点妖魔积分(可用于兑换和幸运转盘抽奖)")
  local 银子=取随机数(300000,3000000)
  玩家数据[id].角色:添加银子(银子,"宝藏山大箱子",1)
  local 奖励参数=取随机数(1,200)
   if 奖励参数<=5 then
   local 名称="特殊兽决礼包"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"特殊兽决礼包"),频道="xt"})
  elseif 奖励参数<=20 then
   local 名称=取强化石()
   玩家数据[id].道具:给予道具(id,名称,取随机数(5,30))
   常规提示(id,"#Y你获得了#R"..名称)
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"强化石"),频道="xt"})
  elseif 奖励参数<=30 then
   local 名称="月华露"
    玩家数据[id].道具:给予道具(id,名称,取随机数(1,3),100)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"月华露"),频道="xt"})
  elseif 奖励参数<=80 then
   local 名称=self:给予书铁(id,{10,14})
   常规提示(id,"#Y你获得了#R"..名称[1])
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"100-140级书铁"),频道="xt"})
  elseif 奖励参数<=120 then
   local 名称=self:取五宝()
   玩家数据[id].道具:给予道具(id,名称)
   常规提示(id,"#Y/你获得了"..名称)
  广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"五宝"),频道="xt"})
  elseif 奖励参数<=150 then
    local 名称="超级金柳露"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
   广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"超级金柳露"),频道="xt"})
  elseif 奖励参数<=160 then
    local 名称="高级魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"高级魔兽要诀"),频道="xt"})
  elseif 奖励参数<=170 then
    local 名称="仙玉"
    添加仙玉(取随机数(100,300),玩家数据[id].账号,id,"宝藏山")
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(宝藏山)#R/%s#Y在宝藏山四处搜寻宝箱，皇天不负有心人，终于发现了一个大宝箱，打开一瞧，里面的宝藏居然是#G/%s#Y",玩家数据[id].角色.数据.名称,"仙玉"),频道="xt"})
  else
   local 等级=玩家数据[id].角色.数据.等级
   local 经验=(等级*300*2)
   玩家数据[id].角色:添加经验(经验,"宝藏山大箱子",1)
  end
end

function 道具处理类:鉴定装备(连接id,id)
  if 玩家数据[id].鉴定装备==nil or 玩家数据[id].角色.数据.道具[玩家数据[id].鉴定装备]==nil then
    添加最后对话(id,"该装备不存在！")
    return
  end
  local 道具id=玩家数据[id].角色.数据.道具[玩家数据[id].鉴定装备]
  if self.数据[道具id].总类~=2 or self.数据[道具id].灵饰 or self.数据[道具id].分类==9 then
    添加最后对话(id,"该物品我无法鉴定")
    return
    elseif self.数据[道具id].鉴定==true or self.数据[道具id].鉴定==nil then
    添加最后对话(id,"该装备已经鉴定过了")
    return
    elseif self.数据[道具id].级别限制>30 then
    添加最后对话(id,"等级大于30级的装备需要用图鉴鉴定了!")
    return
  end
  local 银子=self:取装备价格(道具id)
  玩家数据[id].角色:扣除银子(银子,0,0,"鉴定装备",1)
  self.数据[道具id].鉴定 = true
  self.数据[道具id].耐久 = 500
      道具刷新(id)
      常规提示(id,"#Y/恭喜你，装备鉴定成功!")
    end

function 道具处理类:开启福利宝箱(id,任务id)
    if 任务数据[任务id]==nil then
      常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
    return
  end
      local 奖励参数=取随机数()
      if 奖励参数<=1 then
        礼包奖励类:随机装备(id,90,"无级别限制")
        local 名称="90级无级别装备"
        常规提示(id,"#Y/你获得了"..名称)
        广播消息({内容=format("#S(福利宝箱)#R/%s#Y少侠开启福利宝箱时，里面居然藏着美味的海鲜，少侠口水直流，猛得咬下去，居然硌掉了大门牙，拿出来一看居然是#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
      elseif 奖励参数<=93 then
        local 名称="5W银子"
        玩家数据[id].角色:添加银子(50000,"福利宝箱",1)
        常规提示(id,"#Y/你获得了"..名称)
        --广播消息({内容=format("#S(福利宝箱)#R/%s#Y少侠开启福利宝箱时，里面居然藏着美味的海鲜，少侠口水直流，猛得咬下去，居然硌掉了大门牙，拿出来一看居然是#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
      elseif 奖励参数<=94 then
        local 名称="魔兽要诀"
        玩家数据[id].道具:给予道具(id,名称)
        常规提示(id,"#Y/你获得了"..名称)
        --广播消息({内容=format("#S(福利宝箱)#R/%s#Y少侠开启福利宝箱时，里面居然藏着美味的海鲜，少侠口水直流，猛得咬下去，居然硌掉了大门牙，拿出来一看居然是#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
      elseif 奖励参数<=50 then
        local 名称="100点仙玉"
        添加仙玉(100,玩家数据[id].账号,id,"福利宝箱")
        --广播消息({内容=format("#S(福利宝箱)#R/%s#Y少侠开启福利宝箱时，里面居然藏着美味的海鲜，少侠口水直流，猛得咬下去，居然硌掉了大门牙，拿出来一看居然是#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
      else
        local 名称="50W银子"
        玩家数据[id].角色:添加银子(500000,"福利宝箱",1)
        常规提示(id,"#Y/你获得了"..名称)
        --广播消息({内容=format("#S(福利宝箱)#R/%s#Y少侠开启福利宝箱时，里面居然藏着美味的海鲜，少侠口水直流，猛得咬下去，居然硌掉了大门牙，拿出来一看居然是#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
      end
  地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
  任务数据[任务id]=nil
end

--   if 任务数据[任务id]==nil then
--     常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
--     return
--   end
--   地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
--   任务数据[任务id]=nil
--   local 奖励参数=取随机数()
--   if 奖励参数<=40 then
--     local 名称="2W银子"
--     玩家数据[id].角色:添加银子(20000,"福利宝箱",1)
--     广播消息({内容=format("#S(福利宝箱)#R/%s#Y福来缘深，拾取福利宝箱获得#G/%s#Y",玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 奖励参数<=50 then
--     local 名称="10点仙玉"
--     添加仙玉(10,玩家数据[id].账号,id,"福利宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(福利宝箱)#R/%s#Y福来缘深，拾取福利宝箱获得#G/%s#Y",玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 奖励参数<=55 then
--     local 物品表={"金香玉","小还丹","千年保心丹","风水混元丹","定神香","蛇蝎美人","九转回魂丹","佛光舍利子","十香返生丸","五龙丹"}
--     local 临时物品=物品表[取随机数(1,#物品表)]
--     local 临时品质=100
--     常规提示(id,"#W/你获得了#R/"..临时物品)
--     self:给予道具(id,临时物品,1,临时品质)
--     广播消息({内容=format("#S(福利宝箱)#R/%s#Y福来缘深，拾取福利宝箱获得#G/%s#Y",玩家数据[id].角色.数据.名称,临时物品),频道="xt"})
--   else
--     local 名称="3W经验"
--     玩家数据[id].角色:添加经验(30000,"福利宝箱",1)
--     广播消息({内容=format("#S(福利宝箱)#R/%s#Y福来缘深，拾取福利宝箱获得#G/%s#Y",玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   end
-- end

function 道具处理类:开启车迟福利宝箱(id,任务id)
  if 任务数据[任务id]==nil then
    常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
    return
  end
  地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
  任务数据[任务id]=nil
  local 奖励参数=取随机数()
  if 奖励参数<=15 then
    local 名称="高级魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=30 then
    local 名称="九转金丹"
    玩家数据[id].道具:给予道具(id,名称,1,50)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=40 then
    local 名称="修炼果"
    玩家数据[id].道具:给予道具(id,名称,2)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s*2#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=60 then
    local 名称=取宝石()
    玩家数据[id].道具:给予道具(id,名称,取随机数(2,3))
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=70 then
    local 名称="魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=90 then
    local 名称="金银锦盒"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  else
    local 名称=取强化石()
    玩家数据[id].道具:给予道具(id,名称,10)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s*10#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  end
end

function 道具处理类:开启车迟胜利宝箱(id,任务id)
  if 任务数据[任务id]==nil then
    常规提示(id,"#Y这个宝箱已经被其他玩家开启过了")
    return
  end
  地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
  任务数据[任务id]=nil
  local 银子=取随机数(100000,500000)
  玩家数据[id].角色:添加银子(银子,"车迟斗法绑定宝箱",1)
  local 奖励参数=取随机数()
  if 奖励参数<=15 then
    local 名称="高级魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=30 then
   local 名称="九转金丹"
    玩家数据[id].道具:给予道具(id,名称,1,50)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=40 then
    local 名称="修炼果"
    玩家数据[id].道具:给予道具(id,名称,2)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s*2#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=60 then
    local 名称=取宝石()
    玩家数据[id].道具:给予道具(id,名称,取随机数(2,3))
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=70 then
    local 名称="魔兽要诀"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=73 then
    local 名称="高级魔兽要诀"
    local 技能=取特殊要诀()
    玩家数据[id].道具:给予道具(id,名称,nil,技能)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=90 then
    local 名称="金银锦盒"
    玩家数据[id].道具:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  else
    local 名称=取强化石()
    玩家数据[id].道具:给予道具(id,名称,10)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(副本-车迟斗法)#R/%s#Y在#R车迟斗法#Y副本中表现卓越，因此获得了三清奖励的#G/%s*10#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  end
end

function 道具处理类:发放在线奖励(id)
玩家数据[id].道具:给予书铁(id,{10,15},"指南书")
玩家数据[id].道具:给予书铁(id,{10,15},"精铁")
玩家数据[id].角色:添加经验(5000000,"测试奖励")
玩家数据[id].角色:添加银子(3000000,"测试奖励",1)
玩家数据[id].道具:给予道具(id,"彩果",取随机数(1,5))
玩家数据[id].道具:给予道具(id,"神兜兜",取随机数(1,5))
   广播消息({内容=format("#S(在线奖励)#R/%s#Y本日在线因此获得了游戏管理员赠送的#G/%s#Y",玩家数据[id].角色.数据.名称,"100-150级书铁"),频道="xt"})
end

function 道具处理类:迷宫奖励(id)
  if 迷宫数据[id]~=nil  then
    添加最后对话(id,"你不是已经领取过奖励了吗？")
    return
  elseif 活动次数查询(id,"幻域迷宫")==false then
    return
  end
  迷宫数据[id]=true
  local 等级=玩家数据[id].角色.数据.等级
  local 经验=等级*1000*2
  local 银子=等级*1000*2
  添加活动次数(id,"幻域迷宫")
  if 妖魔积分[id]==nil then
  妖魔积分[id]={当前=0,总计=0,使用=0}
  end
  妖魔积分[id].当前=妖魔积分[id].当前+50
  妖魔积分[id].总计=妖魔积分[id].总计+50
  常规提示(id,"#Y/你获得了50点妖魔积分(可用于兑换和幸运转盘抽奖)")
  玩家数据[id].角色:添加经验(经验,"幻域迷宫")
  玩家数据[id].角色:添加银子(银子,"幻域迷宫",1)
    活跃数据[id].活跃度=活跃数据[id].活跃度+30
    玩家数据[id].角色.数据.累积活跃.当前积分=玩家数据[id].角色.数据.累积活跃.当前积分+活跃数据[id].活跃度
    local 奖励参数=取随机数(1,100)
     if 奖励参数<=1 then
    local 名称="100-110级精铁"
     玩家数据[id].道具:给予书铁(id,{10,13},"精铁")
     常规提示(id,"#Y/你获得了100-130级精铁")
      广播消息({内容=format("#S(幻域迷宫)#R/%s#Y成功通过了所有迷宫，因此获得了迷宫守卫奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"高级随机书铁"),频道="xt"})
    elseif 奖励参数<=2 then
      local 名称="100-110级指南书"
      玩家数据[id].道具:给予书铁(id,{10,13},"指南书")
     常规提示(id,"#Y/你获得了100-130级指南书")
       广播消息({内容=format("#S(幻域迷宫)#R/%s#Y成功通过了所有迷宫，因此获得了迷宫守卫奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"高级随机书铁"),频道="xt"})
    elseif 奖励参数<=30 then
      local 名称="神兜兜"
      玩家数据[id].道具:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
     广播消息({内容=format("#S(幻域迷宫)#R/%s#Y成功通过了所有迷宫，因此获得了迷宫守卫奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"神兜兜"),频道="xt"})
    elseif 奖励参数<=60 then
      local 名称="3倍经验丹"
      玩家数据[id].道具:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
     广播消息({内容=format("#S(幻域迷宫)#R/%s#Y成功通过了所有迷宫，因此获得了迷宫守卫奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"3倍经验丹"),频道="xt"})
    elseif 奖励参数<=100 then
      local 名称="彩果"
      玩家数据[id].道具:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(幻域迷宫)#R/%s#Y成功通过了所有迷宫，因此获得了迷宫守卫奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"彩果"),频道="xt"})
    end
    if 迷宫数据.奖励<5 then
      迷宫数据.奖励=迷宫数据.奖励+1
      if 取随机数(1,100)<=50 then
        self:给予道具(id,"高级魔兽要诀")
        常规提示(id,"#Y/你获得了一本高级魔兽要诀")
        广播消息({内容=format("#S(幻域迷宫)#R/%s#Y以惊人的速度率先通过了所有迷宫，获得了迷宫守卫额外奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"高级魔兽要诀"),频道="xt"})
      else
        self:给予道具(id,"高级召唤兽内丹")
        常规提示(id,"#Y/你获得了高级召唤兽内丹")
        广播消息({内容=format("#S(幻域迷宫)#R/%s#Y以惊人的速度率先通过了所有迷宫，获得了迷宫守卫额外奖励的#G/%s#Y",玩家数据[id].角色.数据.名称,"高级召唤兽内丹"),频道="xt"})
      end
    end
  道具刷新(id)
end
function 道具处理类:高级藏宝图处理(id)
    local 奖励参数=取随机数(1,150)
    if 奖励参数<=15 then
      local 名称="高级魔兽要诀"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一本#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
    elseif 奖励参数<=70 then
      玩家数据[id].角色:添加银子(取随机数(10000,15000),"挖宝",1)
      else
      local 名称="魔兽要诀"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
    end
    local 奖励参数=取随机数(1,100)
    if 奖励参数<=1 then
      local 名称="100-110级精铁"
     玩家数据[id].道具:给予书铁(id,{10,11},"精铁")
     常规提示(id,"#Y/你获得了100-110级精铁")
     广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
     elseif 奖励参数<=2 then
      local 名称="100-110级指南书"
      玩家数据[id].道具:给予书铁(id,{10,11},"指南书")
     常规提示(id,"#Y/你获得了100-110级指南书")
     广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
    elseif 奖励参数<=10 then
      local 名称="神兜兜"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
    elseif 奖励参数<=25 then
    local 名称="155宝宝窝"
    战斗准备类:创建战斗(id+0,100221)
    广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
    elseif 奖励参数<=35 then
      local 名称="135-145宝宝窝"
    战斗准备类:创建战斗(id+0,100005)
    广播消息({内容=format("#S(高级藏宝图)#R/#Y据说#R%s#Y拿着高级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
    elseif 奖励参数<=55 then
    常规提示(id,"#Y/你一锄头挖下去，似乎触碰到了一个奇形怪状的物体")
    任务处理类:设置封妖任务(id)
    elseif 奖励参数<=75 then
    常规提示(id,"#Y/你一锄头挖下去，似乎触碰到了一个奇形怪状的物体")
    任务处理类:开启妖王(id)
    elseif 奖励参数<=90 then
    任务处理类:设置幼儿园(id)
    常规提示(id,"#Y/你一锄头挖下去，挖到了宝宝幼儿园")
    else
    local 名称="彩果"
    self:给予道具(id,名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    end
    if 成就数据[id].挖宝==nil then
    成就数据[id].挖宝=0
    end
    if 成就数据[id].挖宝<1000 then
    成就数据[id].挖宝=成就数据[id].挖宝+1
    end
    if 成就数据[id].挖宝 == 1 then
    local 成就提示 = "再世镖王"
    local 成就提示1 = "完成1次了挖宝"
    发送数据(玩家数据[id].连接id,149,{内容=成就提示,内容1=成就提示1})
    elseif 成就数据[id].挖宝==1000 then
    local 成就提示 = "再世镖王"
    local 成就提示1 = "完成1000次了挖宝"
    成就数据[id].成就点 = 成就数据[id].成就点 + 1
    常规提示(id,"#Y/恭喜你获得了1点成就")
    发送数据(玩家数据[id].连接id,149,{内容=成就提示,内容1=成就提示1})
    玩家数据[id].角色:添加称谓(id,"快递小哥")
    end
    end
function 道具处理类:低级藏宝图处理(id)
  local 奖励参数=取随机数(1,100)
  if 奖励参数<=1 then
    local 名称="60-80级书铁"
    self:给予书铁(id,{6,8})
    常规提示(id,"#Y/你获得了#R90-100级书铁")
    广播消息({内容=format("#S(低级藏宝图)#R/#Y据说#R%s#Y拿着低级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=5 then
    local 名称="60-80级装备"
    self:取随机装备(id,取随机数(6,8))
    常规提示(id,"#Y/你得到了80-90级装备")
    广播消息({内容=format("#S(低级藏宝图)#R/#Y据说#R%s#Y拿着低级藏宝图到野外挖到了一个#G/%s",玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 奖励参数<=10 then
    玩家数据[id].角色:添加银子(取随机数(5000,10000),"挖宝",1)
  elseif 奖励参数<=20 then
    战斗准备类:创建战斗(id+0,100003)
    常规提示(id,"#Y/你一锄头挖下去，似乎触碰到了一个奇形怪状的物体")
  elseif 奖励参数<=30 then
    local 名称=self:取五宝()
    self:给予道具(id,名称)
    常规提示(id,"#Y/你好像得到了"..名称)
  elseif 奖励参数<=40 then --设置
     self:给予道具(id,"吸附石",1)
    常规提示(id,"#Y/你获得了吸附石")
  elseif 奖励参数<=50 then
    常规提示(id,"#Y/你获得了一本妖怪遗留下来的秘籍")
    self:给予道具(id,"魔兽要诀")
  elseif 奖励参数<=60 then
    常规提示(id,"#Y/你一锄头挖下去挖出了一团瘴气，等你醒来的时候已经身受重伤了")
    玩家数据[id].角色.数据.气血=math.floor(玩家数据[id].角色.数据.气血*0.5)
    发送数据(玩家数据[id].连接id,5506,{玩家数据[id].角色:取气血数据()})
  elseif 奖励参数<=70 then
    self:给予道具(id,"符石卷轴",1)
    常规提示(id,"#Y/你得到了符石卷轴")
  elseif 奖励参数<=80 then
    local 名称=self:取五宝()
    self:给予道具(id,名称)
    常规提示(id,"#Y/你好像得到了"..名称)
   elseif 奖励参数<=90 then
    任务处理类:设置幼儿园(id)
    常规提示(id,"#Y/你一锄头挖下去，挖到了宝宝幼儿园")
  else
    常规提示(id,"#Y/你一锄头挖下去，似乎触碰到了一个奇形怪状的物体")
    任务处理类:设置封妖任务(id)
  end
      if 成就数据[id].挖宝==nil then
    成就数据[id].挖宝=0
    end
    if 成就数据[id].挖宝<1001 then
    成就数据[id].挖宝=成就数据[id].挖宝+1
    end
    if 成就数据[id].挖宝 == 1 then
    local 成就提示 = "再世镖王"
    local 成就提示1 = "完成1次了挖宝"
    发送数据(玩家数据[id].连接id,149,{内容=成就提示,内容1=成就提示1})
    elseif 成就数据[id].挖宝==1000 then
    local 成就提示 = "再世镖王"
    local 成就提示1 = "完成1000次了挖宝"
    成就数据[id].成就点 = 成就数据[id].成就点 + 1
    常规提示(id,"#Y/恭喜你获得了1点成就")
    发送数据(玩家数据[id].连接id,149,{内容=成就提示,内容1=成就提示1})
    玩家数据[id].角色:添加称谓(id,"快递小哥")
    end
end

function 道具处理类:妖魔积分兑换(连接id,id)
  if 妖魔积分[id]==nil then
    local 对话="你还没有获得妖魔积分，请先去降服一些妖魔鬼怪后再来吧。"
    发送数据(连接id,1501,{名称="袁天罡",模型="袁天罡",对话=对话,选项=xx})
    return
  elseif 妖魔积分[id].当前<3 then
    local 对话="本次操作需要消耗3点妖魔积分。"
    发送数据(连接id,1501,{名称="袁天罡",模型="袁天罡",对话=对话,选项=xx})
    return
  end
  妖魔积分[id].当前=妖魔积分[id].当前-3
  妖魔积分[id].使用=妖魔积分[id].使用+3
  local 奖励参数=取随机数()
  if 奖励参数<=15 then
    self:给予道具(id,"魔兽要诀")
    常规提示(id,"#Y/你获得了一本魔兽要诀")
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/".."魔兽要诀"})
  elseif 奖励参数<=20 then
    local 名称=取强化石()
    self:给予道具(id,名称,取随机数(1,2))
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..名称})
    常规提示(id,"#Y/你获得了"..名称)
  elseif 奖励参数<=50 then
    local 名称="彩果"
    self:给予道具(id,名称,1)
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..名称})
    常规提示(id,"#Y/你获得了"..名称)
  elseif 奖励参数<=70 then
    local 名称="超级金柳露"
   self:给予道具(id,名称,1)
   发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..名称})
   常规提示(id,"#Y/你获得了"..名称)
  else
    玩家数据[id].角色:添加银子(20000,"妖魔鬼怪兑换奖励",1)
  end
end

function 道具处理类:完成宝图遇怪(id)
  local 奖励参数=取随机数(1,100)
  if 奖励参数<=50 then
    local 名称=取宝石()
    self:给予道具(id,名称,取随机数(1,2))
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..名称})
    else
    self:取随机装备(id,取随机数(1,3))
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R10-30级装备"})
  end
  local 临时经验=取等级(id)*5*2
  玩家数据[id].角色:添加经验(临时经验,"挖图遇怪",1)
end

function 道具处理类:取五宝()
  return 五宝名称[取随机数(1,5)]
end

function 道具处理类:灵饰处理(id,道具id,等级,强化,类型)
  self.幻化id=道具id
  --self.数据[self.幻化id]={幻化等级=0}
  self.数据[self.幻化id].幻化属性={附加={},}
  self.数据[self.幻化id].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  -- print(id,道具id,等级,强化,类型)
  --0419灵饰属性
  self.临时属性=灵饰属性[类型].主属性[取随机数(1,#灵饰属性[类型].主属性)]
  self.临时数值=灵饰属性.基础1[self.临时属性][等级].b
  self.临时下限=灵饰属性.基础1[self.临时属性][等级].a
  self.临时数值=取随机数(self.临时下限,self.临时数值)
  local 上限数量=2
  if 强化==1 then
    self.临时数值=math.floor(self.临时数值*1.1)
    上限数量=3
  end
  self.数据[self.幻化id].幻化属性.基础={类型=self.临时属性,数值=self.临时数值,强化=0}
  for n=1,取随机数(1,上限数量) do
    self.临时属性=灵饰属性[类型].副属性[取随机数(1,#灵饰属性[类型].副属性)]
    self.临时数值=灵饰属性.基础[self.临时属性][等级].b
    self.临时下限=灵饰属性.基础[self.临时属性][等级].a
    self.临时数值=取随机数(self.临时下限,self.临时数值)
    for i=1,#self.数据[self.幻化id].幻化属性.附加 do
      if self.数据[self.幻化id].幻化属性.附加[i].类型==self.临时属性 then
        self.临时数值=self.数据[self.幻化id].幻化属性.附加[i].数值
      end
    end
    self.数据[self.幻化id].幻化属性.附加[n]={类型=self.临时属性,数值=self.临时数值,强化=0}
    print(上限数量)
  end
end

function 道具处理类:烹饪处理(连接id,数字id,数据)
  local 临时等级=玩家数据[数字id].角色:取生活技能等级("烹饪技巧")
  local 临时消耗=math.floor(临时等级)+10
  if 玩家数据[数字id].角色.数据.活力<临时消耗 then
    常规提示(数字id,"本次操作需要消耗"..临时消耗.."点活力")
    return
  end
  local 物品表={}
  玩家数据[数字id].角色.数据.活力= 玩家数据[数字id].角色.数据.活力-临时消耗
  体活刷新(数字id)
  if 临时等级<=4 then
   物品表={"包子"}
  elseif 临时等级<=9 then
   物品表={"包子","包子","佛跳墙","包子"}
  elseif 临时等级<=14 then
   物品表={"包子","包子","佛跳墙","包子","烤鸭"}
  elseif 临时等级<=19 then
   物品表={"包子","珍露酒","佛跳墙","烤鸭","佛跳墙","佛跳墙","包子","烤鸭"}
  elseif 临时等级<=24 then
   物品表={"包子","珍露酒","佛跳墙","佛跳墙","佛跳墙","烤鸭","包子","烤鸭","虎骨酒","佛跳墙","佛跳墙","包子","女儿红"}
  elseif 临时等级<=29 then
   物品表={"包子","珍露酒","豆斋果","佛跳墙","烤鸭","包子","佛跳墙","佛跳墙","烤鸭","虎骨酒","烤鸭","包子","女儿红"}
 elseif 临时等级<=34 then
   物品表={"包子","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=39 then
   物品表={"烤肉","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=44 then
   物品表={"烤肉","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=49 then
   物品表={"烤肉","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=54 then
   物品表={"烤肉","梅花酒","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=59 then
   物品表={"烤肉","百味酒","梅花酒","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  elseif 临时等级<=64 then
   物品表={"烤肉","蛇胆酒","百味酒","梅花酒","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  else
   物品表={"烤肉","醉生梦死","蛇胆酒","百味酒","梅花酒","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
  end
  local 临时物品=物品表[取随机数(1,#物品表)]
  local 临时品质=0
  if 临时物品~="包子" then
    临时品质=取随机数(math.floor(临时等级*0.5),临时等级)
  end
  常规提示(数字id,"#W/经过一阵忙碌，你烹制出了#R/"..临时物品)
  self:给予道具(数字id,临时物品,1,临时品质)
  发送数据(连接id,3699)
  道具刷新(数字id)
end

function 道具处理类:炼药处理(连接id,数字id,数据)
  local 临时等级=玩家数据[数字id].角色:取生活技能等级("中药医理")
  local 临时消耗=math.floor(临时等级)+10
  if 玩家数据[数字id].角色.数据.活力<临时消耗 then
   常规提示(数字id,"本次操作需要消耗"..临时消耗.."点活力")
   return
  elseif 临时等级<10 then
   常规提示(数字id,"您的中药医理技能尚未达到10级，无法进行炼药操作")
   return
  elseif 玩家数据[数字id].角色.数据.银子<5000 then
    常规提示(数字id,"炼药需要消耗5000两银子")
    return
  end
  玩家数据[数字id].角色:扣除银子(5000,0,0,"炼药消耗",1)
  玩家数据[数字id].角色.数据.活力= 玩家数据[数字id].角色.数据.活力-临时消耗
  体活刷新(数字id)
  local 物品表={}
  物品表={"金创药","金创药","金创药","金香玉","金创药","金创药","小还丹","金创药","金创药","千年保心丹","金创药","金创药","风水混元丹","金创药","金创药","定神香","金创药","金创药","蛇蝎美人","金创药","金创药","九转回魂丹","金创药","金创药","佛光舍利子","金创药","金创药","十香返生丸","金创药","金创药","金创药","金创药","五龙丹"}
  local 临时物品=物品表[取随机数(1,#物品表)]
  local 临时品质=0
  临时品质=取随机数(math.floor(临时等级*0.5),临时等级)
  常规提示(数字id,"#W/恭喜你成功炼制出了#R/"..临时物品)
  self:给予道具(数字id,临时物品,1,临时品质)
  发送数据(连接id,3699)
  道具刷新(数字id)
end

function 道具处理类:染色处理(连接id,id,数据)
  local 彩果数量=10
  for n=1,#数据 do
    彩果数量=彩果数量+数据[n]
  end
  local 扣除数据={}
  local 已扣除=0
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称=="彩果" and 已扣除<彩果数量 then
      if self.数据[玩家数据[id].角色.数据.道具[n]].数量>=彩果数量-已扣除 then
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=彩果数量-已扣除}
        已扣除=已扣除+(彩果数量-已扣除)
      else
        已扣除=已扣除+self.数据[玩家数据[id].角色.数据.道具[n]].数量
        扣除数据[#扣除数据+1]={格子=n,id=玩家数据[id].角色.数据.道具[n],数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量}
      end
    end
  end
  if 已扣除<彩果数量 then
    常规提示(id,"你没有那么多的彩果")
    return
  else
    for n=1,#扣除数据 do
      self.数据[扣除数据[n].id].数量=self.数据[扣除数据[n].id].数量-扣除数据[n].数量
      if self.数据[扣除数据[n].id].数量<=0 then
        self.数据[扣除数据[n].id]=nil
        玩家数据[id].角色.数据.道具[扣除数据[n].格子]=nil
      end
    end
    常规提示(id,"染色成功！")
    玩家数据[id].角色.数据.染色组=数据
    发送数据(连接id,30,数据)
    发送数据(连接id,3699)
    道具刷新(id)
    地图处理类:更改染色(id,数据,玩家数据[id].角色.数据.染色方案)
  end
end

function 道具处理类:神秘宝箱处理(连接id,id,数据)
  if 神秘宝箱[id]==nil then
    常规提示(id,"数据异常！")
    return
  end
  local 序号=神秘宝箱[id].中奖
  local 名称=神秘宝箱[id][序号].名称
  local 备注=神秘宝箱[id][序号].备注
  local 随机数=取随机数(1,100)
  if 名称=="随机宝石一" then
    local 物品名称="随机宝石一"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y你获得了#R"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"随机宝石礼包"),频道="xt"})
  elseif 名称=="随机宝石二" then
    local 物品名称="随机宝石二"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y你获得了#R"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"随机宝石礼包"),频道="xt"})
  elseif 名称=="星辉石" then
    玩家数据[id].道具:给予道具(id,名称,取随机数(3,6))
    常规提示(id,"#Y你获得了#R"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"3-6级星辉石"),频道="xt"})
  elseif 名称=="高级兽决礼包" then
    local 物品名称="高级兽决礼包"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y你获得了#R"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
  elseif 名称=="金银锦盒" then
    local 物品名称="金银锦盒"
    玩家数据[id].道具:给予道具(id,物品名称,取随机数(20,50))
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 备注=="100级随机书铁" then
    self:给予书铁(id,{10,10})
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"100级随机书铁"),频道="xt"})
    道具刷新(id)
  elseif 备注=="110级随机书铁" then
    self:给予书铁(id,{11,11})
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"110级随机书铁"),频道="xt"})
    道具刷新(id)
  elseif 备注=="120级随机书铁" then
    self:给予书铁(id,{12,12})
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"120级随机书铁"),频道="xt"})
    道具刷新(id)
  elseif 备注=="130级随机书铁" then
    self:给予书铁(id,{13,13})
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"130级随机书铁"),频道="xt"})
    道具刷新(id)
  elseif 名称=="新仙玉锦囊" then
    local 物品名称="新仙玉锦囊"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y/你获得了"..物品名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="特赦令牌" then
    local 物品名称="特赦令牌"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y/你获得了"..名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="高级召唤兽内丹" then
    local 物品名称="高级召唤兽内丹"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="召唤兽内丹" then
    local 物品名称="召唤兽内丹"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="高级魔兽要诀" then
    local 物品名称="高级魔兽要诀"
    玩家数据[id].道具:给予道具(id,物品名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="金柳露" then
    local 物品名称="金柳露"
    玩家数据[id].道具:给予道具(id,物品名称,取随机数(50,99))
    常规提示(id,"#Y/你获得了"..物品名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="超级金柳露" then
    local 物品名称="超级金柳露"
    玩家数据[id].道具:给予道具(id,物品名称,取随机数(5,10))
    常规提示(id,"#Y/你获得了"..物品名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 备注=="140级随机书铁" then
    local 物品名称="140级随机书铁"
    self:给予书铁(id,{14,14})
    常规提示(id,"#Y/你获得了"..物品名称)
   广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"140级随机书铁"),频道="xt"})
  elseif 备注=="150级随机书铁" then
    local 物品名称="150级随机书铁"
    self:给予书铁(id,{15,15})
    常规提示(id,"#Y/你获得了"..物品名称)
   广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"150级随机书铁"),频道="xt"})
elseif 备注=="80~120随机灵饰书" then
   local 名称="灵饰指南书"
       玩家数据[id].道具:给予道具(id,"灵饰指南书",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"80~120随机灵饰书"),频道="xt"})
 elseif 备注=="80~120随机晶石" then
   local 名称="元灵晶石"
       玩家数据[id].道具:给予道具(id,"元灵晶石",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"80~120随机晶石"),频道="xt"})
  elseif 名称=="神兜兜" then
    local 物品名称="神兜兜"
    玩家数据[id].道具:给予道具(id,物品名称,1)
    常规提示(id,"#Y/你获得了"..物品名称)
    广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
  elseif 名称=="金砖" then
      玩家数据[id].角色:添加银子(3000000,"神秘宝箱",1)
      广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"300万银子"),频道="xt"})
  elseif 名称=="仙丹" then
      玩家数据[id].角色:添加经验(5000000,"神秘宝箱",1)
      广播消息({内容=format("#S(幸运大转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"500万经验"),频道="xt"})
  end
  神秘宝箱[id]=nil
end

--
-- function 道具处理类:仙玉神秘宝箱处理(连接id,id,数据)
--   if 神秘宝箱[id]==nil then
--     常规提示(id,"数据异常！")
--     return
--   end
--   local 序号=神秘宝箱[id].中奖
--   local 名称=神秘宝箱[id][序号].名称
--   local 随机数=取随机数(1,100)
--   if 名称=="红玛瑙" or 名称=="太阳石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="月亮石" or 名称=="光芒石" then
--       if 随机数<=60 then
--         玩家数据[id].道具:给予道具(id,名称,取随机数(1,8))
--       else
--         玩家数据[id].道具:给予道具(id,名称,取随机数(5,10))
--       end
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="星辉石" then
--       if 随机数<=60 then
--         玩家数据[id].道具:给予道具(id,名称,取随机数(1,8))
--       else
--         玩家数据[id].道具:给予道具(id,名称,取随机数(5,10))
--       end
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="高级兽决" then
--       local 物品名称="高级魔兽要诀"
--       local 技能=取高级要诀()
--       常规提示(id,"#Y/你获得了"..名称)
--       if 随机数<=60 then
--         玩家数据[id].道具:给予道具(id,物品名称,nil,技能)
--       else
--         技能=取特殊要诀1()
--         玩家数据[id].道具:给予道具(id,物品名称,nil,技能)
--       end
--       常规提示(id,"#Y你获得了#R"..物品名称)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
--   elseif 名称=="随机法宝" then
--       self:给予随机全法宝(id)
--       道具刷新(id)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"1-4级随机法宝"),频道="xt"})
--   elseif 名称=="武器" then
--     礼包奖励类:取随机武器(id,90,"无级别限制")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"90级武器"),频道="xt"})
--   elseif 名称=="高级武器" then
--     礼包奖励类:取随机高级武器(id,100,"无级别限制")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"110级武器"),频道="xt"})
--   elseif 名称=="装备" then
--     礼包奖励类:取随机装备(id,90,"无级别限制")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"90级装备"),频道="xt"})
--   elseif 名称=="高级装备" then
--     礼包奖励类:取随机高级装备(id,100,"无级别限制")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"110级装备"),频道="xt"})
--   elseif 名称=="储备" then
--     玩家数据[id].角色:添加储备(100000000,"神秘宝箱",1)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"一亿储备"),频道="xt"})
--   elseif 名称=="超级金柳露" then
--     self:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="百炼精铁" then
--     self:给予书铁(id,{8,10})
--     常规提示(id,"#Y你获得了#R随机80-100书铁")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"90级随机书铁"),频道="xt"})
--   elseif 名称=="制造指南书" then
--     self:给予书铁(id,{8,10})
--     常规提示(id,"#Y你获得了#R随机80-100书铁")
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"90级随机书铁"),频道="xt"})
--   elseif 名称=="神兜兜" then
--     if 取随机数()<=90 then
--       self:给予道具(id,名称,1)
--       常规提示(id,"#Y你获得了一个#R"..名称)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--     else
--       self:给予道具(id,名称,99)
--       常规提示(id,"#Y你获得了99个#R"..名称)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"99个神兜兜"),频道="xt"})
--     end
--   elseif 名称=="魔兽残卷" then
--     self:给予道具(id,名称,3)
--     常规提示(id,"#Y你获得了3个#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="10点卡" then
--     添加点卡(10,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="20点卡" then
--     添加点卡(20,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="30点卡" then
--     添加点卡(30,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="40点卡" then
--     添加点卡(40,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="50点卡" then
--     添加点卡(50,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="100点卡" then
--     添加点卡(100,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="120点卡" then
--     添加点卡(120,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="200点卡" then
--     添加点卡(200,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="500点卡" then
--     添加点卡(500,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="1000点卡" then
--     添加点卡(1000,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="2000点卡" then
--     添加点卡(2000,玩家数据[id].账号,id,"武神坛抽奖")
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="金砖" then
--       玩家数据[id].角色:添加银子(10000000,"神秘宝箱",1)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="仙丹" then
--       玩家数据[id].角色:添加经验(10000000,"神秘宝箱",1)
--       广播消息({内容=format("#S(武神坛转盘)#R/%s#Y在武神坛使者处获得了#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   end
-- end

-- function 道具处理类:钥匙神秘宝箱处理(连接id,id,数据)
--   if 神秘宝箱[id]==nil then
--     常规提示(id,"数据异常！")
--     return
--   end
--   local 序号=神秘宝箱[id].中奖
--   local 名称=神秘宝箱[id][序号].名称
--   local 随机数=取随机数(1,100)
--   if 名称=="红玛瑙" or 名称=="太阳石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="月亮石" or 名称=="光芒石" then
--     if 随机数<=60 then
--       玩家数据[id].道具:给予道具(id,名称,取随机数(4,8))
--     else
--       玩家数据[id].道具:给予道具(id,名称,取随机数(8,12))
--     end
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="星辉石" then
--     if 随机数<=60 then
--       玩家数据[id].道具:给予道具(id,名称,取随机数(3,6))
--     else
--       玩家数据[id].道具:给予道具(id,名称,取随机数(6,10))
--     end
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="高级兽决" then
--     local 物品名称="高级魔兽要诀"
--     常规提示(id,"#Y/你获得了"..物品名称)
--     玩家数据[id].道具:给予道具(id,物品名称,1)
--   elseif 名称=="随机法宝" then
--     self:给予随机一级法宝(id)
--     道具刷新(id)
--   elseif 名称=="武器" then
--     礼包奖励类:取随机武器(id,150,"无级别限制")
--   elseif 名称=="高级武器" then
--     礼包奖励类:取随机武器(id,160,"无级别限制")
--   elseif 名称=="装备" then
--     礼包奖励类:取随机装备(id,150,"无级别限制")
--   elseif 名称=="高级装备" then
--     礼包奖励类:取随机装备(id,160,"无级别限制")
--   elseif 名称=="储备" then
--     玩家数据[id].角色:添加储备(66666666,"神秘宝箱",1)
--   elseif 名称=="超级金柳露" then
--     self:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="200点卡" then
--     添加仙玉(200,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="300点卡" then
--     添加仙玉(300,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="400点卡" then
--     添加仙玉(400,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="600点卡" then
--     添加仙玉(600,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="1000点卡" then
--     添加仙玉(1000,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="2500点卡" then
--     添加仙玉(2500,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="金砖" then
--     玩家数据[id].角色:添加银子(40000000,"神秘宝箱",1)
--   elseif 名称=="仙丹" then
--     玩家数据[id].角色:添加经验(40000000,"神秘宝箱",1)
--   end
-- end

-- function 道具处理类:吊游定制宝箱处理(连接id,id,数据)
--   if 神秘宝箱[id]==nil then
--     常规提示(id,"数据异常！")
--     return
--   end
--   local 序号=神秘宝箱[id].中奖
--   local 名称=神秘宝箱[id][序号].名称
--   local 随机数=取随机数(1,100)
--   if 名称=="灵饰兑换卡" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="召唤兽装备兑换卡" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="高级兽决" then
--     local 物品名称="高级魔兽要诀"
--     常规提示(id,"#Y/你获得了"..物品名称)
--     玩家数据[id].道具:给予道具(id,物品名称,1)
--   elseif 名称=="召唤兽祈愿卡" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="高级召唤兽祈愿卡" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="160级装备礼包" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="150级装备礼包" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="星辉石" then
--     玩家数据[id].道具:给予道具(id,名称,5)
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="锦衣兑换卡" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="特殊兽诀" then
--     local 物品名称="高级魔兽要诀"
--     local 随机特殊={"上古灵符","叱咤风云","净台妙谛","须弥真言","天降灵葫","大快朵颐","死亡召唤","嗜血追击","灵能激发","龙魂","理直气壮"}
--     local 技能=随机特殊[取随机数(1,#随机特殊)]
--     常规提示(id,"#Y/你获得了"..物品名称)
--     玩家数据[id].道具:给予道具(id,物品名称,nil,技能)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,物品名称),频道="xt"})
--   elseif 名称=="九转金丹" then
--     self:给予道具(id,名称,1,500)
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="坐骑内丹" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--    elseif 名称=="融合石" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--     elseif 名称=="钨金" then
--     玩家数据[id].道具:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="元灵晶石" then
--     玩家数据[id].道具:给予道具(id,名称,{14})
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="灵饰指南书" then

--     玩家数据[id].道具:给予道具(id,名称,{14})
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="观照万象" then
--     常规提示(id,"#Y/你获得了"..名称)
--     玩家数据[id].道具:给予道具(id,"高级魔兽要诀",nil,名称)
--     广播消息({内容=format("#S(神秘转盘)#Y恭喜玩家#R/%s#Y鸿运当头，使用神秘钥匙抽到了珍贵的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,名称),频道="xt"})
--   elseif 名称=="附魔宝珠" then
--     常规提示(id,"#Y/你获得了"..名称)
--     玩家数据[id].道具:给予道具(id,名称,1)
--   elseif 名称=="随机5级宝石" then
--     local 名称=取宝石()
--     常规提示(id,"#Y/你获得了"..名称)
--     玩家数据[id].道具:给予道具(id,名称,5)
--   elseif 名称=="储备" then
--     玩家数据[id].角色:添加储备(66666666,"神秘宝箱",1)
--   elseif 名称=="超级金柳露" then
--     self:给予道具(id,名称,1)
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="10点卡" then
--     添加点卡(10,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="50点卡" then
--     添加点卡(50,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="100点卡" then
--     添加点卡(100,玩家数据[id].账号,id,"神秘宝箱")
--     常规提示(id,"#Y你获得了#R"..名称)
--   elseif 名称=="金砖1" then
--     玩家数据[id].角色:添加银子(5000000,"神秘宝箱",1)
--   elseif 名称=="金砖2" then
--     玩家数据[id].角色:添加银子(10000000,"神秘宝箱",1)
--   elseif 名称=="金砖3" then
--     玩家数据[id].角色:添加银子(100000000,"神秘宝箱",1)
--   elseif 名称=="仙丹" then
--     玩家数据[id].角色:添加经验(40000000,"神秘宝箱",1)
--   end
-- end


function 道具处理类:神树抽奖(id)
  local 获奖几率 = 取随机数(1,325)
  if 神树抽奖 then
    if 玩家数据[id].角色:扣除仙玉(300,"神树抽奖",id) == false then
        常规提示(id,"#Y你当前没有那么多仙玉进行抽奖哦，抽奖需要消耗300点仙玉。")
        return
    end
    if 获奖几率<=20 then
      玩家数据[id].角色:添加经验(5000000,"神树抽奖",1)
    --  常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G500万经验".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=60 then
      玩家数据[id].角色:添加银子(3000000,"神树抽奖",1)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G300万银子".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=100 then
      local 名称="随机宝石一"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=130 then
      local 名称="随机宝石二"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=140 then
      local 名称="星辉石"
      self:给予道具(id,名称,取随机数(3,5))
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=145 then
      local 名称="星辉石"
      self:给予道具(id,名称,取随机数(4,7))
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=155 then
      local 名称="九转金丹"
      self:给予道具(id,名称,1,100)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=170 then
      local 名称="高级兽决礼包"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=200 then
      local 名称="特赦令牌"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=230 then
      local 名称="新仙玉锦囊"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=235 then
      local 名称="灵饰指南书"
      玩家数据[id].道具:给予道具(id,"灵饰指南书",{8,10})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=237 then
      local 名称="灵饰指南书"
      玩家数据[id].道具:给予道具(id,"灵饰指南书",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=242 then
      local 名称="元灵晶石"
      玩家数据[id].道具:给予道具(id,"元灵晶石",{8,10})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=244 then
      local 名称="元灵晶石"
      玩家数据[id].道具:给予道具(id,"元灵晶石",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=270 then
      local 名称="神兜兜"
       self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=280 then
    local 名称="140级随机书铁"
      self:给予书铁(id,{14,14})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=295 then
    local 名称="130级随机书铁"
      self:给予书铁(id,{13,13})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=315 then
    local 名称="120级随机书铁"
      self:给予书铁(id,{12,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
     elseif 获奖几率<=317 then
    local 名称="150级随机书铁"
      self:给予书铁(id,{15,15})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=327 then
    local 名称="点化石"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    end
end
end

function 道具处理类:神树抽奖2(id)
  local 获奖几率 = 取随机数(1,500)
  if 神树抽奖 then
    if 玩家数据[id].角色:扣除仙玉(300,"神树抽奖",id) == false then
        常规提示(id,"#Y你当前没有那么多仙玉进行抽奖哦，抽奖需要消耗300点仙玉。")
        return
    end
    if 获奖几率<=20 then
      玩家数据[id].角色:添加经验(5000000,"神树抽奖",1)
    --  常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G500万经验".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=60 then
      玩家数据[id].角色:添加银子(3000000,"神树抽奖",1)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G300万银子".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=100 then
      local 名称="随机宝石一"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=130 then
      local 名称="随机宝石二"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=160 then
      local 名称="星辉石"
      self:给予道具(id,名称,取随机数(3,5))
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=180 then
      local 名称="星辉石"
      self:给予道具(id,名称,取随机数(4,7))
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=190 then
      local 名称="九转金丹"
      self:给予道具(id,名称,1,100)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=210 then
      local 名称="高级兽决礼包"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=230 then
      local 名称="特赦令牌"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=260 then
      local 名称="新仙玉锦囊"
      self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=270 then
      local 名称="灵饰指南书"
      玩家数据[id].道具:给予道具(id,"灵饰指南书",{8,10})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=275 then
      local 名称="灵饰指南书"
      玩家数据[id].道具:给予道具(id,"灵饰指南书",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=285 then
      local 名称="元灵晶石"
      玩家数据[id].道具:给予道具(id,"元灵晶石",{8,10})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=290 then
      local 名称="元灵晶石"
      玩家数据[id].道具:给予道具(id,"元灵晶石",{8,12})
      常规提示(id,"#Y/你获得了"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    elseif 获奖几率<=330 then
      local 名称="神兜兜"
       self:给予道具(id,名称,1)
      常规提示(id,"#Y你获得了#R"..名称)
      广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
    end
end
end

--   else
--     local 抽奖消耗 = 20000000
--     if 吊游定制 then
--       获奖几率 = 取随机数(1,508)
--       抽奖消耗 = 30000000
--     end
--     if 取银子(id) < 抽奖消耗 then
--         常规提示(id,"#Y你当前没有那么多银子进行抽奖哦，抽奖需要消耗"..抽奖消耗.."两银子。")
--         return
--     end
--     玩家数据[id].角色:扣除银子(抽奖消耗,0,0,"神树抽奖",1)
--     if 获奖几率<=30 then
--       玩家数据[id].角色:添加经验(5000000,"神树抽奖",1)
--     elseif 获奖几率<=60 then
--       玩家数据[id].角色:添加银子(10000000,"神树抽奖",1)
--     elseif 获奖几率<=90 then
--       for n=1,#玩家数据[id].召唤兽.数据 do
--       玩家数据[id].召唤兽:获得经验(玩家数据[id].召唤兽.数据[n].认证码,1000000,id,"神树抽奖")
--       end
--     elseif 获奖几率<=120 then
--       local 名称=取宝石()
--       self:给予道具(id,名称,取随机数(5,10))
--       常规提示(id,"#Y你获得了#R"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=150 then
--       local 名称="星辉石"
--       self:给予道具(id,名称,取随机数(5,10))
--       常规提示(id,"#Y你获得了#R"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=180 then
--       local 名称="九转金丹"
--       self:给予道具(id,名称,1,100)
--       常规提示(id,"#Y你获得了#R"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=210 then
--       local 物品名称="高级魔兽要诀"
--       local 技能=取高级要诀()
--       self:给予道具(id,物品名称,nil,技能)
--       常规提示(id,"#Y你获得了#R"..物品名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",物品名称),频道="xt"})
--     elseif 获奖几率<=230 then
--       local 名称="特赦令牌"
--       self:给予道具(id,名称,1)
--       常规提示(id,"#Y你获得了#R"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=280 then
--       local 名称=取强化石()
--       self:给予道具(id,名称,1)
--       常规提示(id,"#Y你获得了#R"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=300 then
--       local 名称="灵饰指南书"
--       玩家数据[id].道具:给予道具(id,"灵饰指南书",{12,14})
--       常规提示(id,"#Y/你获得了"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=320 then
--       local 名称="元灵晶石"
--       玩家数据[id].道具:给予道具(id,"元灵晶石",{12,14})
--       常规提示(id,"#Y/你获得了"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",名称),频道="xt"})
--     elseif 获奖几率<=325 then
--       礼包奖励类:随机装备(id,150)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","150级随机装备一件"),频道="xt"})
--     elseif 获奖几率<=330 then
--       local 物品名称="高级魔兽要诀"
--       local 技能=取特殊要诀1()
--       self:给予道具(id,物品名称,nil,技能)
--       常规提示(id,"#Y你获得了#R"..物品名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",物品名称),频道="xt"})
--     elseif 获奖几率<=360 then
--       self:给予道具(id,"神兜兜",1)
--       常规提示(id,"#Y/你获得了神兜兜")
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","神兜兜"),频道="xt"})
--     elseif 获奖几率<=385 then
--      礼包奖励类:随机装备(id,100,"无级别限制")
--       常规提示(id,"#Y/你获得了100级无级别装备")
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","100级无级别装备"),频道="xt"})
--     elseif 获奖几率<=413 then
--       礼包奖励类:随机装备(id,120,"无级别限制")
--       常规提示(id,"#Y/你获得了120级无级别装备")
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","120级无级别装备"),频道="xt"})
--     elseif 获奖几率<=433 then
--       礼包奖励类:随机装备(id,130,"无级别限制")
--       常规提示(id,"#Y/你获得了130级无级别装备")
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","130级无级别装备"),频道="xt"})
--     elseif 获奖几率<=448 then
--       local 名称="魔兽残卷"
--       玩家数据[id].道具:给予道具(id,名称,1)
--       常规提示(id,"#Y/你获得了"..名称)
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动","魔兽残卷"),频道="xt"})
--     elseif 获奖几率<=463 then
--       local 临时名称=self:给予书铁(id,{10,10})
--       常规提示(id,"#Y/你获得了"..临时名称[1])
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的100级#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",临时名称[1]),频道="xt"})
--     elseif 获奖几率<=483 then
--       local 临时名称=self:给予书铁(id,{12,12})
--       常规提示(id,"#Y/你获得了"..临时名称[1])
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的120级#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",临时名称[1]),频道="xt"})
--     elseif 获奖几率<=508 then
--       local 临时名称=self:给予书铁(id,{13,13})
--       常规提示(id,"#Y/你获得了"..临时名称[1])
--       广播消息({内容=format("#S(神树抽奖)#G/%s#Y参与#R%s#Y获得了其奖励的130级#G/%s#Y".."#"..取随机数(1,110),玩家数据[id].角色.数据.名称,"神树抽奖活动",临时名称[1]),频道="xt"})
--     end
--   end
-- end

function 道具处理类:卸下bb装备(连接id,id,数据)
  local 角色=数据.角色
  local 类型=数据.类型
  local 道具=数据.道具
  --local 道具id=玩家数据[id].角色.数据[类型][道具]
  local bb=数据.编号
  local 道具格子=玩家数据[id].角色:取道具格子()
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return
  else
    local 临时id=self:取新编号()
    self.数据[临时id]=玩家数据[id].召唤兽.数据[bb].装备[道具]
    玩家数据[id].召唤兽:卸下装备(玩家数据[id].召唤兽.数据[bb].装备[道具],道具,bb)
    玩家数据[id].角色.数据.道具[道具格子]=临时id
    玩家数据[id].召唤兽.数据[bb].装备[道具]=nil
    发送数据(连接id,3699)
    道具刷新(id)
    发送数据(连接id,20,玩家数据[id].召唤兽:取存档数据(bb))
    发送数据(连接id,28)
  end
end


function 道具处理类:多开卸下bb装备(连接id,id,数据,主id)
  local 角色=数据.角色
  local 类型=数据.类型
  local 道具=数据.道具
  --local 道具id=玩家数据[id].角色.数据[类型][道具]
  local bb=数据.编号
  local 道具格子=玩家数据[id].角色:取道具格子()
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return
  else
    local 临时id=self:多开取新编号(id)
    玩家数据[id].道具.数据[临时id]=玩家数据[id].召唤兽.数据[bb].装备[道具]
    玩家数据[id].召唤兽:卸下装备(玩家数据[id].召唤兽.数据[bb].装备[道具],道具,bb)
    玩家数据[id].角色.数据.道具[道具格子]=临时id
    玩家数据[id].召唤兽.数据[bb].装备[道具]=nil
    发送数据(连接id,3699.1)
    道具刷新(id)
    发送数据(连接id,20.1,玩家数据[id].召唤兽:取存档数据(bb))
    发送数据(连接id,28.1)
  end
end

function 道具处理类:佩戴bb装备(连接id,id,数据)
  local 角色=数据.角色
  local 类型=数据.类型
  local 道具=数据.道具
  local 道具id=玩家数据[id].角色.数据[类型][道具]
  local bb=数据.编号
  if self.数据[道具id].分类>6 and self:召唤兽可装备(self.数据[道具id],self.数据[道具id].分类-6,玩家数据[id].召唤兽.数据[bb].等级,id) then
    local 装备格子=self.数据[道具id].分类 - 6
    if 玩家数据[id].召唤兽.数据[bb].装备[装备格子] ~= nil then
     local 临时道具=玩家数据[id].召唤兽.数据[bb].装备[装备格子]
     玩家数据[id].召唤兽:卸下装备(玩家数据[id].召唤兽.数据[bb].装备[装备格子],装备格子,bb)
     玩家数据[id].召唤兽.数据[bb].装备[装备格子] =nil
     玩家数据[id].召唤兽:穿戴装备(self.数据[道具id],装备格子,bb)
     self.数据[道具id] = 临时道具
     玩家数据[id].角色.数据[类型][道具]=道具id
    else
     玩家数据[id].召唤兽:穿戴装备(self.数据[道具id],装备格子,bb)
     self.数据[道具id]=nil
     玩家数据[id].角色.数据[类型][道具]=nil
    end
    发送数据(连接id,3699)
    道具刷新(id)
    发送数据(连接id,20,玩家数据[id].召唤兽:取存档数据(bb))
    发送数据(连接id,28)
  end
end


function 道具处理类:多开佩戴bb装备(连接id,id,数据,主id)
  local 角色=数据.角色
  local 类型=数据.类型
  local 道具=数据.道具
  local 道具id=玩家数据[id].角色.数据[类型][道具]
  local bb=数据.编号
  if 玩家数据[id].道具.数据[道具id].分类>6 and self:召唤兽可装备(玩家数据[id].道具.数据[道具id],玩家数据[id].道具.数据[道具id].分类-6,玩家数据[id].召唤兽.数据[bb].等级,主id) then
    local 装备格子=玩家数据[id].道具.数据[道具id].分类 - 6
    if 玩家数据[id].召唤兽.数据[bb].装备[装备格子] ~= nil then
     local 临时道具=玩家数据[id].召唤兽.数据[bb].装备[装备格子]
     玩家数据[id].召唤兽:卸下装备(玩家数据[id].召唤兽.数据[bb].装备[装备格子],装备格子,bb)
     玩家数据[id].召唤兽.数据[bb].装备[装备格子] =nil
     玩家数据[id].召唤兽:穿戴装备(玩家数据[id].道具.数据[道具id],装备格子,bb)
     玩家数据[id].道具.数据[道具id] = 临时道具
     玩家数据[id].角色.数据[类型][道具]=道具id
    else
     玩家数据[id].召唤兽:穿戴装备(玩家数据[id].道具.数据[道具id],装备格子,bb)
     玩家数据[id].道具.数据[道具id]=nil
     玩家数据[id].角色.数据[类型][道具]=nil
    end
    发送数据(连接id,3699.1)
    道具刷新(id)
    发送数据(连接id,20.1,玩家数据[id].召唤兽:取存档数据(bb))
    发送数据(连接id,28.1)
  end
end

function 道具处理类:穿戴饰品(连接id,id,数据)
  local 角色=数据.角色
  local 类型=数据.类型
  local 道具=数据.道具
  local 道具id=玩家数据[id].角色.数据[类型][道具]
  local 坐骑=数据.编号
  if self.数据[道具id].总类=="坐骑饰品" and self.数据[道具id].子类==玩家数据[id].角色.数据.坐骑列表[坐骑].模型 then
    local 物品=取物品数据(self.数据[道具id].名称)
    if 玩家数据[id].角色.数据.坐骑列表[坐骑].饰品==nil then
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品=self.数据[道具id].名称
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件=self.数据[道具id]
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品id = 玩家数据[id].角色.数据[类型][道具]
      玩家数据[id].角色.数据[类型][道具]=nil
    else
      local 道具id1=玩家数据[id].角色.数据.坐骑列表[坐骑].饰品id
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品=self.数据[道具id].名称
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件=self.数据[道具id]
      玩家数据[id].角色.数据.坐骑列表[坐骑].饰品id = 玩家数据[id].角色.数据[类型][道具]
      玩家数据[id].角色.数据[类型][道具]=nil
      玩家数据[id].角色.数据[类型][道具]=道具id1
    end
    发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.数据.坐骑)
    发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑列表)
    发送数据(连接id,3699)
    发送数据(连接id,3531)
    道具刷新(id)
  else
    常规提示(id,"#Y/该饰品不适合该坐骑哦")
  end
end

function 道具处理类:卸下饰品(连接id,id,数据)

  local 道具格子=玩家数据[id].角色:取道具格子()
  local 坐骑 = 数据.编号
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return
  else
    local 临时id=self:取新编号()
    self.数据[临时id]=玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件
    玩家数据[id].角色.数据.道具[道具格子]=临时id
    玩家数据[id].角色.数据.坐骑列表[坐骑].饰品=nil
    玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件=nil
    发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.数据.坐骑)
    发送数据(玩家数据[id].连接id,61,玩家数据[id].角色.数据.坐骑列表)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑列表)
    发送数据(连接id,3699)
    发送数据(连接id,3531)
    道具刷新(id)
  end
end

function 道具处理类:多开卸下饰品(连接id,id,数据,主id)

  local 道具格子=玩家数据[id].角色:取道具格子()
  local 坐骑 = 数据.编号
  if 道具格子==0 then
    常规提示(主id,"您的道具栏物品已经满啦")
    return
  else
    local 临时id=self:多开取新编号(id)
    玩家数据[id].道具.数据[临时id]=玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件
    玩家数据[id].角色.数据.道具[道具格子]=临时id
    玩家数据[id].角色.数据.坐骑列表[坐骑].饰品=nil
    玩家数据[id].角色.数据.坐骑列表[坐骑].饰品物件=nil
    --发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.数据.坐骑)
    发送数据(连接id,61.9,玩家数据[id].角色.数据.坐骑列表)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑)
    地图处理类:更新坐骑(id,玩家数据[id].角色.数据.坐骑列表)
    发送数据(连接id,3699.1)
    发送数据(连接id,3531.1)
    道具刷新(id)
  end
end

function 道具处理类:召唤兽可装备(i1,i2,等级,id)
  if i1 ~= nil and i1.分类 - 6 == i2 then
    if (i1.级别限制 == 0 or (i1.第二特效~=nil and i1.第二特效 == "无级别限制") or 等级 >= i1.级别限制) or 吊游定制 then
      return true
    else
      if i1.级别限制 > 等级 then
        常规提示(id,"#Y/你的召唤兽等级不足哦")
      end
    end
  end
  return false
end

function 道具处理类:取随机装备(id,等级,返回)
  -- print(id,等级,返回)
  local 临时格子=玩家数据[id].角色:取道具格子()
  if 临时格子==0 then 常规提示(id,"#Y/你身上的空间不够，无法获得装备") return end
  local 临时等级=等级
  --local 临时种类=取随机数(1,#书铁范围)
  local 临时参数=取随机数(1,#书铁范围)
  local 临时序列=临时参数
  if 临时序列==25 then
    临时序列=23
  elseif 临时序列==24 then
    临时序列=22
  elseif 临时序列==23 or 临时序列==22 then
    临时序列=21
  elseif 临时序列==21 then
    临时序列=20
  elseif 临时序列==20 or 临时序列==19 then
    临时序列=19
  end
  -- local 临时等级=玩家数据[id].道具.数据[制造格子].子类/10
  -- 计算武器值
  --   print(临时序列,玩家数据[id].道具.数据[制造格子].子类,制造格子)
  if 临时序列<=18 and 临时等级>=9 then --是武器 10-12是普通光武
    临时等级=取随机数(9,9)
  else
    if 临时等级>=9 then
      临时等级=9
    end
  end
  local 临时类型=玩家数据[id].装备.打造物品[临时序列][临时等级+1]
  if type(临时类型)=="table" then
    if 临时参数 ==23 then
     临时类型=临时类型[2]
    elseif 临时参数 ==22 then
     临时类型=临时类型[1]
    elseif 临时参数 ==20 then
     临时类型=临时类型[2]
    elseif 临时参数 ==19 then
     临时类型=临时类型[1]
    else
      临时类型=临时类型[取随机数(1,2)]
    end
  end
  local 道具 = 物品类()
  道具:置对象(临时类型)
  道具.级别限制 = 临时等级
  local dz = 玩家数据[id].装备:打造公式(临时等级*10,临时序列)
  if dz[1] ~= nil then
    道具.命中 = dz[1]
  end
  if dz[2] ~= nil then
    道具.伤害 = dz[2]
  end
  if dz[3] ~= nil then
    道具.防御 = dz[3]
  end
  if dz[4] ~= nil then
    道具.魔法 = dz[4]
  end
  if dz[5] ~= nil then
    道具.灵力 = dz[5]
  end
  if dz[6] ~= nil then
    道具.气血 = dz[6]
  end
  if dz[7] ~= nil then
    道具.敏捷 = dz[7]
  end
  if dz[8] ~= nil then
    道具.体质 = dz[8]
  end
  if dz[9] ~= nil then
    道具.力量 = dz[9]
  end
  if dz[10] ~= nil then
    道具.耐力 = dz[10]
  end
  if dz[11] ~= nil then
    道具.魔力 = dz[11]
  end
  if dz[12] ~= nil then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
  end
  if dz[13] ~= nil then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  local 道具id=self:取新编号()
  self.数据[道具id]=道具
  self.数据[道具id].级别限制=等级*10
  self.数据[道具id].鉴定=false
  self.数据[道具id].五行=取五行()
  self.数据[道具id].耐久=500
  self.数据[道具id].开运孔数 = {当前=0,上限=0}
  if 等级<=40 then
    self.数据[道具id].开运孔数 = {当前=0,上限=2}
  elseif 等级>40 and 等级<=80 then
    self.数据[道具id].开运孔数 = {当前=0,上限=3}
  elseif 等级>80 and 等级<=120 then
    self.数据[道具id].开运孔数 = {当前=0,上限=4}
  elseif 等级>120 and 等级<=160 then
    self.数据[道具id].开运孔数 = {当前=0,上限=5}
  elseif 等级>160 and 等级<=180 then
    self.数据[道具id].开运孔数 = {当前=0,上限=6}
  end
  self.数据[道具id].符石={}
  self.数据[道具id].星位={}
  self.数据[道具id].符石组合 = {符石组合 = {},门派条件 ={},部位条件={},效果说明={}}
  self.数据[道具id].熔炼效果={}
  玩家数据[id].角色.数据.道具[临时格子]=道具id
  if 返回 then
    return self.数据[道具id].名称
  else
    发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..self.数据[道具id].名称})
  end
  发送数据(玩家数据[id].连接id,3699)
  道具刷新(id)
end

function 道具处理类:取随机装备1(id,等级,名称)
  local 临时格子=玩家数据[id].角色:取道具格子()
  if 临时格子==0 then return end
  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 等级*10
  local 道具id=self:取新编号()
  self.数据[道具id]=道具
  self.数据[道具id].级别限制=等级*10
  self.数据[道具id].鉴定=false
  self.数据[道具id].五行=取五行()
  self.数据[道具id].开运孔数 = {当前=0,上限=0}
  if 等级<=40 then
    self.数据[道具id].开运孔数 = {当前=0,上限=2}
  elseif 等级>40 and 等级<=80 then
    self.数据[道具id].开运孔数 = {当前=0,上限=3}
  elseif 等级>40 and 等级<=80 then
    self.数据[道具id].开运孔数 = {当前=0,上限=3}
  elseif 等级>80 and 等级<=120 then
    self.数据[道具id].开运孔数 = {当前=0,上限=4}
  elseif 等级>120 and 等级<=160 then
    self.数据[道具id].开运孔数 = {当前=0,上限=5}
  elseif 等级>160 and 等级<=180 then
    self.数据[道具id].开运孔数 = {当前=0,上限=6}
  end
  self.数据[道具id].符石={}
  self.数据[道具id].星位={}
  self.数据[道具id].符石组合 = {符石组合 = {},门派条件 ={},部位条件={},效果说明={}}
  self.数据[道具id].熔炼效果={}
  玩家数据[id].角色.数据.道具[临时格子]=道具id
end

function 道具处理类:给予书铁(id,等级,类型)
  if 类型==nil then  --随机获取
    self.临时随机=取随机数()
    --   print(self.临时随机,11)
    if self.临时随机<=50 then
      self.书铁名称="制造指南书"
    else
      self.书铁名称="百炼精铁"
    end
    local 书铁等级=取随机数(等级[1]*10,等级[2]*10)
    local 书铁种类=取随机数(1,#书铁范围)
    书铁等级=math.floor(书铁等级/10)*10
    self:给予道具(id,self.书铁名称,书铁等级,书铁种类)
    return {self.书铁名称,书铁等级,书铁种类}
  elseif 类型=="指南书" then
    self.书铁名称="制造指南书"
    local 书铁等级=取随机数(等级[1]*10,等级[2]*10)
    local 书铁种类=取随机数(1,#书铁范围)
    书铁等级=math.floor(书铁等级/10)*10
    self:给予道具(id,self.书铁名称,书铁等级,书铁种类)
    return {self.书铁名称,书铁等级,书铁种类}
  elseif 类型=="精铁" then
    self.书铁名称="百炼精铁"
    local 书铁等级=取随机数(等级[1]*10,等级[2]*10)
    local 书铁种类=取随机数(1,#书铁范围)
    书铁等级=math.floor(书铁等级/10)*10
    self:给予道具(id,self.书铁名称,书铁等级,书铁种类)
    return {self.书铁名称,书铁等级,书铁种类}
  end
end

function 道具处理类:取武器子类(子类)
	local n = {"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
	return n[子类]
end

function 道具处理类:取武器类型(子类)
  local n = {"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
  for i=1,#n do
    if n[i]==子类 then
        return i
    end
  end
end

function 道具处理类:飞行符传送(连接id,id,内容)
  local 传送序列=内容.序列
  if self:取飞行限制(id)==false then
    local 包裹类型=玩家数据[id].道具操作.类型
    local 道具格子=玩家数据[id].道具操作.编号
    local 道具id=玩家数据[id].角色.数据[包裹类型][道具格子]
    地图处理类:跳转地图(id,self.飞行传送点[传送序列][1],self.飞行传送点[传送序列][2],self.飞行传送点[传送序列][3])
    self:删除道具(连接id,id,包裹类型,道具id,道具格子,删除数量)
    发送数据(连接id,3699)
    道具刷新(id)
  end
end

function 道具处理类:取加血道具(名称)
  local 临时名称={"包子","烤鸭","翡翠豆腐","烤肉","臭豆腐","金创药","小还丹","千年保心丹","金香玉","包子","天不老","紫石英","血色茶花","熊胆","鹿茸","六道轮回","凤凰尾","硫磺草","龙之心屑","火凤之睛","四叶花","天青地白","七叶莲","人参","山药","八角莲叶"}
  for n=1,#临时名称 do
    if 临时名称[n]==名称 then
      return true
    end
  end
  return false
end

function 道具处理类:取寿命道具(名称)
  local 临时名称={"桂花丸","长寿面","豆斋果"}
  for n=1,#临时名称 do
    if 临时名称[n]==名称 then
      return true
    end
  end
  return false
end

function 道具处理类:取寿命道具1(名称,道具id)
  local 品质=self.数据[道具id].阶品
  local 数值=0
  local 中毒=0
  if 名称=="桂花丸" then
    数值=品质*0.5
  elseif 名称=="豆斋果" then
    数值=品质*3
    中毒=3
  elseif 名称=="长寿面" then
    数值=品质*2+50
    中毒=3
  end
  return {数值=qz(数值),中毒=中毒}
end

function 道具处理类:取加魔道具(名称)
  local 临时名称={"翡翠豆腐","佛跳墙","蛇蝎美人","风水混元丹","定神香","十香返生丸","丁香水","月星子","仙狐涎","地狱灵芝","麝香","血珊瑚","餐风饮露","白露为霜","天龙水","孔雀红","紫丹罗","佛手","旋复花","龙须草","百色花","香叶","白玉骨头","鬼切草","灵脂","曼陀罗花"}
  for n=1,#临时名称 do
    if 临时名称[n]==名称 then
      return true
    end
  end
  return false
end

function 道具处理类:取加血道具1(名称,道具id)
  local 品质=self.数据[道具id].阶品
  local 数值=0
  if 名称=="包子" then
   数值=100
  elseif 名称=="烤鸭" then
   数值=品质*10+100
  elseif 名称=="烤肉" then
   数值=品质*10
  elseif 名称=="臭豆腐" then
   数值=品质*20+200
  elseif 名称=="翡翠豆腐" then
   数值=品质*15+150
  elseif 名称=="金创药" then
   数值=400
  elseif 名称=="小还丹" then
   数值=品质*8+100
  elseif 名称=="金香玉" then
   数值=品质*12+150
  elseif 名称=="千年保心丹" then
   数值=品质*4+200
  elseif 名称=="五龙丹" then
   数值=品质*3
  elseif 名称=="佛光舍利子" then
   数值=300
  elseif 名称=="九转回魂丹" then
   数值=品质*5+100
  elseif 名称=="天不老" or 名称=="紫石英" then
   数值=100
  elseif 名称=="血色茶花" or 名称=="鹿茸" then
   数值= 150
  elseif 名称=="六道轮回" or 名称=="熊胆" then
   数值= 200
  elseif 名称=="凤凰尾" or 名称=="硫磺草" then
   数值= 250
  elseif 名称=="龙之心屑" or 名称=="火凤之睛" then
   数值= 300
  elseif 名称=="四叶花" then
   数值= 40
  elseif 名称=="天青地白" then
   数值= 80
  elseif 名称=="七叶莲" then
   数值= 60
  elseif 名称=="人参" then
  数值= 80
  elseif 名称=="山药" then
  数值= 40
  elseif 名称=="八角莲叶" then
  数值= 60
  end
  return qz(数值)
end

function 道具处理类:取加伤道具1(名称,道具id)
  local 品质=self.数据[道具id].阶品
  local 数值=0
  if 名称=="水黄莲" then
   数值=20
  elseif 名称=="草果" then
   数值=10
     elseif 名称=="九香虫" then
   数值=15
     elseif 名称=="人参" then
   数值=20
     elseif 名称=="山药" then
   数值=10
     elseif 名称=="八角莲叶" then
   数值=15
     elseif 名称=="小还丹" then
   数值=品质+80
     elseif 名称=="千年保心丹" then
   数值=品质*4+100
     elseif 名称=="九转回魂丹" then
   数值=品质*5+100
     elseif 名称=="佛光舍利子" then
   数值=品质*3
  end
  return qz(数值)
end

function 道具处理类:取加魔道具1(名称,道具id)
  local 品质=self.数据[道具id].阶品
  local 数值=0
  if 名称=="佛跳墙" or 名称=="翡翠豆腐" then
   数值=品质*10+100
  elseif 名称=="定神香"  then
   数值=品质*5+50
  elseif 名称=="风水混元丹"  then
   数值=品质*3+50
  elseif 名称=="蛇蝎美人"  then
   数值=品质*5+100
  elseif 名称=="十香返生丸"  then
   数值=品质*3+50
  elseif 名称=="女儿红" or 名称=="虎骨酒"  then
   数值=20
  elseif 名称=="珍露酒"  then
   数值=品质*0.4+10
  elseif 名称=="梅花酒"  then
   数值=品质*0.6
  elseif 名称=="百味酒"  then
   数值=品质*0.7
  elseif 名称=="蛇胆酒"  then
   数值=品质*1
  elseif 名称=="醉生梦死"  then
   数值=品质*1
  elseif 名称=="丁香水" or 名称=="月星子"  then
   数值=75
  elseif 名称=="仙狐涎" or 名称=="地狱灵芝" or 名称=="麝香" or 名称=="血珊瑚" or 名称=="餐风饮露" or 名称=="白露为霜"  then
   数值=100
  elseif 名称=="天龙水" or 名称=="孔雀红"  then
   数值=150
  elseif 名称=="紫丹罗" or 名称=="佛手" or 名称=="旋复花"     then
   数值=20
  elseif 名称=="龙须草" or 名称=="百色花" or 名称=="香叶"  then
   数值=30
  elseif 名称=="白玉骨头" or 名称=="鬼切草" or 名称=="灵脂"  then
   数值=40
  elseif 名称=="曼陀罗花"  then
   数值=50
  end
  return qz(数值)
end

function 道具处理类:清空包裹(连接id,id)
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      self.数据[玩家数据[id].角色.数据.道具[n]]=nil
      玩家数据[id].角色.数据.道具[n]=nil
    end
  end
  发送数据(连接id,3699)
  道具刷新(id)
end

function 道具处理类:佩戴法宝(连接id,id,类型,编号)
  if 玩家数据[id].角色.数据.法宝[编号] == nil then
    self:索要法宝(连接id,id)
    return
  end
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id == nil or self.数据[道具id] == nil then
    self:索要法宝(连接id,id)
    return
  end
  -- if 玩家数据[id].角色.数据.等级<self.数据[道具id].特技 then
  --   常规提示(id,"#Y你当前的等级无法佩戴此类型的法宝")
  --   return
  -- end
  local 名称=self.数据[道具id].名称
  local 门派=玩家数据[id].角色.数据.门派
  if 名称=="天师符" and 门派~="方寸山" then
    常规提示(id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="织女扇" and 门派~="女儿村" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="雷兽" and 门派~="天宫" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="定风珠" and 门派~="五庄观" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="七杀" and 门派~="大唐官府" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="罗汉珠" and 门派~="化生寺" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="天师符" and 门派~="方寸山" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="金刚杵" and 门派~="普陀山" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="兽王令" and 门派~="狮驼岭" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="摄魂" and 门派~="阴曹地府" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="干将莫邪" and 门派~="大唐官府" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="慈悲" and 门派~="化生寺" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="救命毫米" and 门派~="方寸山" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="伏魔天书" and 门派~="天宫" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="普渡" and 门派~="普陀山" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="镇海珠" and 门派~="龙宫" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="奇门五行令" and 门派~="五庄观" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="失心钹" and 门派~="狮驼岭" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="五火神焰印" and 门派~="魔王寨" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="九幽" and 门派~="阴曹地府" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="月影" and 门派~="神木林" then
   常规提示(id,"#Y你的门派不允许你使用这样的法宝")
   return
  end
  for n=1,2 do
    if 玩家数据[id].角色.数据.法宝佩戴[n] ~= nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝佩戴[n]].名称 == 名称 and self.数据[道具id].特技<=60 then
        常规提示(id,"#Y此类型法宝只能同时佩戴两件")
        return
      end
    end
  end

    for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n] ~= nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝佩戴[n]].名称 == 名称 and self.数据[道具id].特技>=80 then
        常规提示(id,"#Y此类型法宝只能同时佩戴一件")
        return
      end
    end
  end

  玩家数据[id].角色.数据.法宝[编号]=nil
  local 佩戴格子=0
  for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n]==nil then 佩戴格子=n end
  end
  if 佩戴格子==0 then
    玩家数据[id].角色.数据.法宝[编号]=玩家数据[id].角色.数据.法宝佩戴[3]
    佩戴格子=3
  end
  玩家数据[id].角色.数据.法宝佩戴[佩戴格子]=道具id
  self:索要法宝(连接id,id)
end


function 道具处理类:多开佩戴法宝(连接id,id,类型,编号,主id)
  if 玩家数据[id].角色.数据.法宝[编号] == nil then
    self:多开索要法宝(连接id,id)
    return
  end
  local 道具id=玩家数据[id].角色.数据.法宝[编号]
  if 道具id == nil or 玩家数据[id].道具.数据[道具id] == nil then
    self:多开索要法宝(连接id,id)
    return
  end
  -- if 玩家数据[id].角色.数据.等级<self.数据[道具id].特技 then
  --   常规提示(id,"#Y你当前的等级无法佩戴此类型的法宝")
  --   return
  -- end
  local 名称=玩家数据[id].道具.数据[道具id].名称
  local 门派=玩家数据[id].角色.数据.门派
  if 名称=="天师符" and 门派~="方寸山" then
    常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
    return
  elseif 名称=="织女扇" and 门派~="女儿村" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="雷兽" and 门派~="天宫" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="定风珠" and 门派~="五庄观" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="七杀" and 门派~="大唐官府" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="罗汉珠" and 门派~="化生寺" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="天师符" and 门派~="方寸山" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="金刚杵" and 门派~="普陀山" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="兽王令" and 门派~="狮驼岭" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="摄魂" and 门派~="阴曹地府" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="干将莫邪" and 门派~="大唐官府" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="慈悲" and 门派~="化生寺" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="救命毫米" and 门派~="方寸山" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="伏魔天书" and 门派~="天宫" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="普渡" and 门派~="普陀山" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="镇海珠" and 门派~="龙宫" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="奇门五行令" and 门派~="五庄观" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="失心钹" and 门派~="狮驼岭" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="五火神焰印" and 门派~="魔王寨" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="九幽" and 门派~="阴曹地府" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  elseif 名称=="月影" and 门派~="神木林" then
   常规提示(主id,"#Y你的门派不允许你使用这样的法宝")
   return
  end
  for n=1,2 do
    if 玩家数据[id].角色.数据.法宝佩戴[n] ~= nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝佩戴[n]].名称 == 名称 and 玩家数据[id].道具.数据[道具id].特技<=60 then
        常规提示(主id,"#Y此类型法宝只能同时佩戴两件")
        return
      end
    end
  end

    for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n] ~= nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝佩戴[n]].名称 == 名称 and 玩家数据[id].道具.数据[道具id].特技>=80 then
        常规提示(主id,"#Y此类型法宝只能同时佩戴一件")
        return
      end
    end
  end

  玩家数据[id].角色.数据.法宝[编号]=nil
  local 佩戴格子=0
  for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n]==nil then 佩戴格子=n end
  end
  if 佩戴格子==0 then
    玩家数据[id].角色.数据.法宝[编号]=玩家数据[id].角色.数据.法宝佩戴[3]
    佩戴格子=3
  end
  玩家数据[id].角色.数据.法宝佩戴[佩戴格子]=道具id
  self:多开索要法宝(连接id,id)
end


function 角色处理类:学习强化技能(连接id,id,编号,多角色)
  if self.数据.强化技能[编号]==nil then
    常规提示(id,"你没有这样的技能",多角色)
    return
  end
  if self.数据.强化技能[编号].等级>180 then
     常规提示(id,"技能等级已满")
    return
  end

  -- if self.数据.强化技能[编号].等级>=0 then
  -- 常规提示(id,"强化技能暂时关闭",多角色)
  -- return
  -- end
  local 临时消耗=self:强化技能消耗(self.数据.强化技能[编号].等级+1,self.数据.强化技能[编号].名称)
  if self.数据.当前经验<临时消耗.经验 then
    常规提示(id,"你没有那么多的经验",多角色)
    return
  elseif 取银子(id)<临时消耗.金钱 then
    常规提示(id,"你没有那么多的银子",多角色)
    return
  end
  if self.数据.储备>=临时消耗.金钱 then
    self.数据.储备=self.数据.储备-临时消耗.金钱
    self:日志记录("学习生活技能["..self.数据.强化技能[编号].名称.."]消耗"..self.数据.储备.."点储备")
    self:银子记录()
  elseif self.数据.储备+self.数据.银子>=临时消耗.金钱 then
    临时消耗.金钱=临时消耗.金钱-self.数据.储备
    self:日志记录("学习生活技能["..self.数据.强化技能[编号].名称.."]消耗"..self.数据.储备.."点储备、"..临时消耗.金钱.."两银子")
    self:银子记录()
    self.数据.银子=self.数据.银子-临时消耗.金钱
    self.数据.储备=0
  else
    常规提示(id,"你没有那么多的储备或银子",多角色)
    return
  end
  self.数据.当前经验=self.数据.当前经验-临时消耗.经验
  self:日志记录("学习强化技能["..self.数据.强化技能[编号].名称.."]消耗"..临时消耗.经验.."点经验")
  self:银子记录()
  self.数据.强化技能[编号].等级=self.数据.强化技能[编号].等级+1
  -- 发送数据(连接id,34.1,{序列=编号,等级=self.数据.强化技能[编号].等级})
  -- 刷新货币(连接id,id)

    if 多角色 ~= nil then
    发送数据(连接id,8004,{序列=编号,等级=self.数据.强化技能[编号].等级})
    发送数据(连接id,8003,{银子=玩家数据[id].角色.数据.银子,储备=玩家数据[id].角色.数据.储备,存银=玩家数据[id].角色.数据.存银,经验=玩家数据[id].角色.数据.当前经验})
  else
    发送数据(连接id,34.1,{序列=编号,等级=self.数据.强化技能[编号].等级})
    刷新货币(连接id,id)
  end





  local 名称=self.数据.强化技能[编号].名称
  if 名称=="强化固定伤害" or 名称=="强化封印命中等级" or 名称=="强化治疗能力" or 名称=="强化法术伤害" or 名称=="抵抗封印等级" or 名称=="强化法术防御" then
    if 名称 == "强化固定伤害" then
      self.数据.固定伤害 = self.数据.固定伤害+20
    elseif 名称 == "强化封印命中等级" then
      self.数据.封印命中等级 = self.数据.封印命中等级+20
    elseif 名称 == "强化治疗能力" then
      self.数据.治疗能力 = self.数据.治疗能力+20
    elseif 名称 == "强化法术伤害" then
      self.数据.法术伤害 = self.数据.法术伤害+20
    elseif 名称 == "抵抗封印等级" then
      self.数据.抵抗封印等级 = self.数据.抵抗封印等级+20
    elseif 名称 == "强化法术防御" then
      self.数据.法术防御 = self.数据.法术防御+20
    end
  else

     if 多角色 ~= nil then
        发送数据(连接id,8004,{序列=编号,等级=self.数据.强化技能[编号].等级})
        发送数据(连接id,8003,{银子=玩家数据[id].角色.数据.银子,储备=玩家数据[id].角色.数据.储备,存银=玩家数据[id].角色.数据.存银,经验=玩家数据[id].角色.数据.当前经验})
        发送数据(连接id,8005,玩家数据[id].角色:取总数据())
      else
        发送数据(连接id,31,玩家数据[id].角色:取总数据())
      end
    self:刷新信息(1)

  end
end



function 道具处理类:升级强化技能(id, 技能名称)
  local 玩家角色 = 玩家数据[id].角色
  local 强化技能 = 玩家数据[id].角色.数据.强化技能
print(玩家角色)
print(强化技能)
  -- 检查玩家是否有此技能
  local 技能编号 = 0
  for i, skill in ipairs(强化技能) do
    if skill.名称 == 技能名称 then
      技能编号 = i
      break
    end
  end

  if 技能编号 == 0 then
    常规提示(id, "你没有这样的技能")
    return false
  end

  -- 检查玩家技能等级是否已满
  local 技能 = 强化技能[技能编号]
  if 技能.等级 >= 180 then
    常规提示(id, "技能已达到上限")
    return false
  end

  -- 增加技能等级
  技能.等级 = 技能.等级 + 1

  -- 发送更新数据给客户端
  发送数据(玩家数据[id].连接id, 34.1, {序列 = 技能编号, 等级 = 技能.等级})
  玩家角色:刷新信息()
  发送数据(玩家数据[id].连接id, 31, 玩家角色:取总数据())

  -- 提示玩家技能升级
  常规提示(id, string.format("#Y/你的#R/%s#Y/提升了一级", 技能名称))

  return true
end




function 道具处理类:使用道具(连接id,id,内容,主id)--写道具发送  --写道具右键
  local 包裹类型=内容.类型
  local 道具格子=内容.编号
  local 删除数量=1
  local 加血对象=0
  local 多开道具允许=false
  if 主id~=nil then
     提示id=主id
    else
     提示id=id
  end
  if 内容.窗口=="召唤兽" then
    if 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(提示id,"该召唤兽不存在")
      return
    else
      加血对象=内容.序列
    end
  end
  if 包裹类型~="道具" then
    if 包裹类型=="法宝"  then
       if 主id==nil then
      self:佩戴法宝(连接id,id,包裹类型,道具格子)
      else
      self:多开佩戴法宝(连接id,id,包裹类型,道具格子,主id)
        end
      return
    end
    常规提示(提示id,"只有道具栏的物品才可以使用")
    return
  elseif 道具格子==nil then
    return
  end



  local 道具id=玩家数据[id].角色.数据[包裹类型][道具格子]
  if 道具id==nil or 玩家数据[id].道具.数据[道具id]==nil then
    玩家数据[id].道具[道具格子]=nil
    if 主id~=nil then
      发送数据(连接id,3699.1)
    else
    发送数据(连接id,3699)
    道具刷新(id)
    end
    return
  end
  local 名称=玩家数据[id].道具.数据[道具id].名称
  local 道具使用=false

---多开限制道具使用

  if 主id~=nil then
     if 名称=="星辉石" or 名称=="红玛瑙" or 名称=="太阳石" or 名称=="月亮石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="光芒石" or 名称=="神秘石" or 名称=="秘制红罗羹"
        or 名称=="秘制绿罗羹"
      then
        多开道具允许=true
     end
  end


  if 主id~=nil and 多开道具允许==false then
     常规提示(提示id,"此类多开道具操作还没开放使用！")
     return
  end



  if self:取加血道具(名称) then
    if 加血对象==0 and 玩家数据[id].角色.数据.气血>=玩家数据[id].角色.数据.气血上限 and 玩家数据[id].角色.数据.气血上限>=玩家数据[id].角色.数据.最大气血 then
     常规提示(id,"您的气血已满，无法使用该物品")
     return
    elseif 加血对象~=0 and 玩家数据[id].召唤兽.数据[加血对象].气血>=玩家数据[id].召唤兽.数据[加血对象].最大气血 then
      常规提示(id,"您的这只召唤兽气血已满，无法使用该物品")
      return
    end
    道具使用=true
    local 加血数值=self:取加血道具1(名称,道具id)
    local 加伤数值=self:取加伤道具1(名称,道具id)
    local 加魔数值=self:取加魔道具1(名称,道具id)
    if 名称=="翡翠豆腐" then
      self:加血处理(连接id,id,加血数值,加血对象)
      self:加魔处理(连接id,id,加魔数值,加血对象)
    elseif 名称=="草果" or 名称=="九香虫" or 名称=="水黄莲" then
    self:加伤势处理(连接id,id,加伤数值,加血对象)
	elseif 名称=="小还丹" or 名称=="千年保心丹" or 名称=="九转回魂丹" or 名称=="佛光舍利子" or 名称=="山药" or 名称=="八角莲叶" or 名称=="人参" or 名称=="草果" or 名称=="九香虫" or 名称=="水黄莲" then
	  --伤势需要在加血前面
	  self:加伤势处理(连接id,id,加伤数值,加血对象)
	  self:加血处理(连接id,id,加血数值,加血对象)
    else
      self:加血处理(连接id,id,加血数值,加血对象)
    end
  elseif self:取加魔道具(名称) then
    if 加血对象==0 and 玩家数据[id].角色.数据.魔法>=玩家数据[id].角色.数据.最大魔法  then
     常规提示(id,"您的魔法已满，无法使用该物品")
     return
    elseif 加血对象~=0 and 玩家数据[id].召唤兽.数据[加血对象].魔法>=玩家数据[id].召唤兽.数据[加血对象].最大魔法 then
      常规提示(id,"您的这只召唤兽魔法已满，无法使用该物品")
      return
    end
    道具使用=true
    local 加血数值=self:取加血道具1(名称,道具id)
    local 加魔数值=self:取加魔道具1(名称,道具id)
    if 名称=="翡翠豆腐" then
      self:加血处理(连接id,id,加血数值,加血对象)
      self:加魔处理(连接id,id,加魔数值,加血对象)
    else
      self:加魔处理(连接id,id,加魔数值,加血对象)
    end
  elseif self:取寿命道具(名称) then
    if 加血对象==0 then
      常规提示(id,"该物品只能对召唤兽使用")
      return
    elseif 玩家数据[id].召唤兽.数据[加血对象].神兽 then
      常规提示(id,"神兽无法使用此物品")
      return
    else
      local 加血数值=self:取寿命道具1(名称,道具id)
      玩家数据[id].召唤兽:加寿命处理(加血对象,加血数值.数值,加血数值.中毒,连接id,id)
      道具使用=true
    end
  elseif 名称=="星辉石" or 名称=="红玛瑙" or 名称=="太阳石" or 名称=="月亮石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="光芒石" or 名称=="神秘石" then
  self:自动合成宝石(id,名称,道具id,包裹类型,内容.编号,主id,连接id)
  return
  elseif 名称=="鬼谷子" then  --
    if 玩家数据[id].角色.数据.阵法[self.数据[道具id].子类]==nil then
     玩家数据[id].角色.数据.阵法[self.数据[道具id].子类]=1
     常规提示(id,"恭喜你学会了如何使用#R/"..self.数据[道具id].子类)
     道具使用=true
    else
     常规提示(id,"你已经学过如何使用这个阵型了，请勿重复学习")
     return
    end

  elseif 名称=="超级合成旗" then
   发送数据(玩家数据[id].连接id,3529.4,"超级合成旗")
   玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id}
   玩家数据[id].最后操作="超级合成旗"
   return

  elseif self.数据[道具id].总类==11 and self.数据[道具id].分类==2 and 名称~="超级合成旗" then  --合成旗使用
    发送数据(玩家数据[id].连接id,3529,{地图=self.数据[道具id].地图,xy=self.数据[道具id].xy})
    玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id}
    玩家数据[id].最后操作="合成旗"
    return
  elseif 名称=="摄妖香" then  --
    if 玩家数据[id].角色:取任务(9)~=0 then
      玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(9))
    end
    任务处理类:添加摄妖香(id)
    常规提示(id,"#Y/你使用了摄妖香")
    道具使用=true
  elseif 名称=="传音纸鹤" then  --
    玩家数据[id].角色.数据.传音纸鹤=玩家数据[id].角色.数据.传音纸鹤+1
    常规提示(id,"#Y/你增加了一次纸鹤发言次数。")
    道具使用=true

  elseif 名称=="2倍经验丹" or 名称=="一倍经验丹" then
    if 玩家数据[id].角色:取任务(7755)~=0 or 玩家数据[id].角色:取任务(2)~=0 or 玩家数据[id].角色:取任务(3)~=0 then
      常规提示(id,"#Y/你有#G3倍经验丹# #G双倍时间# #G精练时间 #R都不能重复使用该物品")
    else
    任务处理类:添加一倍经验(id)
    常规提示(id,"#Y/你使用了2倍经验丹")
    道具使用=true
  end
  elseif 名称=="3倍经验丹" or 名称=="双倍经验丹" then
    if 玩家数据[id].角色:取任务(7756)~=0 or 玩家数据[id].角色:取任务(2)~=0 or 玩家数据[id].角色:取任务(3)~=0 then
      常规提示(id,"#Y/你有#G2倍经验丹# #G双倍时间# #G精练时间 #R都不能重复使用该物品")
    else
    任务处理类:添加双倍经验(id)
    常规提示(id,"#Y/你使用了3倍经验丹")
    道具使用=true
  end
  elseif 名称=="洞冥草" then
    if 玩家数据[id].角色:取任务(9)~=0 then
      玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(9))
      常规提示(id,"#Y/你解除了摄妖香的效果")
      道具使用=true
    end
  elseif 名称=="三界悬赏令" then
    if 玩家数据[id].角色:取任务(209)~=0 then
      常规提示(id,"#Y/你已经有个悬赏任务在进行了")
    else
      任务处理类:添加三界悬赏任务(id)
      常规提示(id,"#Y/你获得了三界悬赏任务")
      道具使用=true
    end
  elseif 名称=="贼王的线索" then
    if 玩家数据[id].角色:取任务(350)~=0 then
      常规提示(id,"#Y/你已经有个贼王任务在进行了")
    else
      任务处理类:添加贼王的线索任务(id)
      常规提示(id,"#Y/你获得了贼王的线索任务")
      道具使用=true
    end
  elseif 名称=="摇钱树苗" then
    if 玩家数据[id].角色:取任务(22)~=0 then
      常规提示(id,"#Y/你之前已经种下一棵摇钱树苗了")
    elseif 地图处理类.遇怪地图[玩家数据[id].角色.数据.地图数据.编号]==nil then
      常规提示(id,"#Y/本场景无法种植树苗")
    else
      local x=玩家数据[id].角色.数据.地图数据.x
      local y=玩家数据[id].角色.数据.地图数据.y
      local 通过=true
      for n, v in pairs(任务数据) do
        if 任务数据[n].类型==22 then
          if 取两点距离({x=任务数据[n].x,y=任务数据[n].y},{x=x,y=y})<=200 then
            通过=false
          end
        end
      end
      if 通过==false then
        常规提示(id,"#Y/这个区域已经有一颗摇钱树了，请换个地方再试试")
      else
        任务处理类:添加摇钱树任务(id)
        常规提示(id,"#Y/你种下了一颗摇钱树")
        道具使用=true
      end
    end
  elseif 名称=="仙玉锦囊" then
    -- 添加仙玉(1000,玩家数据[id].账号,id,"使用仙玉锦囊")
    -- self.数据[道具id].可叠加=true
    -- 道具使用=true
    常规提示(id,"#Y/暂时不可以用联系管理员")
  elseif 名称=="新仙玉锦囊" then
    添加仙玉(100,玩家数据[id].账号,id,"使用仙玉锦囊")
    self.数据[道具id].可叠加=true
    道具使用=true
  elseif 名称=="小额银票" then
    玩家数据[id].角色:添加银子(100000000,"使用小额银票",1)
    self.数据[道具id].可叠加=true
    道具使用=true
  elseif 名称 == "强化技能丹" then
  local 强化技能 = {"强化法术防御","强化气血上限","强化物理防御","强化魔法上限","抵抗封印等级","强化伤害","强化固定伤害","强化封印命中等级","强化治疗能力","强化法术伤害"}

  if self.升级强化技能(连接id,数字id)(id,强化技能[取随机数(1,#强化技能)]) then
     道具使用=true
  end

  elseif 名称=="搏一搏" then

    if 玩家数据[id].角色.数据.抽奖积分==nil then
       玩家数据[id].角色.数据.抽奖积分=0
    end
    玩家数据[id].角色.数据.抽奖积分=玩家数据[id].角色.数据.抽奖积分+1
    local aa=玩家数据[id].角色.数据.抽奖积分
    常规提示(id,"你的抽奖积分增加了1点,目前剩余积分:"..aa)
    self.数据[道具id].可叠加=true
    道具使用=true
  elseif 名称=="大额银票" then
    玩家数据[id].角色:添加银子(200000000,"使用小额银票",1)
    self.数据[道具id].可叠加=true
    道具使用=true
  elseif 名称=="特赦令牌" then
    local 名称="高级藏宝图"
    玩家数据[id].道具:给予道具(id,"高级藏宝图")
    常规提示(id,"你兑换了："..名称)
    self.数据[道具id].可叠加=true
    道具使用=true
  elseif 名称=="秘制红罗羹" then
    if 玩家数据[id].角色:取任务(10)~=0 then
      --玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(9))
      local 任务id=玩家数据[id].角色:取任务(10)
      任务数据[任务id].气血=任务数据[任务id].气血+100000
      常规提示(提示id,"#Y/你使用了秘制红罗羹")
      道具使用=true
      玩家数据[id].角色:刷新任务跟踪()
    else
      任务处理类:添加罗羹(id,100000,0)
      常规提示(提示id,"#Y/你使用了秘制红罗羹")
      道具使用=true
    end
 elseif 名称=="秘制绿罗羹" then  --
    if 玩家数据[id].角色:取任务(10)~=0 then
      --玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(9))
      local 任务id=玩家数据[id].角色:取任务(10)
      任务数据[任务id].魔法=任务数据[任务id].魔法+50000
      常规提示(提示id,"#Y/你使用了秘制绿罗羹")
      道具使用=true
      玩家数据[id].角色:刷新任务跟踪()
    else
      任务处理类:添加罗羹(id,0,50000)
      常规提示(提示id,"#Y/你使用了秘制绿罗羹")
      道具使用=true
    end
  elseif 名称=="白色导标旗" or 名称=="黄色导标旗" or 名称=="蓝色导标旗" or 名称=="绿色导标旗" or 名称=="红色导标旗"  then
    if self.数据[道具id].地图==nil then --定标
      local 地图=玩家数据[id].角色.数据.地图数据.编号
      if 地图~=1001 and 地图~=1070 and 地图~=1208 and 地图~=1092 then
        常规提示(id,"只有长安城、长寿村、傲来国、朱紫国这四个城市才可以定标哟！")
        return
      end
      local 等级=玩家数据[id].角色:取剧情技能等级("奇门遁甲")
      if 地图==1070 and 等级<1 then
        常规提示(id,"本场景定标需要您的奇门遁甲技能等级达到1级")
        return
      elseif 地图==1092 and 等级<2 then
        常规提示(id,"本场景定标需要您的奇门遁甲技能等级达到2级")
        return
      elseif 地图==1001 and 等级<1 then
        常规提示(id,"本场景定标需要您的奇门遁甲技能等级达到3级")
        return
      elseif 地图==1208 and 等级<2 then
        常规提示(id,"本场景定标需要您的奇门遁甲技能等级达到4级")
        return
      end
      self.数据[道具id].地图=玩家数据[id].角色.数据.地图数据.编号
      self.数据[道具id].x=math.floor(玩家数据[id].角色.数据.地图数据.x/20)
      self.数据[道具id].y=math.floor(玩家数据[id].角色.数据.地图数据.y/20)
      self.数据[道具id].次数=20
      发送数据(玩家数据[id].连接id,3699)
      道具刷新(id)
      常规提示(id,"定标成功！")
      return
    else
      发送数据(玩家数据[id].连接id,1501,{选项={"请送我过去","我再想想"},对话=format("请确认是否要传送至#G/%s(%s,%s)#W/处",取地图名称(self.数据[道具id].地图),self.数据[道具id].x,self.数据[道具id].y)})
      玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id}
      玩家数据[id].最后操作="导标旗"
      return
    end
  elseif 名称=="飞行符" then
    if self:取飞行限制(id)==false then
      玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id}
      玩家数据[id].最后操作="飞行符"
      发送数据(连接id,13)
      return
    end
   elseif 名称=="陨铁" then
    玩家数据[id].最后操作="幻化装备"
    发送数据(连接id,136,玩家数据[id].道具:索要道具1(id))
    return
  elseif 名称=="情怀攻略" then
  发送数据(玩家数据[id].连接id,1501,{名称="刻晴",模型="龙太子",对话=format("有什么需要帮助吗?"),选项={"我要怎么玩游戏?","仙玉,点卡,银两如何获取?","有什么玩法活动可以查看?","游戏助战如何使用?","单开或者多开能玩吗?"}})
  玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id}
  玩家数据[id].最后操作="情怀攻略"
  elseif 名称=="神兵图鉴" or 名称=="灵宝图鉴" then
    玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id,道具=玩家数据[id].道具:索要道具1(id)}
    发送数据(连接id,64,玩家数据[id].道具操作)
    return
  elseif 名称=="附魔宝珠" then
    发送数据(玩家数据[id].连接id,3548,{道具=self:索要道具1(id),宝珠数据 = 道具id})
  return


  elseif 名称=="神灵宝珠" then
    if 取随机数(1,100) <=25 then
    玩家数据[id].给予数据={类型=1,id=0,事件="道具添加装备特效"}
    发送数据(玩家数据[id].连接id,3507,{道具=self:索要道具1(id),名称="奖励发放员",类型="NPC",等级="无"})
    else
    常规提示(id,"#Y你此次添加特效失败了！")
    end
    道具使用 = true

  elseif 名称=="仙灵宝珠" then
     if 取随机数(1,100) <=25 then
    玩家数据[id].给予数据={类型=1,id=0,事件="道具添加装备特效1"}
    发送数据(玩家数据[id].连接id,3507,{道具=self:索要道具1(id),名称="奖励发放员",类型="NPC",等级="无"})
    else
    常规提示(id,"#Y你此次添加特效失败了！")
    end
    道具使用 = true


  elseif 名称=="碎星锤" or 名称 == "超级碎星锤" then
    玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id,道具=玩家数据[id].道具:索要道具1(id)}
    发送数据(连接id,84.1,玩家数据[id].道具操作)
    return
  elseif 名称=="灵箓" then
    玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id,道具=玩家数据[id].道具:索要道具1(id)}
    发送数据(连接id,84.2,玩家数据[id].道具操作)
    return
    elseif 名称=="甲鱼" or 名称=="草鱼" then
    玩家数据[id].角色.数据.钓鱼积分=玩家数据[id].角色.数据.钓鱼积分+10
    常规提示(id,"#Y获得钓鱼积分10点#72")
    道具使用 = true
    elseif 名称=="娃娃鱼"  then
    玩家数据[id].角色.数据.钓鱼积分=玩家数据[id].角色.数据.钓鱼积分+20
    常规提示(id,"#Y获得钓鱼积分20点#72")
    道具使用 = true
    elseif 名称=="大闸蟹" then
    玩家数据[id].角色.数据.钓鱼积分=玩家数据[id].角色.数据.钓鱼积分+15
    常规提示(id,"#Y获得钓鱼积分15点#72")
    道具使用 = true
  elseif 名称=="鱼竿" then
     if 玩家数据[id].队伍~=0 and 玩家数据[id].队长==false then
       常规提示(id,"#y/请联系队长使用")
       return
     end
     if 玩家数据[id].角色.数据.地图数据.编号~=1092 then
         常规提示(id,"#y/请前往傲来国垂钓")
      return
    end
       if math.floor(玩家数据[id].角色.数据.地图数据.x/20)<117 or math.floor(玩家数据[id].角色.数据.地图数据.x/20)>166 or math.floor(玩家数据[id].角色.数据.地图数据.y/20)<141 or math.floor(玩家数据[id].角色.数据.地图数据.y/20)>144 then
         常规提示(id,"#y/这里不是钓鱼的位置，渔夫的边上垂钓")
          return
        end
      if 玩家数据[id].队伍~=0 then
        local llheg
         for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
            ll=队伍数据[玩家数据[id].队伍].成员数据[n]
          end
             发送数据(玩家数据[ll].连接id,143)  -- 211
        发送数据(玩家数据[id].连接id,143)
        return
      else
      发送数据(连接id,143)    --他这个脚本是复制风云里面的 拿过来没有修改  我刚才修改了 就可以使用了
        return
      end
  elseif 名称=="10级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(10,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="20级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(20,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="30级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(30,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="50级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(50,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
      elseif 名称=="40级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(40,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="1号助战装备礼包" then
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 道具格子<=6 then
  常规提示(id,"您的道具栏物品已经满啦")
  return 0
  end
  礼包奖励类:指定助战全套装备(id,60,"无级别限制",id,1)
  道具使用=true
  elseif 名称=="2号助战装备礼包" then
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 道具格子<=6 then
  常规提示(id,"您的道具栏物品已经满啦")
  return 0
  end
  礼包奖励类:指定助战全套装备(id,60,"无级别限制",id,2)
  道具使用=true
  elseif 名称=="3号助战装备礼包" then
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 道具格子<=6 then
  常规提示(id,"您的道具栏物品已经满啦")
  return 0
  end
  礼包奖励类:指定助战全套装备(id,60,"无级别限制",id,3)
  道具使用=true
  elseif 名称=="4号助战装备礼包" then
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 道具格子<=6 then
  常规提示(id,"您的道具栏物品已经满啦")
  return 0
  end
  礼包奖励类:指定助战全套装备(id,60,"无级别限制",id,4)
  道具使用=true

  elseif 名称=="种族坐骑礼包" then
    if 玩家数据[id].角色:增加坐骑1(id) then
      self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
      玩家数据[id].角色.数据.道具[内容.编号]=nil
      玩家数据[id].道具.数据[self.临时id] = nil
      道具刷新(id)
    end
    return
  elseif 名称=="祥瑞坐骑礼包" then
    if 玩家数据[id].角色:增加坐骑2(id) then
      self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
      玩家数据[id].角色.数据.道具[内容.编号]=nil
      玩家数据[id].道具.数据[self.临时id] = nil
      道具刷新(id)
    end
    return
      elseif 名称=="高级祥瑞坐骑礼包" then
    if 玩家数据[id].角色:增加坐骑3(id) then
      self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
      玩家数据[id].角色.数据.道具[内容.编号]=nil
      玩家数据[id].道具.数据[self.临时id] = nil
      道具刷新(id)
    end
    return


      elseif 名称=="60级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(60,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    广播消息({内容=format("这人开挂→#G%s#Y打开了一个60级装备礼包",玩家数据[id].角色.数据.名称),频道="xt"})
    return

 elseif 名称=="高级兽决礼包" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
   -- local 随机数=取随机数(1,5)
    local 名称="高级魔兽要诀"
     玩家数据[id].道具:给予道具(id,名称,1)
  -- 玩家数据[id].道具:给予道具(id,名称,取随机数(1,5))
    道具使用=true

  广播消息({内容=format("#G%s#Y打开高级兽决礼包，获得高级魔兽要诀一本#80",玩家数据[id].角色.数据.名称),频道="xt"})
   -- return
    elseif 名称=="善恶点化石礼包" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=3 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
   -- local 随机数=取随机数(1,5)


     玩家数据[id].道具:给予道具(id,"善恶点化石",1)
     玩家数据[id].道具:给予道具(id,"善恶点化石",1)
     玩家数据[id].道具:给予道具(id,"善恶点化石",1)

    道具使用=true

  --广播消息({内容=format("#G%s#Y打开高级兽决礼包，获得高级魔兽要诀一本#80",玩家数据[id].角色.数据.名称),频道="xt"})
elseif 名称=="善财童子·玉" then
    if #玩家数据[id].召唤兽.数据 >= 14 then  --大于数量不操作
      发送数据(玩家数据[id].连接id, 7, "#y/您当前无法携带更多的召唤兽了")
      return 0
    else
      玩家数据[id].召唤兽:添加召唤兽("善财童子·玉",true,false,true,0,nil,nil,nil,false)

      --玩家数据[id].召唤兽:添加召唤兽1("超级神虎☆",true,nil,true,0,nil,nil,{"高级连击","高级必杀","高级偷袭","高级夜战","高级吸血","高级神佑复生"})
      广播消息({内容=format("#G%s#Y打开累充宝宝礼包，获得10技能战宠一只！#80",玩家数据[id].角色.数据.名称),频道="xt"})
    end
    道具使用=true
elseif 名称=="善财童子·鼓" then
    if #玩家数据[id].召唤兽.数据 >= 14 then  --大于数量不操作
      发送数据(玩家数据[id].连接id, 7, "#y/您当前无法携带更多的召唤兽了")
      return 0
    else
      玩家数据[id].召唤兽:添加召唤兽("善财童子·鼓",true,false,true,0,nil,nil,nil,false)
      --玩家数据[id].召唤兽:添加召唤兽1("超级神虎☆",true,nil,true,0,nil,nil,{"高级连击","高级必杀","高级偷袭","高级夜战","高级吸血","高级神佑复生"})
      广播消息({内容=format("#G%s#Y打开累充宝宝礼包，获得10技能战宠一只！#80",玩家数据[id].角色.数据.名称),频道="xt"})
    end
    道具使用=true

elseif 名称=="特殊兽决礼包" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    local 名称="特殊魔兽要诀"
     玩家数据[id].道具:给予道具(id,名称,1)
    道具使用=true

  广播消息({内容=format("#G%s#Y打开特殊兽决礼包，获得特殊魔兽要诀一本#80",玩家数据[id].角色.数据.名称),频道="xt"})
   -- return


   elseif 名称=="70级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(70,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    广播消息({内容=format("这人开挂→#G%s#Y打开了一个70级装备礼包",玩家数据[id].角色.数据.名称),频道="xt"})
    return
      elseif 名称=="80级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(80,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    广播消息({内容=format("这人开挂→#G%s#Y打开了一个80级装备礼包",玩家数据[id].角色.数据.名称),频道="xt"})
    return
      elseif 名称=="90级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(90,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    广播消息({内容=format("这人开挂→#G%s#Y打开了一个90级装备礼包",玩家数据[id].角色.数据.名称),频道="xt"})
    return
  elseif 名称=="100级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(100,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="120级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(120,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="130级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(130,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="130级补偿装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(130,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="140级高级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买高级装备礼包(140,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="130级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(130,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="140级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end

    玩家数据[id].角色:购买装备礼包(140,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="150级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(150,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="160级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    玩家数据[id].角色:购买装备礼包(160,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="160级高级装备礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end

    玩家数据[id].角色:购买高级装备礼包(160,id)
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="80级灵饰礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    礼包奖励类:全套灵饰(id,80,"无级别限制")
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="100级灵饰礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    礼包奖励类:全套灵饰(id,100,"无级别限制")
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="60级灵饰礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    礼包奖励类:全套灵饰(id,60,"无级别限制")
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="月卡" then
    if 玩家数据[id].角色.数据.月卡激活 == nil then
       玩家数据[id].角色.数据.月卡激活 = 0
       玩家数据[id].角色.数据.月卡领取 = 0
     end
     if  玩家数据[id].角色.数据.飞行时间限制==nil then
         玩家数据[id].角色.数据.飞行时间限制=0
     end
         玩家数据[id].角色.数据.月卡激活=1
         玩家数据[id].角色.数据.月卡领取 = 玩家数据[id].角色.数据.月卡领取 + 30
         玩家数据[id].角色.数据.飞行时间限制=玩家数据[id].角色.数据.飞行时间限制+2592000

         常规提示(id,"恭喜您成功激活了月卡")











     常规提示(id,"月卡激活成功")
     self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
    elseif 名称=="神秘钥匙" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=5 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
        if 玩家数据[id].角色.数据.等级<109 then
      常规提示(id,"现在不能开启礼包,你等级未达到109级")
      return 0
    end
    玩家数据[id].道具:给予书铁(id,{14,14},"指南书")
    玩家数据[id].道具:给予书铁(id,{14,14},"精铁")
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return

  -- elseif 名称=="神秘钥匙" and 吊游定制 then
  --    local 道具格子=玩家数据[id].角色:取道具格子2()
  --    if 道具格子<=1 then
  --      常规提示(id,"您的道具栏物品已经满啦")
  --      return 0
  --     elseif 神秘宝箱[id] ~= nil then
  --      常规提示(id,"请等待当前结束后再次使用")
  --      return 0
  --    end
  --    商店处理类:设置钥匙神秘宝箱(id)
  --    发送数据(连接id,85,{道具=神秘宝箱[id]})
  --    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  --    if 玩家数据[id].道具.数据[self.临时id].数量>1 then
  --      玩家数据[id].道具.数据[self.临时id].数量=玩家数据[id].道具.数据[self.临时id].数量-1
  --    else
  --      玩家数据[id].角色.数据.道具[内容.编号]=nil
  --      玩家数据[id].道具.数据[self.临时id] = nil
  --    end
  --    道具刷新(id)
  --    return
  -- elseif 名称=="神秘钥匙" and 吊游定制 then
  --   local 道具格子=玩家数据[id].角色:取道具格子2()
  --   if 道具格子<=1 then
  --     常规提示(id,"您的道具栏物品已经满啦")
  --     return 0
  --   elseif 神秘宝箱[id] ~= nil then
  --     常规提示(id,"请等待当前结束后再次使用")
  --     return 0
  --   end
  --   商店处理类:设置老唐宝箱(id)
  --   发送数据(连接id,85,{道具=神秘宝箱[id]})
  --   self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  --   if 玩家数据[id].道具.数据[self.临时id].数量>1 then
  --     玩家数据[id].道具.数据[self.临时id].数量=玩家数据[id].道具.数据[self.临时id].数量-1
  --   else
  --     玩家数据[id].角色.数据.道具[内容.编号]=nil
  --     玩家数据[id].道具.数据[self.临时id] = nil
  --   end
  --   道具刷新(id)
  --   return
  elseif 名称=="1级宝石礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    self:给予道具(id,"太阳石",1)
    self:给予道具(id,"光芒石",1)
    self:给予道具(id,"红玛瑙",1)
    self:给予道具(id,"月亮石",1)
    self:给予道具(id,"黑宝石",1)
    self:给予道具(id,"舍利子",1)
    道具使用=true
  elseif 名称=="5级宝石礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    self:给予道具(id,"太阳石",5)
    self:给予道具(id,"光芒石",5)
    self:给予道具(id,"红玛瑙",5)
    self:给予道具(id,"月亮石",5)
    self:给予道具(id,"黑宝石",5)
    self:给予道具(id,"舍利子",5)
    道具使用=true
  elseif 名称=="7级宝石礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    self:给予道具(id,"太阳石",7)
    self:给予道具(id,"光芒石",7)
    self:给予道具(id,"红玛瑙",7)
    self:给予道具(id,"月亮石",7)
    self:给予道具(id,"黑宝石",7)
    self:给予道具(id,"舍利子",7)
    道具使用=true
  elseif 名称=="10级宝石礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=6 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    self:给予道具(id,"太阳石",10)
    self:给予道具(id,"光芒石",10)
    self:给予道具(id,"红玛瑙",10)
    self:给予道具(id,"月亮石",10)
    self:给予道具(id,"黑宝石",10)
    self:给予道具(id,"舍利子",10)
    道具使用=true

-- local 随机数=取随机数(1,100)
--   if 名称=="红玛瑙" or 名称=="太阳石" or 名称=="舍利子" or 名称=="黑宝石" or 名称=="月亮石" or 名称=="光芒石" then
--     玩家数据[id].道具:给予道具(id,名称,取随机数(4,8))
  elseif 名称=="随机宝石一" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    local 随机数=取随机数(1,5)
    local 名称=取宝石()
     玩家数据[id].道具:给予道具(id,名称,取随机数(1,5))
  -- 玩家数据[id].道具:给予道具(id,名称,取随机数(1,5))
    道具使用=true
 elseif 名称=="随机宝石二" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    local 随机数=取随机数(4,8)
    local 名称=取宝石()
     玩家数据[id].道具:给予道具(id,名称,取随机数(4,8))
    道具使用=true
 elseif 名称=="随机宝石三" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    local 随机数=取随机数(5,10)
    local 名称=取宝石()
     玩家数据[id].道具:给予道具(id,名称,取随机数(5,10))
    道具使用=true
    elseif 名称=="随机宝石四" then
    self.数据[道具id].可叠加=true
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<=1 then
      常规提示(id,"您的道具栏物品已经满啦")
      return 0
    end
    local 随机数=取随机数(8,12)
    local 名称=取宝石()
     玩家数据[id].道具:给予道具(id,名称,取随机数(8,12))
    道具使用=true
  elseif 名称=="跨服专属礼包" then
    local 道具格子=玩家数据[id].角色:取道具格子2()
    if 道具格子<2 then
      常规提示(id,"您的道具栏没有足够的空间")
      return 0
    end
    local 临时格子=玩家数据[id].角色:取道具格子()
    local 临时道具编号 = self:取新编号()
    self.数据[临时道具编号]=物品类()
    玩家数据[id].角色.数据.道具[临时格子]=临时道具编号
    local 临时名称=绑定等级物品()[26][1]
    local 物品数据=取物品数据(临时名称)
    玩家数据[id].道具.数据[临时道具编号]:置对象(临时名称)
    玩家数据[id].道具.数据[临时道具编号].级别限制 = 5
    玩家数据[id].道具.数据[临时道具编号].耐久=500
    玩家数据[id].道具.数据[临时道具编号]["防御"] =100
    玩家数据[id].道具.数据[临时道具编号]["气血"] =50000
    玩家数据[id].道具.数据[临时道具编号].不可交易=true
    临时格子=玩家数据[id].角色:取道具格子()
    临时名称 = 绑定等级物品()[22][17]
    临时道具编号 = self:取新编号()
    self.数据[临时道具编号]=物品类()
    玩家数据[id].角色.数据.道具[临时格子]=临时道具编号
    玩家数据[id].道具.数据[临时道具编号]:置对象(临时名称)
    玩家数据[id].道具.数据[临时道具编号].级别限制 = 160
    玩家数据[id].道具.数据[临时道具编号].鉴定=false
    玩家数据[id].道具.数据[临时道具编号].五行=取五行()
    玩家数据[id].道具.数据[临时道具编号].耐久=500
    玩家数据[id].道具.数据[临时道具编号].识别码=id.."_"..os.time().."_"..取随机数(1,999).."_"..id
    玩家数据[id].道具.数据[临时道具编号].专用=id
    玩家数据[id].道具.数据[临时道具编号].不可交易=true
    玩家数据[id].道具.数据[临时道具编号].特效 = "无级别限制"
    玩家数据[id].道具.数据[临时道具编号].防御 = 192
    玩家数据[id].道具.数据[临时道具编号].气血 = 25000
    常规提示(id,"您获得了专属道具")
    self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
    玩家数据[id].角色.数据.道具[内容.编号]=nil
    玩家数据[id].道具.数据[self.临时id] = nil
    道具刷新(id)
    return
  elseif 名称=="元宵" then
    self:元宵使用(连接id,id,内容)
    return
  elseif 名称=="炼兽真经" then
    self.数据[道具id].可叠加=true
    self:炼兽真经使用(连接id,id,内容)
    return
  elseif 名称=="易经丹" then
    self:易经丹使用(连接id,id,内容)
    self.数据[道具id].可叠加=true
    return
  elseif 名称=="清灵净瓶" then
    self:清灵净瓶处理(连接id,id,内容)
    return
  elseif 名称=="初级清灵仙露" or 名称=="中级清灵仙露" or 名称=="高级清灵仙露" then
    self:清灵仙露处理(连接id,id,内容)
    return
  elseif 名称=="玉葫灵髓" then
    self:玉葫灵髓使用(连接id,id,内容)
    return
  -- elseif 名称=="一级未激活符石" or 名称=="二级未激活符石" or 名称=="三级未激活符石" then
  --   self:符石激活处理(连接id,id,内容)
  --   return
  elseif 名称=="未激活的符石" then
    self:激活符石对话(id,道具id)
    return
  elseif 名称=="未激活的星石" then
    self:激活符石对话(id,道具id)
    return
  elseif 名称=="空白强化符" then
    if 玩家数据[id].角色.数据.师门技能 ~= nil then
        for n=1,#玩家数据[id].角色.数据.师门技能 do
            for i=1,#玩家数据[id].角色.数据.师门技能[n].包含技能 do
              if 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "嗜血" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "轻如鸿毛"
               or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "拈花妙指" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "盘丝舞"
                or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "一气化三清" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "浩然正气"
                 or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "龙附"  or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "神兵护法"
                  or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "魔王护持" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "莲华妙法"
                   or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "神力无穷" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "尸气漫天"
                   or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "神木呓语" or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "穿云破空"
                   or 玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称 == "元阳护体" then
                    if 玩家数据[id].角色.数据.师门技能[n].包含技能[i].等级 >=35 then
                      if 玩家数据[id].角色.数据.活力 >= 玩家数据[id].角色.数据.师门技能[n].包含技能[i].等级 then
                          玩家数据[id].角色.数据.活力 = 玩家数据[id].角色.数据.活力 - 玩家数据[id].角色.数据.师门技能[n].包含技能[i].等级
                          self:给予道具(id,"强化符",1,玩家数据[id].角色.数据.师门技能[n].包含技能[i].等级,玩家数据[id].角色.数据.师门技能[n].包含技能[i].名称)
                          道具使用 = true
                      else
                        常规提示(id,"#Y/你当前活力不足,无法使用该物品")
                        return
                      end
                    else
                      常规提示(id,"#Y/你还没学会制作强化符,无法使用该物品")
                      return
                end
            end
          end
        end
    else
        常规提示(id,"#Y/你还没门派,无法使用该物品")
    end
  elseif 名称=="强化符" then
    玩家数据[id].道具操作={类型=包裹类型,编号=内容.编号,id=道具id,道具=玩家数据[id].道具:索要道具1(id)}
    发送数据(连接id,65,玩家数据[id].道具操作)
    return
  elseif 名称=="天眼通符" then
    if 玩家数据[id].角色:取任务(8)~=0 then
     --  if 神树抽奖 then
        地图处理类:跳转地图(id,任务数据[玩家数据[id].角色:取任务(8)].地图编号,任务数据[玩家数据[id].角色:取任务(8)].x,任务数据[玩家数据[id].角色:取任务(8)].y)
    --   else
    --     任务数据[玩家数据[id].角色:取任务(8)].显示x= 任务数据[玩家数据[id].角色:取任务(8)].x
      --   任务数据[玩家数据[id].角色:取任务(8)].显示y= 任务数据[玩家数据[id].角色:取任务(8)].y
    --   end
      道具使用=true
      常规提示(id,"#Y/你使用了天眼通符")
      玩家数据[id].角色:刷新任务跟踪()
    end
  elseif 名称=="海马" then
    玩家数据[id].角色.数据.体力 = 玩家数据[id].角色.数据.体力 + 150
    玩家数据[id].角色.数据.活力 = 玩家数据[id].角色.数据.活力 + 150
    if 玩家数据[id].角色.数据.体力 > 玩家数据[id].角色.数据.最大体力 then
        玩家数据[id].角色.数据.体力 = 玩家数据[id].角色.数据.最大体力
    end
    if 玩家数据[id].角色.数据.活力 > 玩家数据[id].角色.数据.最大活力 then
        玩家数据[id].角色.数据.活力 = 玩家数据[id].角色.数据.最大活力
    end
    常规提示(id,"#Y/你使用海马增加了150点体力和活力")
    道具使用 = true
  elseif 名称=="怪物卡片" then
    local 剧情等级=玩家数据[id].角色:取剧情技能等级("变化之术")
    if 剧情等级 <= 3 then
        if 剧情等级 + 1 <self.数据[道具id].等级 then
          常规提示(id,"#Y/你的变化之术等级太低了")
          return
        end
    elseif 剧情等级 == 4 then
        if 剧情等级 + 2 <self.数据[道具id].等级 then
          常规提示(id,"#Y/你的变化之术等级太低了")
          return
        end
    elseif 剧情等级 >= 5 then
        if 剧情等级 + 10 <self.数据[道具id].等级 then
          常规提示(id,"#Y/你的变化之术等级太低了")
          return
        end
    end
    if 玩家数据[id].角色:取任务(1)~=0 then
      任务数据[玩家数据[id].角色:取任务(1)]=nil
      玩家数据[id].角色:取消任务(1)
    end
    玩家数据[id].角色.数据.变身数据=self.数据[道具id].造型
    玩家数据[id].角色.数据.变异=false
    if 取随机数()<=5 then
        玩家数据[id].角色.数据.变异=true
        常规提示(id,"恭喜你！卡片产生了变异效果")
    end
    道具使用=true
    玩家数据[id].角色:刷新信息()
    发送数据(连接id,37,{变身数据=玩家数据[id].角色.数据.变身数据,变异=玩家数据[id].角色.数据.变异})
    常规提示(id,"你使用了怪物卡片")
    发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
    发送数据(玩家数据[id].连接id,12)
    任务处理类:添加变身(id,剧情等级)
    地图处理类:更改模型(id,{[1]=玩家数据[id].角色.数据.变身数据,[2]=玩家数据[id].角色.数据.变异},1)
  elseif 名称=="藏宝图" or 名称=="高级藏宝图" then
    if self:取队长权限(id)==false then
      常规提示(id,"#Y/你不是队长，无法使用此道具！")
      return
    elseif self.数据[道具id].地图编号~=玩家数据[id].角色.数据.地图数据.编号 then
      常规提示(id,"#Y/这里没有宝藏哟！")
      return
    elseif math.abs(self.数据[道具id].x-玩家数据[id].角色.数据.地图数据.x/20)>2 and math.abs(self.数据[道具id].y-玩家数据[id].角色.数据.地图数据.y/20)>2 then
      常规提示(id,"#Y/这里没有宝藏哟！")
      return
    end
    道具使用=true
    if 名称=="高级藏宝图" then
      self:高级藏宝图处理(id)
    else
      self:低级藏宝图处理(id)
    end
  elseif 名称=="九转金丹" then
    if 玩家数据[id].角色.数据.修炼[玩家数据[id].角色.数据.修炼.当前][1]>=玩家数据[id].角色.数据.修炼[玩家数据[id].角色.数据.修炼.当前][3] then
      常规提示(id,"#Y/你的此项修炼已经达上限")
      return
    end
    玩家数据[id].角色:添加人物修炼经验(id,math.floor(self.数据[道具id].阶品*0.5))
    道具使用=true
  elseif 名称=="修炼果" then
    if 玩家数据[id].角色.数据.bb修炼[玩家数据[id].角色.数据.bb修炼.当前][1]>=玩家数据[id].角色.数据.bb修炼[玩家数据[id].角色.数据.bb修炼.当前][3] then
      常规提示(id,"#Y/你的此项修炼已经达上限")
      return
    end
    玩家数据[id].角色:添加bb修炼经验(id,150)
    道具使用=true
  elseif 名称=="帮派银票" then
    常规提示(id,"#Y你拥有的银票，存有#R"..self.数据[道具id].初始金额.."#Y两银子#G\n#Y你需要赚到#R"..self.数据[道具id].完成金额.."#Y才可以完成任务")
    return
  elseif 名称=="月华露" then
    if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
    end
    if 玩家数据[id].召唤兽.数据[内容.序列].等级 >= 玩家数据[id].角色.数据.等级 + 10 then
      常规提示(id,"该召唤兽已超过人物等级10级，无法使用该道具")
      return
    end
      local 临时等级=玩家数据[id].召唤兽.数据[内容.序列].等级
      if 临时等级==0 then
        临时等级=1
      end
      玩家数据[id].召唤兽:添加经验(连接id,id,内容.序列,self.数据[道具id].阶品*50*临时等级)
      道具使用=true
   elseif 名称=="宠物饰品通用丹" then
          if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
            常规提示(id,"请先选中一只召唤兽")
            return
          -- elseif 玩家数据[id].召唤兽.数据[内容.序列].种类=="神兽" then
          -- 常规提示(id,"神兽不能使用")
          -- return
          elseif 玩家数据[id].召唤兽.数据[内容.序列].饰品=="宠物饰品通用丹" then
          常规提示(id,"已经携带过饰品了!")
          return
          elseif 玩家数据[id].召唤兽.数据[内容.序列].等级>=0 then
           玩家数据[id].召唤兽.数据[内容.序列].饰品=self.数据[道具id].名称
           玩家数据[id].召唤兽:刷新信息(内容.序列)
           常规提示(id,"佩戴召唤兽饰品成功！")
           道具使用=true
         end

  elseif 名称=="坐骑内丹" then
    if 内容.窗口~="坐骑" or 玩家数据[id].角色.数据.坐骑列表[内容.序列]==nil then
      常规提示(id,"请先选中一只坐骑")
      return
    else
      local 数量 = 取随机数(1,3)
      local 坐骑技能 = {}
      local ms = {"反震","吸血","反击","连击","飞行","感知","再生","冥思","慧根","必杀","幸运","神迹","招架","永恒","偷袭","毒","驱鬼","鬼魂术","魔之心","神佑复生","精神集中","法术连击","法术暴击","法术波动","土属性吸收","火属性吸收","水属性吸收"}
      for i=1,数量 do
        local 随机技能 = 取随机数(1,#ms)
          table.insert(坐骑技能,ms[随机技能])
          table.remove(ms,随机技能)
      end
      玩家数据[id].角色.数据.坐骑列表[内容.序列].技能 = 坐骑技能
      玩家数据[id].角色.数据.坐骑列表[内容.序列].技能等级={}
      玩家数据[id].角色.数据.坐骑列表[内容.序列].技能点 = math.ceil(玩家数据[id].角色.数据.坐骑列表[内容.序列].等级/20)
      常规提示(id,"你的坐骑重新领悟了技能，并且技能点已经重置")
      发送数据(玩家数据[id].连接id,61.1,{编号=内容.序列,数据=玩家数据[id].角色.数据.坐骑列表[内容.序列]})
      道具使用=true
    end
  elseif 名称=="翡翠琵琶" then
    if 玩家数据[id].角色.数据.炼丹灵气 == nil then
      玩家数据[id].角色.数据.炼丹灵气 = 5000
    else
      玩家数据[id].角色.数据.炼丹灵气 = 玩家数据[id].角色.数据.炼丹灵气 + 5000
    end
    常规提示(id,"你使用了翡翠琵琶,当前可用炼丹灵气为#R".. 玩家数据[id].角色.数据.炼丹灵气 .."#Y点")
    道具使用=true
  elseif 名称=="镇妖拘魂铃" then
    self:刷新铃铛奖励(id)
    发送数据(连接id,3900,{物品id=道具id,铃铛个数=self.数据[道具id].数量,奖励数据=铃铛记录[id]})
	  return

  elseif 名称=="商品符" then
    if 文韵墨香==nil or 文韵墨香[id]==nil or 文韵墨香[id].烧香==false then
       常规提示(id,"你还没有领取烧香任务,道具已经摧毁")
       道具使用=true
    else
       if 玩家数据[id].角色.数据.地图数据.编号~=1004  then
          常规提示(id,"你还没有到达大雁塔")
          return
       else
          道具使用=true
          if 玩家数据[id].队伍==0 then
             id组={id}
             else
             id组 = 取id组(id)
          end

           for n=1,#id组 do
             任务处理类:完成文韵墨香烧符(id组[n])
           end
       end
    end



  elseif 名称=="金砂丹" or 名称=="银砂丹" or 名称 == "铜砂丹" then
    local 银子 = 0
    if 名称=="金砂丹" then
      银子 = 1000000
    elseif 名称=="银砂丹" then
      银子 = 100000
    elseif 名称=="铜砂丹" then
      银子 = 10000
    end
    玩家数据[id].角色:添加银子(银子,"造化丹",1)
    道具使用=true
  elseif 名称=="初级神魂丹" or 名称=="中级神魂丹" or 名称=="高级神魂丹" then
    if self.数据[道具id].数量 == nil then
      self.数据[道具id].数量 = 1
    end
    if self.数据[道具id].数量 < 99 then
      常规提示(id,"请在助战装备栏里面使用!")
      return
    end
    if 名称=="初级神魂丹" then
      玩家数据[id].道具:给予道具(id,"中级神魂丹",1)
      常规提示(id,"#Y/你获得了中级神魂丹")
    elseif 名称=="中级神魂丹" then
      玩家数据[id].道具:给予道具(id,"高级神魂丹",1)
      常规提示(id,"#Y/你获得了高级神魂丹")
    elseif 名称=="高级神魂丹" then
      玩家数据[id].道具:给予道具(id,"顶级神魂丹",1)
      常规提示(id,"#Y/你获得了顶级神魂丹")
    end
    删除数量=99
    道具使用=true
  elseif self.数据[道具id].总类 == 200 then
      if 玩家数据[id].角色.数据.地图数据.编号  == 200000+id then
        local tx = {x=62,y=64,名称=名称,方向=1}
        for i=1,#房屋数据 do
          if 房屋数据[i].ID == id then
          table.insert(房屋数据[i].室内装饰,tx)
          发送数据(玩家数据[id].连接id,1027,{tx})
          end
        end
        道具使用=true
      else
        常规提示(id,"这不是你的房子或者不是室内")
        return
      end
    elseif 名称=="如意符" then
      if 玩家数据[id].角色.数据.地图数据.编号  == 200000+id or 玩家数据[id].角色.数据.地图数据.编号  == 100000+id then
        发送数据(玩家数据[id].连接id,1028)
        道具使用=true
      else
        常规提示(id,"这不是你的房子或者不是室内和庭院")
        return
      end
    elseif self.数据[道具id].总类 == 202 then
      if 玩家数据[id].角色.数据.地图数据.编号  == 100000+id then
        local tx = {x=62,y=64,名称=名称,方向=1}
        for i=1,#房屋数据 do
          if 房屋数据[i].ID == id then
          table.insert(房屋数据[i].庭院装饰,tx)
          发送数据(玩家数据[id].连接id,1027,{tx})
          end
        end
        道具使用=true
      else
        常规提示(id,"这不是你的房子或者不是庭院")
        return
      end
  elseif 名称=="神兜兜" or 名称=="神兜兜(专属)" then
       if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil or 玩家数据[id].召唤兽.数据[内容.序列].种类~="神兽" then
       常规提示(id,"请选择一只神兽")
       return
       elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数==nil then
        玩家数据[id].召唤兽.数据[内容.序列].增加技能次数=0
       end
      if 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=0 then
        删除数量=30
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=1 then
        删除数量=40
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=2 then
        删除数量=50
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=3 then
        删除数量=60
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=4 then
        删除数量=70
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=5 then
        删除数量=80
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=6 then
        删除数量=90
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=7 then
        删除数量=100
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=8 then
        删除数量=110
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=9 then
        删除数量=120
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=10 then
        删除数量=130
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=11 then
        删除数量=140
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=12 then
        删除数量=150
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=13 then
        删除数量=160
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=14 then
        删除数量=170
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=15 then
        删除数量=180
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=16 then
        删除数量=190
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=17 then
        删除数量=200
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=18 then
        删除数量=210
      elseif 玩家数据[id].召唤兽.数据[内容.序列].增加技能次数 <=19 then
        删除数量=220

      else
        常规提示(id,"该召唤兽使用增加技能次数已达上限")
        return
      end
      if self.数据[道具id].数量 < 删除数量 then
      常规提示(id,"您的神兜兜数量不足"..删除数量.."无法为该召唤兽增加技能")
      return
      end
      local 增加技能= 取低级要诀()

      玩家数据[id].召唤兽.数据[内容.序列].增加技能次数=玩家数据[id].召唤兽.数据[内容.序列].增加技能次数+1
      if #玩家数据[id].召唤兽.数据[内容.序列].技能>=24 then
         常规提示(id,"宠物技能大于24个")
      return
      end
      玩家数据[id].召唤兽.数据[内容.序列].技能[#玩家数据[id].召唤兽.数据[内容.序列].技能+1]=增加技能
      常规提示(id,"恭喜您您的召唤兽学会了#R/"..增加技能)
      道具使用=true

    end
  if 道具使用 then
    self:删除道具(连接id,id,包裹类型,道具id,道具格子,删除数量,主id)
    if 主id~=nil then
      多开道具刷新(id,连接id)
      else
    道具刷新(id)
    end
  else
  	常规提示(提示id,"您无法使用这样的道具")
  end
end


 function 道具处理类:删除道具(连接id,id,包裹类型,道具id,道具格子,删除数量,主id)
  if 删除数量==nil then 删除数量=1 end
  if 玩家数据[id].道具.数据[道具id].数量==nil and 玩家数据[id].道具.数据[道具id].名称~="怪物卡片" then
    玩家数据[id].道具.数据[道具id]=nil
    玩家数据[id].角色.数据[包裹类型][道具格子]=nil
  elseif 玩家数据[id].道具.数据[道具id].名称=="怪物卡片" then
    玩家数据[id].道具.数据[道具id].次数=玩家数据[id].道具.数据[道具id].次数-1
    if  玩家数据[id].道具.数据[道具id].次数<=0 then
      玩家数据[id].道具.数据[道具id]=nil
      玩家数据[id].角色.数据[包裹类型][道具格子]=nil
    end
  else
    玩家数据[id].道具.数据[道具id].数量=玩家数据[id].道具.数据[道具id].数量-删除数量
    if 玩家数据[id].道具.数据[道具id].数量<=0 then
      玩家数据[id].道具.数据[道具id]=nil
      玩家数据[id].角色.数据[包裹类型][道具格子]=nil
    end
  end
end

-- function 道具处理类:符石激活处理(连接id,id,内容)
--   self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
--   local 道具格子=玩家数据[id].角色:取道具格子()
--   if 道具格子==0 then
--     常规提示(id,"您的道具栏物品已经满啦")
--     return
--   end
--   local 激活几率 = 0
--   local 激活体力 = 0
--   local 激活金钱 = 0
--   local 激活经验 = 0
--   if 玩家数据[id].道具.数据[self.临时id].名称 == "一级未激活符石" then
--       激活几率 = 100
--       激活体力 = 100
--       激活金钱 = 50000
--       激活经验 = 50000
--   elseif 玩家数据[id].道具.数据[self.临时id].名称 == "二级未激活符石" then
--       激活几率 = 90
--       激活体力 = 150
--       激活金钱 = 100000
--       激活经验 = 100000
--   elseif 玩家数据[id].道具.数据[self.临时id].名称 == "三级未激活符石" then
--       激活几率 = 80
--       激活体力 = 150
--       激活金钱 = 150000
--       激活经验 = 150000
--   end
--   if 激活金钱 > 取银子(id) then
--       常规提示(id,"您没有那么多的银子")
--       return
--   elseif 激活体力 > 玩家数据[id].角色.数据.体力 then
--       常规提示(id,"您当前没那么的体力")
--       return
--   elseif 激活经验 > 玩家数据[id].角色.数据.当前经验 then
--       常规提示(id,"您当前没那么的经验")
--       return
--   end
--   if 取随机数() <= 激活几率 then
--       玩家数据[id].角色:扣除银子(激活金钱,0,0,"符石激活",1)
--       玩家数据[id].角色.数据.体力=玩家数据[id].角色.数据.体力-激活体力
--       玩家数据[id].角色.数据.当前经验=玩家数据[id].角色.数据.当前经验-激活经验
--       local 符石名称 = 取符石(玩家数据[id].道具.数据[self.临时id].名称)
--       self:给予道具(id,符石名称,1,55)
--       玩家数据[id].道具.数据[self.临时id]=nil
--       道具刷新(id)
--       常规提示(id,"符石激活成功，获得了#R"..符石名称.."#Y符石，消耗了#R"..激活金钱.."两银子、"..激活体力.."点体力、"..激活经验.."点经验。")
--   end
-- end

function 道具处理类:激活符石对话(id,道具id)
  if self.数据[道具id]~=nil and  self.数据[道具id].名称=="未激活的符石" then
    玩家数据[id].激活符石 = 道具id
    local 消耗数据 = 激活符石消耗(self.数据[道具id].子类)
    local 对话="#W/你现在要消耗"..消耗数据.体力.."点体力"..消耗数据.经验.."点经验来激活这块符石么。#Y/(激活后为专用，无法转移给他人。)"
    local xx={"确定","取消"}
      玩家数据[id].最后对话={}
    玩家数据[id].最后对话.名称="激活符石"
    玩家数据[id].最后对话.模型=玩家数据[id].角色.模型
    发送数据(玩家数据[id].连接id,1501,{名称="激活符石",模型=玩家数据[id].角色.模型,对话=对话,选项=xx})
  elseif self.数据[道具id]~=nil and self.数据[道具id].名称=="未激活的星石" then
    玩家数据[id].激活符石 = 道具id
    local 消耗数据 = 激活符石消耗(4)
    local 对话="#W/你现在要消耗"..消耗数据.体力.."点体力"..消耗数据.经验.."点经验来激活这块符石么。#Y/(激活后为专用，无法转移给他人。)"
    local xx={"确定","取消"}
      玩家数据[id].最后对话={}
    玩家数据[id].最后对话.名称="激活符石"
    玩家数据[id].最后对话.模型=玩家数据[id].角色.模型
    发送数据(玩家数据[id].连接id,1501,{名称="激活符石",模型=玩家数据[id].角色.模型,对话=对话,选项=xx})
  end
end

function 道具处理类:激活符石(id)
  local 道具id = 玩家数据[id].激活符石
  if self.数据[道具id]~=nil and  self.数据[道具id].名称=="未激活的符石" then
    local 消耗数据 = 激活符石消耗(self.数据[道具id].子类)
    if 玩家数据[id].角色.数据.体力 < 消耗数据.体力 then
      常规提示(id,"体力不足，无法激活符石。")
        return
    end
    if 玩家数据[id].角色:扣除经验(消耗数据.经验,nil,1) then
      玩家数据[id].角色:扣除体力(消耗数据.体力,nil,1)
      self.数据[道具id].分类 = 88
      self.数据[道具id].名称 = self.数据[道具id].符石名称
      self.数据[道具id].不可交易 = true
      添加最后对话(id,"你消耗了"..消耗数据.体力.."体力"..消耗数据.经验.."经验,将"..self.数据[道具id].名称.."成功激活.这块符石可以镶嵌在已经开运过的装备上#50。")
      道具刷新(id)
      return
    else
      常规提示(id,"经验不足，无法激活符石。")
        return
    end
  elseif self.数据[道具id]~=nil and  self.数据[道具id].名称=="未激活的星石" then
    local 消耗数据 = 激活符石消耗(4)
    if 玩家数据[id].角色.数据.体力 < 消耗数据.体力 then
      常规提示(id,"体力不足，无法激活符石。")
        return
    end
    if 玩家数据[id].角色:扣除经验(消耗数据.经验,nil,1) then
      玩家数据[id].角色:扣除体力(消耗数据.体力,nil,1)
      self.数据[道具id].分类 = 91
      self.数据[道具id].不可交易 = true
      if self.数据[道具id].子类 == 1 then
        self.数据[道具id].名称 = "云荒"
      elseif self.数据[道具id].子类 == 2 then
        self.数据[道具id].名称 = "暮霭"
      elseif self.数据[道具id].子类 == 3 then
        self.数据[道具id].名称 = "落日"
      elseif self.数据[道具id].子类 == 4 then
        self.数据[道具id].名称 = "晓天"
      elseif self.数据[道具id].子类 == 5 then
        self.数据[道具id].名称 = "林海"
      elseif self.数据[道具id].子类 == 6 then
        self.数据[道具id].名称 = "流霞"
      else
        self.数据[道具id].名称 = "云荒"
      end
      添加最后对话(id,"你消耗了"..消耗数据.体力.."体力"..消耗数据.经验.."经验,将"..self.数据[道具id].名称.."成功激活.这块符石可以镶嵌在已经开运过的装备上#50。")
      道具刷新(id)
      return
    else
      常规提示(id,"经验不足，无法激活符石。")
        return
    end
  end
end

function 道具处理类:元宵使用(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 元宵使用限制 = 20
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
  elseif 玩家数据[id].道具.数据[self.临时id] == nil or 玩家数据[id].道具.数据[self.临时id].名称 ~= "元宵" then
      常规提示(id,"你的召唤兽无法使用该道具")
      return
  end
  if  玩家数据[id].召唤兽.数据[内容.序列].元宵 == nil then
     玩家数据[id].召唤兽.数据[内容.序列].元宵 = {}
  end
  local 食材 = 玩家数据[id].道具.数据[self.临时id].食材
  local 资质 = "攻击资质"
  if 食材 == "桂花酒酿" then
    资质 = "防御资质"
  elseif 食材 == "细磨豆沙" then
    资质 = "速度资质"
  elseif 食材 == "蜜糖腰果" then
    资质 = "躲闪资质"
  elseif 食材 == "山楂拔丝" then
    资质 = "体力资质"
  elseif 食材 == "滑玉莲蓉" then
    资质 = "法力资质"
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] == nil then
    玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] = 1
  else
    if 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] >= 元宵使用限制 then
      常规提示(id,"该召唤兽可食用"..食材.."元宵数量已经达到了上限！")
      return
    end
    玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] = 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] + 1
  end
  local 上限 = 玩家数据[id].召唤兽.数据[内容.序列][资质] *0.005
  local 下限 = 玩家数据[id].召唤兽.数据[内容.序列][资质] *0.002
  local 增加数值 = math.floor(取随机数(下限,上限))
  玩家数据[id].召唤兽.数据[内容.序列][资质] = 玩家数据[id].召唤兽.数据[内容.序列][资质] + 增加数值
  玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
  if 玩家数据[id].道具.数据[self.临时id].数量 <= 0 then
    玩家数据[id].道具.数据[self.临时id].数量 = nil
    玩家数据[id].角色.数据.道具[内容.编号] = nil
  end
  常规提示(id,"恭喜你的召唤兽#R"..资质.."#W提升了#R"..增加数值.."#W点")
  常规提示(id,"食用元宵成功,该召唤兽还可以食用#R"..食材.."#W元宵"..(元宵使用限制-玩家数据[id].召唤兽.数据[内容.序列].元宵[食材]).."个")
  玩家数据[id].召唤兽:刷新信息(内容.序列)
  道具刷新(id)
end

function 道具处理类:元宵使用1(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 元宵使用限制 = 20
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
  elseif 玩家数据[id].道具.数据[self.临时id] == nil or 玩家数据[id].道具.数据[self.临时id].名称 ~= "元宵" then
      常规提示(id,"你的召唤兽无法使用该道具")
      return
  end
  if  玩家数据[id].召唤兽.数据[内容.序列].元宵 == nil then
     玩家数据[id].召唤兽.数据[内容.序列].元宵 = {}
  end
  local 食材 = 玩家数据[id].道具.数据[self.临时id].食材
  local 资质 = "攻击资质"
  if 食材 == "桂花酒酿" then
    资质 = "防御资质"
  elseif 食材 == "细磨豆沙" then
    资质 = "速度资质"
  elseif 食材 == "蜜糖腰果" then
    资质 = "躲闪资质"
  elseif 食材 == "山楂拔丝" then
    资质 = "体力资质"
  elseif 食材 == "滑玉莲蓉" then
    资质 = "法力资质"
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] == nil then
    玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] = 1
  else
    if 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] >= 元宵使用限制 then
      常规提示(id,"该召唤兽可食用"..食材.."元宵数量已经达到了上限！")
      return
    end
  if 玩家数据[id].角色:扣除积分(5000,0,0,"比武积分扣炼兽",1) == false then
     常规提示(id,"你的比武积分#G不够5000点#,无法继续提升")
   return
  end
    玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] = 玩家数据[id].召唤兽.数据[内容.序列].元宵[食材] + 1
  end
  local 上限 = 玩家数据[id].召唤兽.数据[内容.序列][资质] *0.005
  local 下限 = 玩家数据[id].召唤兽.数据[内容.序列][资质] *0.002
  local 增加数值 = math.floor(取随机数(下限,上限))
  玩家数据[id].召唤兽.数据[内容.序列][资质] = 玩家数据[id].召唤兽.数据[内容.序列][资质] + 增加数值
    if 玩家数据[id].道具.数据[self.临时id].数量 == nil then
    玩家数据[id].道具.数据[self.临时id].数量 = 1
  end
  玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
  if 玩家数据[id].道具.数据[self.临时id].数量 <= 0 then
    玩家数据[id].道具.数据[self.临时id].数量 = nil
    玩家数据[id].角色.数据.道具[内容.编号] = nil
  end
  常规提示(id,"恭喜你的召唤兽#R"..资质.."#W提升了#R"..增加数值.."#W点")
  常规提示(id,"食用元宵成功,该召唤兽还可以食用#R"..食材.."#W元宵"..(元宵使用限制-玩家数据[id].召唤兽.数据[内容.序列].元宵[食材]).."个")
  玩家数据[id].召唤兽:刷新信息(内容.序列)
  道具刷新(id)
end

function 道具处理类:炼兽真经使用(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 炼兽真经使用限制=10
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
    常规提示(id,"请先选中一只召唤兽")
    return
  elseif 玩家数据[id].道具.数据[self.临时id] == nil or 玩家数据[id].道具.数据[self.临时id].名称 ~= "炼兽真经" then
    常规提示(id,"你的召唤兽无法使用该道具")
    return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经~=nil and 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经>=炼兽真经使用限制 then
    常规提示(id,"该召唤兽已经无法再使用炼兽真经")
    return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].成长>=1.45 then
    常规提示(id,"该召唤兽成长已经够高了,已经无法再使用炼兽真经")
    return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经 == nil then
     玩家数据[id].召唤兽.数据[内容.序列].炼兽真经 = 0
  end
  玩家数据[id].召唤兽.数据[内容.序列].炼兽真经=玩家数据[id].召唤兽.数据[内容.序列].炼兽真经+1
  玩家数据[id].召唤兽.数据[内容.序列].成长=玩家数据[id].召唤兽.数据[内容.序列].成长+0.02
  if 玩家数据[id].召唤兽.数据[内容.序列].成长>=1.35 then
    玩家数据[id].召唤兽.数据[内容.序列].成长=1.35
    常规提示(id,"#Y使用炼兽真经召唤兽成长最多只能到1.35")
  end
  if 玩家数据[id].道具.数据[self.临时id].数量 == nil then
    玩家数据[id].道具.数据[self.临时id].数量 = 1
  end
  玩家数据[id].道具.数据[self.临时id].数量=玩家数据[id].道具.数据[self.临时id].数量-1
  if 玩家数据[id].道具.数据[self.临时id].数量 <= 0 then
    玩家数据[id].道具.数据[self.临时id] = nil
    玩家数据[id].角色.数据.道具[内容.编号] = nil
  end
  常规提示(id,"#Y恭喜你的召唤兽成长提升了#R0.02#Y点")
  常规提示(id,"#Y炼兽真经使用成长,该召唤兽还可以使用#R"..(炼兽真经使用限制-玩家数据[id].召唤兽.数据[内容.序列].炼兽真经).."#Y个炼兽真经")
  玩家数据[id].召唤兽:刷新信息(内容.序列)
  道具刷新(id)
end

function 道具处理类:炼兽真经使用1(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 炼兽真经使用限制=10
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
    常规提示(id,"请先选中一只召唤兽")
    return
  elseif 玩家数据[id].道具.数据[self.临时id] == nil or 玩家数据[id].道具.数据[self.临时id].名称 ~= "炼兽真经" then
    常规提示(id,"你的召唤兽无法使用该道具")
    return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经~=nil and 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经>=炼兽真经使用限制 then
    常规提示(id,"该召唤兽已经无法再使用炼兽真经")
    return
  end
  if 玩家数据[id].角色:扣除积分(10000,0,0,"比武积分扣炼兽",1) == false then
     常规提示(id,"你的比武积分#G不够10000点#,无法继续提升")
   return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].炼兽真经 == nil then
     玩家数据[id].召唤兽.数据[内容.序列].炼兽真经 = 0
  end
  玩家数据[id].召唤兽.数据[内容.序列].炼兽真经=玩家数据[id].召唤兽.数据[内容.序列].炼兽真经+1
  玩家数据[id].召唤兽.数据[内容.序列].成长=玩家数据[id].召唤兽.数据[内容.序列].成长+0.02
  if 玩家数据[id].道具.数据[self.临时id].数量 == nil then
    玩家数据[id].道具.数据[self.临时id].数量 = 1
  end
  玩家数据[id].道具.数据[self.临时id].数量=玩家数据[id].道具.数据[self.临时id].数量-1
  if 玩家数据[id].道具.数据[self.临时id].数量 <= 0 then
    玩家数据[id].道具.数据[self.临时id] = nil
    玩家数据[id].角色.数据.道具[内容.编号] = nil
  end
  常规提示(id,"#Y恭喜你的召唤兽成长提升了#R0.02#Y点")
  常规提示(id,"#Y炼兽真经使用成长,该召唤兽还可以使用#R"..(炼兽真经使用限制-玩家数据[id].召唤兽.数据[内容.序列].炼兽真经).."#Y个炼兽真经")
  玩家数据[id].召唤兽:刷新信息(内容.序列)
  道具刷新(id)
end

function 道具处理类:易经丹使用(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].种类 == "野怪" then
      常规提示(id,"该物品不能对野怪使用")
      return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].灵性 < 50 and (玩家数据[id].召唤兽.数据[内容.序列].参战等级 >= 0 or 玩家数据[id].召唤兽.数据[内容.序列].种类 == "神兽") then
      玩家数据[id].召唤兽.数据[内容.序列].灵性 = 玩家数据[id].召唤兽.数据[内容.序列].灵性 + 10
      常规提示(id,"你的召唤兽"..玩家数据[id].召唤兽.数据[内容.序列].名称.."服用了一个易经丹,神清气爽,仙气缭绕,修为增加！")
      if 玩家数据[id].召唤兽.数据[内容.序列].灵性 >= 50 then
          常规提示(id,"你的召唤兽"..玩家数据[id].召唤兽.数据[内容.序列].模型.."已经达到了进阶的条件,可以进阶改变造型了")
      end
      if 玩家数据[id].道具.数据[self.临时id].数量==nil then
          玩家数据[id].道具.数据[self.临时id].数量=1
      end
      if 玩家数据[id].道具.数据[self.临时id].数量 == 1 then
          玩家数据[id].道具.数据[self.临时id] = nil
      else
          玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
      end
      道具刷新(id)
  elseif 玩家数据[id].召唤兽.数据[内容.序列].灵性 > 79 then
      local 随机特性={"复仇","自恋","灵刃","灵法","预知","灵动","瞬击","瞬法","抗法","抗物","阳护","识物","护佑","洞察","弑神","御风","顺势","怒吼","乖巧","力破","识药","争锋","灵断"}
      local a =随机特性[取随机数(1,#随机特性)]
      玩家数据[id].召唤兽.数据[内容.序列].特性 = a
      玩家数据[id].召唤兽.数据[内容.序列].特性几率 = 取随机数(1,5)
      常规提示(id,"你的召唤兽#R/"..玩家数据[id].召唤兽.数据[内容.序列].名称.."#Y/领悟了#R/"..a)
      if 玩家数据[id].道具.数据[self.临时id].数量==nil then
          玩家数据[id].道具.数据[self.临时id].数量=1
      end
      if 玩家数据[id].道具.数据[self.临时id].数量 == 1 then
          玩家数据[id].道具.数据[self.临时id] = nil
          玩家数据[id].角色.数据.道具[内容.编号] = nil
      else
          玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
      end
      玩家数据[id].召唤兽:刷新信息(内容.序列)
      道具刷新(id)
  else
      常规提示(id,"召唤兽灵性没有达到80,无法使用该物品，请用清灵净瓶提升灵性！")
      玩家数据[id].召唤兽:刷新信息(内容.序列)
  end
  发送数据(玩家数据[self.数字id].连接id,16.1,玩家数据[id].召唤兽.数据[内容.序列])
end

function 道具处理类:清灵净瓶处理(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 道具格子=玩家数据[id].角色:取道具格子()
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return
  end
  if 玩家数据[id].道具.数据[self.临时id].数量 == 1 then
     玩家数据[id].道具.数据[self.临时id] = nil
  else
    玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
  end
  local 随机瓶子={"高级清灵仙露","中级清灵仙露","初级清灵仙露"}
  local a =随机瓶子[取随机数(1,#随机瓶子)]
  self:给予道具(id,a)
  道具刷新(id)
end

function 道具处理类:清灵仙露处理(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].种类 == "野怪" then
      常规提示(id,"该物品不能对野怪使用")
      return
  end
  local 临时灵性
  if 玩家数据[id].道具.数据[self.临时id].灵气 == nil then
      临时灵性 = 1
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].灵性 > 100 then
      常规提示(id,"该召唤兽已无法再使用清灵仙露")
      return
  end

  if 玩家数据[id].召唤兽.数据[内容.序列].灵性 >= 50 and 玩家数据[id].召唤兽.数据[内容.序列].仙露上限 >0  then
      if 玩家数据[id].道具.数据[self.临时id].灵气 == 8 then
        if  取随机数(1,100) < 20 then
          临时灵性 = 取随机数(8,10)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 0 then
          临时灵性 = 1
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 1 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(1,2)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 2 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(2,3)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 3 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(3,4)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 4 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(4,5)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 5 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(5,6)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 6 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(6,7)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 7 then
        if  取随机数() < 70 then
          临时灵性 = 取随机数(7,9)
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      elseif 玩家数据[id].道具.数据[self.临时id].灵气 == 10 then
        if  取随机数() < 100 then
          临时灵性 = 10
        else
          临时灵性 = 玩家数据[id].道具.数据[self.临时id].灵气
        end
      end

      if 玩家数据[id].道具.数据[self.临时id].名称 ~= "高级清灵仙露" and 玩家数据[id].道具.数据[self.临时id].名称 ~= "中级清灵仙露" and 玩家数据[id].道具.数据[self.临时id].名称 ~= "初级清灵仙露" then
        常规提示(id,"抱歉,请正确使用清灵仙露!")
        return
      end
      玩家数据[id].召唤兽.数据[内容.序列].潜力=玩家数据[id].召唤兽.数据[内容.序列].潜力+临时灵性*2
      玩家数据[id].召唤兽.数据[内容.序列].灵性 = 玩家数据[id].召唤兽.数据[内容.序列].灵性 + 临时灵性
      常规提示(id,"你的召唤兽"..玩家数据[id].召唤兽.数据[内容.序列].名称.."增加了#R/"..临时灵性.."#Y/点灵性")
      if 玩家数据[id].召唤兽.数据[内容.序列].灵性 >= 110 then
        玩家数据[id].召唤兽.数据[内容.序列].进阶属性.力量 = 取随机数(30,100)
        玩家数据[id].召唤兽.数据[内容.序列].进阶属性.魔力 = 取随机数(30,100)
        玩家数据[id].召唤兽.数据[内容.序列].进阶属性.体质 = 取随机数(30,100)
        玩家数据[id].召唤兽.数据[内容.序列].进阶属性.敏捷 = 取随机数(30,100)
        玩家数据[id].召唤兽.数据[内容.序列].进阶属性.耐力 = 取随机数(30,100)
        常规提示(id,"你的召唤兽"..玩家数据[id].召唤兽.数据[内容.序列].名称.."的进阶属性增加了")
        广播消息({内容=format("可喜可贺#23#G%s#Y运气爆棚，历尽千辛万苦终于使召唤兽完美进阶！大家一起恭喜他吧",玩家数据[id].角色.数据.名称),频道="xt"})

        local 列表=读入文件("进阶列表.txt")
        local 账号=玩家数据[id].角色.数据.账号
        local id123=玩家数据[id].角色.数据.数字id


        --列表=列表..format(时间转换(os.time()).."账号%s,角色id%s",玩家数据[id].角色.数据.名称.."的召唤兽-")..玩家数据[id].召唤兽.数据[内容.序列].名称..'-进阶成功\n'
        --列表=列表..format(时间转换(os.time())).." 账号："..账号.." ID："..id.." 召唤兽名称："..bbmz.."\n"
        列表=列表..format(时间转换(os.time())).." 账号："..账号.." ID："..id123.."\n"
        写出文件("进阶列表.txt",列表)

      end
      if 玩家数据[id].召唤兽.数据[内容.序列].灵性 == 100 then
        玩家数据[id].召唤兽.数据[内容.序列].仙露上限 = 玩家数据[id].召唤兽.数据[内容.序列].仙露上限 + 1
        玩家数据[id].召唤兽:刷新信息(内容.序列)
        道具刷新(id)
        常规提示(id,"恭喜您，召唤兽灵性=100，服用仙露次数+1")
      end
      if 玩家数据[id].道具.数据[self.临时id].数量 == 1 or 玩家数据[id].道具.数据[self.临时id].数量 == nil then
        玩家数据[id].道具.数据[self.临时id] = nil
      else
        玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
      end
       玩家数据[id].召唤兽.数据[内容.序列].仙露上限 = 玩家数据[id].召唤兽.数据[内容.序列].仙露上限 - 1
      玩家数据[id].召唤兽:刷新信息(内容.序列)
      道具刷新(id)

  else
      if 玩家数据[id].召唤兽.数据[内容.序列].仙露上限 == 0 then
          常规提示(id,"该召唤兽已使用7瓶清灵仙露!")
      else
          常规提示(id,"你的召唤兽灵性必须达到50以上才能使用清灵仙露!")
      end
      玩家数据[id].召唤兽:刷新信息(内容.序列)
  end
  发送数据(玩家数据[self.数字id].连接id,16.1,玩家数据[id].召唤兽.数据[内容.序列])
  if 玩家数据[id].召唤兽.数据[内容.序列].灵性 >= 50  and 玩家数据[id].召唤兽.数据[内容.序列].灵性 < 100 then
  常规提示(id,"该召唤兽还可以服用#G"..玩家数据[id].召唤兽.数据[内容.序列].仙露上限.."#Y瓶清灵仙露!灵性超出100后将无法服用！")
  elseif 玩家数据[id].召唤兽.数据[内容.序列].灵性 > 100 and 玩家数据[id].召唤兽.数据[内容.序列].灵性 < 110 then
   常规提示(id,"该召唤兽因灵性>100已无法再使用清灵仙露")
  elseif 玩家数据[id].召唤兽.数据[内容.序列].灵性 >= 110 then
    常规提示(id,"恭喜您，您的召唤兽进阶成功！")
end
end

function 道具处理类:玉葫灵髓使用(连接id,id,内容)
  self.临时id = 玩家数据[id].角色.数据.道具[内容.编号]
  local 超过灵性 = 玩家数据[id].召唤兽.数据[内容.序列].灵性-50
  if 内容.窗口~="召唤兽" or 玩家数据[id].召唤兽.数据[内容.序列]==nil then
      常规提示(id,"请先选中一只召唤兽")
      return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].种类 == "野怪" then
      常规提示(id,"该物品不能对野怪使用")
      return
  end
  if 玩家数据[id].召唤兽.数据[内容.序列].灵性 > 50 and (玩家数据[id].召唤兽.数据[内容.序列].参战等级 >= 0 or 玩家数据[id].召唤兽.数据[内容.序列].种类 == "神兽") then

      if 玩家数据[id].召唤兽.数据[内容.序列].种类=="神兽" then
          玩家数据[id].召唤兽.数据[内容.序列].体质=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].魔力=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].力量=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].耐力=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].敏捷=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].潜力=玩家数据[id].召唤兽.数据[内容.序列].等级*5
      elseif 玩家数据[id].召唤兽.数据[内容.序列].种类=="变异" then
          玩家数据[id].召唤兽.数据[内容.序列].体质=玩家数据[id].召唤兽.数据[内容.序列].等级+15
          玩家数据[id].召唤兽.数据[内容.序列].魔力=玩家数据[id].召唤兽.数据[内容.序列].等级+15
          玩家数据[id].召唤兽.数据[内容.序列].力量=玩家数据[id].召唤兽.数据[内容.序列].等级+15
          玩家数据[id].召唤兽.数据[内容.序列].耐力=玩家数据[id].召唤兽.数据[内容.序列].等级+15
          玩家数据[id].召唤兽.数据[内容.序列].敏捷=玩家数据[id].召唤兽.数据[内容.序列].等级+15
          玩家数据[id].召唤兽.数据[内容.序列].潜力=玩家数据[id].召唤兽.数据[内容.序列].等级*5
      elseif 玩家数据[id].召唤兽.数据[内容.序列].种类=="宝宝" then
          玩家数据[id].召唤兽.数据[内容.序列].体质=玩家数据[id].召唤兽.数据[内容.序列].等级+10
          玩家数据[id].召唤兽.数据[内容.序列].魔力=玩家数据[id].召唤兽.数据[内容.序列].等级+10
          玩家数据[id].召唤兽.数据[内容.序列].力量=玩家数据[id].召唤兽.数据[内容.序列].等级+10
          玩家数据[id].召唤兽.数据[内容.序列].耐力=玩家数据[id].召唤兽.数据[内容.序列].等级+10
          玩家数据[id].召唤兽.数据[内容.序列].敏捷=玩家数据[id].召唤兽.数据[内容.序列].等级+10
          玩家数据[id].召唤兽.数据[内容.序列].潜力=玩家数据[id].召唤兽.数据[内容.序列].等级*5
      elseif 玩家数据[id].召唤兽.数据[内容.序列].种类=="孩子" then
          玩家数据[id].召唤兽.数据[内容.序列].体质=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].魔力=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].力量=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].耐力=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].敏捷=玩家数据[id].召唤兽.数据[内容.序列].等级+20
          玩家数据[id].召唤兽.数据[内容.序列].潜力=玩家数据[id].召唤兽.数据[内容.序列].等级*5
      end
      玩家数据[id].召唤兽:刷新信息(内容.序列)
      常规提示(id,"该召唤兽被重置了属性点！")
      玩家数据[id].召唤兽.数据[内容.序列].潜力 = 玩家数据[id].召唤兽.数据[内容.序列].潜力+100
      玩家数据[id].召唤兽.数据[内容.序列].灵性 = 50
      玩家数据[id].召唤兽.数据[内容.序列].进阶属性.力量 = 0
      玩家数据[id].召唤兽.数据[内容.序列].进阶属性.魔力 = 0
      玩家数据[id].召唤兽.数据[内容.序列].进阶属性.体质 = 0
      玩家数据[id].召唤兽.数据[内容.序列].进阶属性.敏捷 = 0
      玩家数据[id].召唤兽.数据[内容.序列].进阶属性.耐力 = 0
      玩家数据[id].召唤兽.数据[内容.序列].特性 = "无"
      玩家数据[id].召唤兽.数据[内容.序列].仙露上限 = 7
      常规提示(id,"你的召唤兽#R/"..玩家数据[id].召唤兽.数据[内容.序列].名称.."#Y/服用一个玉葫灵髓后,灵性已回归原始！")
      if 玩家数据[id].道具.数据[self.临时id].数量 == 1 then
         玩家数据[id].道具.数据[self.临时id] = nil
      else
        玩家数据[id].道具.数据[self.临时id].数量 = 玩家数据[id].道具.数据[self.临时id].数量 - 1
      end
      玩家数据[id].召唤兽:刷新信息(内容.序列)
      道具刷新(id)
  else
      常规提示(id,"召唤兽的灵性必须大于50才能使用玉葫灵髓")
      玩家数据[id].召唤兽:刷新信息(内容.序列)
  end
end

function 道具处理类:取队长权限(id)
  if 玩家数据[id].队伍==0 then
    return true
  elseif 玩家数据[id].队伍~=0 and 玩家数据[id].队长 then
    return true
  else
    return false
  end
end

function 道具处理类:加血处理(连接id,id,加血数值,加血对象,动画)
  if 动画==nil then
    动画="加血"
  end
  if 加血对象==0 then
    玩家数据[id].角色.数据.气血=玩家数据[id].角色.数据.气血+加血数值
    if 玩家数据[id].角色.数据.气血>玩家数据[id].角色.数据.气血上限 then
      玩家数据[id].角色.数据.气血=玩家数据[id].角色.数据.气血上限
    end
    发送数据(连接id,36,{动画=动画})
    发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
    地图处理类:加入动画(id,玩家数据[id].角色.数据.地图数据.编号,玩家数据[id].角色.数据.地图数据.x,玩家数据[id].角色.数据.地图数据.y,动画)
  else
    玩家数据[id].召唤兽:加血处理(加血对象,加血数值,连接id,id)
  end
end

function 道具处理类:加伤势处理(连接id,id,加血数值,加血对象,动画)
  if 动画==nil then
    动画="加血"
  end
  if 加血对象==0 then
    玩家数据[id].角色.数据.气血上限=玩家数据[id].角色.数据.气血上限+加血数值
    if 玩家数据[id].角色.数据.气血上限>玩家数据[id].角色.数据.最大气血 then
      玩家数据[id].角色.数据.气血上限=玩家数据[id].角色.数据.最大气血
    end
    发送数据(连接id,36,{动画=动画})
    发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
    地图处理类:加入动画(id,玩家数据[id].角色.数据.地图数据.编号,玩家数据[id].角色.数据.地图数据.x,玩家数据[id].角色.数据.地图数据.y,动画)
  else
	return
  end
end

function 道具处理类:加魔处理(连接id,id,加血数值,加血对象)
  if 加血对象==0 then
    玩家数据[id].角色.数据.魔法=玩家数据[id].角色.数据.魔法+加血数值
    if 玩家数据[id].角色.数据.魔法>玩家数据[id].角色.数据.最大魔法 then
      玩家数据[id].角色.数据.魔法=玩家数据[id].角色.数据.最大魔法
    end
    发送数据(连接id,36,{动画="加蓝"})
    发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
    地图处理类:加入动画(id,玩家数据[id].角色.数据.地图数据.编号,玩家数据[id].角色.数据.地图数据.x,玩家数据[id].角色.数据.地图数据.y,"加蓝")
  else
    玩家数据[id].召唤兽:加蓝处理(加血对象,加血数值,连接id,id)
  end
end

function 道具处理类:取飞行限制(id)
  local 地图=玩家数据[id].角色.数据.地图数据.编号
  if 玩家数据[id].队伍~=0 and 玩家数据[id].队长==false then
      常规提示(id,"只有队长才可以使用飞行道具")
      return true
  elseif self:取禁止飞行(id) then
    常规提示(id,"#Y/您当前无法使用飞行道具")
    return true
  elseif 玩家数据[id].角色.数据.等级<10 then
    常规提示(id,"#Y/您当前等级太低了无法使用飞行道具")
    return true
  elseif 玩家数据[id].队伍~=0 and 玩家数据[id].队长 then
    local 队伍id=玩家数据[id].队伍
    for n=1,#队伍数据[队伍id].成员数据 do
      if self:取禁止飞行(队伍数据[队伍id].成员数据[n]) then
        常规提示(id,format("#G/%s当前不能使用飞行道具",玩家数据[队伍数据[队伍id].成员数据[n]].角色.数据.名称))
        return true
      end
    end
  end
  return false
end

function 道具处理类:取禁止飞行(id)
  if 玩家数据[id].摊位数据~=nil then return true end
  local 任务id=玩家数据[id].角色:取任务(110)
  local 地图=玩家数据[id].角色.数据.地图数据.编号
  if 任务id~=0 and 任务数据[任务id].分类==2 then return true  end
  if 玩家数据[id].角色:取任务(208)~=0 or 玩家数据[id].角色:取任务(300)~=0 or 玩家数据[id].角色.数据.跑商 or (地图>=6009 and 地图<=6019) then return true end
  return false
 end



function 道具处理类:给予随机法宝(id)
  local 参数=取随机数()
  local 名称=""
  local 等级=0
  if 参数<=30 then
   名称={"碧玉葫芦","五色旗盒","飞剑","拭剑石","金甲仙衣","惊魂铃","嗜血幡","风袋","九黎战鼓","盘龙壁","神行飞剑","汇灵盏","天师符","织女扇"}
   等级=1
  elseif 参数<=65 then
   名称={"发瘟匣","五彩娃娃","金刚杵","兽王令","摄魂","附灵玉"}
   等级=2
  else
   名称={"失心钹","五火神焰印","九幽","普渡","月光宝盒","混元伞","苍白纸人","聚宝盆","乾坤玄火塔","无尘扇","干将莫邪","慈悲","救命毫毛","伏魔天书","镇海珠","奇门五行令","月影"}
   等级=3
  end
  名称=名称[取随机数(1,#名称)]
  self:给予法宝(id,名称)
end

function 道具处理类:给予随机一级法宝(id)
  local 名称=""
  local 等级=0
  名称={"定风珠","雷兽","迷魂灯","幽灵珠","缚妖索","碧玉葫芦","五色旗盒","飞剑","拭剑石","金甲仙衣","惊魂铃","嗜血幡","风袋","九黎战鼓","盘龙壁","神行飞剑","汇灵盏","天师符","织女扇","清心咒"}
  等级=1
  名称=名称[取随机数(1,#名称)]
  self:给予法宝(id,名称)
end
function 道具处理类:给予随机全法宝(id)
  local 名称=""
  local 等级=0
  名称={"碧玉葫芦","五色旗盒","飞剑","拭剑石","金甲仙衣","惊魂铃","嗜血幡","风袋","九黎战鼓","盘龙壁","神行飞剑","汇灵盏","天师符","织女扇","发瘟匣","五彩娃娃","金刚杵","兽王令","摄魂","附灵玉","失心钹","五火神焰印","九幽","普渡","月光宝盒","混元伞","苍白纸人","聚宝盆","乾坤玄火塔","无尘扇","干将莫邪","慈悲","救命毫毛","伏魔天书","镇海珠","奇门五行令","月影","流影云笛","宿幕星河","蟠龙玉璧","落星飞鸿","归元圣印","千斗金樽"}
  等级=1
  名称=名称[取随机数(1,#名称)]
  self:给予法宝(id,名称)
end

function 道具处理类:给予法宝(id,名称)
  local 识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  local 道具格子=玩家数据[id].角色:取法宝格子()
  if 道具格子==0 then
    常规提示(id,"您的法宝栏已经满啦")
    return
  end
  道具id=self:取新编号()
  self.数据[道具id]=物品类()
  self.数据[道具id]:置对象(名称)
  self.数据[道具id].识别码=识别码
  玩家数据[id].角色.数据.法宝[道具格子]=道具id
  local 道具 = 取物品数据(名称)
  self.数据[道具id].总类=1000
  self.数据[道具id].分类=道具[3]
  self.数据[道具id].使用 = 道具[5]
  self.数据[道具id].特技 = 道具[6]
  self.数据[道具id].气血 = 0
  self.数据[道具id].魔法 = 取灵气上限(道具[3])
  self.数据[道具id].角色限制 = 道具[7] or 0
  self.数据[道具id].五行 = 取五行()
  self.数据[道具id].伤害 = 道具[8] or 0
  self.数据[道具id].当前经验=0
  self.数据[道具id].升级经验=法宝经验[self.数据[道具id].分类][1]
  玩家数据[id].角色:日志记录(format("获得新法宝：名称%s,识别码%s",名称,识别码))
  常规提示(id,"#Y你获得了新的法宝#R"..名称)
end

function 道具处理类:给予道具(id,名称,数量,参数,附加,专用,工具)--给予道具函数
  if 数量==nil then
     数量=1
  end
  local 识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  local 道具格子=玩家数据[id].角色:取道具格子()
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return
  else
    local 重置id=0
    for n=1,20 do
      if 重置id==0 and 玩家数据[id].角色.数据.道具[n]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]]~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].名称==名称 and self.数据[玩家数据[id].角色.数据.道具[n]].数量~=nil and self.数据[玩家数据[id].角色.数据.道具[n]].可叠加~=nil and 名称 ~= "元宵" and 名称 ~= "九转金丹" and 名称 ~= "月华露" then
        if self.数据[玩家数据[id].角色.数据.道具[n]].数量+数量<=99 then
          数量=self.数据[玩家数据[id].角色.数据.道具[n]].数量+数量
          道具id=玩家数据[id].角色.数据.道具[n]
          识别码=self.数据[玩家数据[id].角色.数据.道具[n]].识别码
          重置id=1
        end
      end
    end
    if 重置id==0 then
      道具id=self:取新编号()
      self.数据[道具id]=物品类()
      self.数据[道具id]:置对象(名称)
      玩家数据[id].角色.数据.道具[道具格子]=道具id
    end
    临时道具 = 取物品数据(名称)
    临时道具.总类=临时道具[2]
    临时道具.子类=临时道具[4]
    临时道具.分类=临时道具[3]
    --print(临时道具.总类,临时道具.子类,临时道具.分类)
    if 名称=="鬼谷子" then
         if 参数~=nil then
        self.数据[道具id].子类= 参数
        else
      self.数据[道具id].子类= self.阵法名称[取随机数(4,13)]
        end
    elseif 名称=="点化石" then
      if 参数 ~= nil then
        self.数据[道具id].附带技能=参数
      else
        self.数据[道具id].附带技能=取高级要诀点化()
      end

      elseif 名称=="善恶点化石" then
      if 参数 ~= nil then
        self.数据[道具id].附带技能=参数
      else
        self.数据[道具id].附带技能="善恶有报"
      end

    elseif 名称=="钟灵石" and 钟灵石定制 then
      local 幻化类型 = {"心源","狂浪滔天","固若金汤","锐不可当","通真达灵","血气方刚","健步如飞"}
      if 参数 ~= nil then
        self.数据[道具id].附加特性 = 参数
      else
        self.数据[道具id].附加特性 = 幻化类型[取随机数(1,#幻化类型)]
      end
      if 数量 ~= nil then
        self.数据[道具id].级别限制 = 数量
      else
        self.数据[道具id].级别限制 = 1
      end
    elseif 名称=="特赦令牌" then
      self.数据[道具id].可叠加=true
    elseif 名称=="青花瓷" then
      self.数据[道具id].锦衣=true
      self.数据[道具id].总类=2
      self.数据[道具id].分类=15
      self.数据[道具id].子类=1
    elseif 名称=="天眼通符" then
      self.数据[道具id].总类=4
      self.数据[道具id].分类=2
      self.数据[道具id].子类=0
    elseif 名称=="附魔宝珠" then
      self.数据[道具id].可叠加=true
    elseif 名称=="制造指南书" then
     --{"枪矛","斧钺","剑","双短剑","飘带","爪刺","扇","魔棒","锤","鞭","环圈","刀","法杖","弓弩","宝珠","巨剑","伞","灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
      if 数量 ==nil then
         数量 = 100
      end
      if 参数 ==nil then
         参数 = 取随机数(1,25)
      end
      if 工具 and tonumber(参数)==nil  then
      参数=self:取武器类型(参数)
      end
      self.数据[道具id].子类=数量
      self.数据[道具id].特效=参数
    elseif 名称=="灵饰指南书" then
      if 数量 ==nil then
         数量 = {10,15}
      end
      if 参数 ==nil then
         参数 = 随机灵饰[取随机数(1,#随机灵饰)]
      end

      self.数据[道具id].子类=数量[取随机数(1,#数量)]*10
      if self.数据[道具id].子类>=160 then
        self.数据[道具id].子类 = 160
      elseif self.数据[道具id].子类 >= 140 then
        self.数据[道具id].子类 = 140
      end
      if 工具 then
        self.数据[道具id].特效=参数
      else
      self.数据[道具id].特效=随机灵饰[取随机数(1,#随机灵饰)]
      end
    elseif 名称=="元灵晶石" then
       if 数量 ==nil then
         数量 = {10,15}
      end

      self.数据[道具id].子类=数量[取随机数(1,#数量)]*10
      if self.数据[道具id].子类>=160 then
        self.数据[道具id].子类 = 160
      elseif self.数据[道具id].子类 >= 140 then
        self.数据[道具id].子类 = 140
      end

    elseif 名称=="灵宝图鉴" or 名称=="神兵图鉴" then
      if 数量==nil then
         数量=100
      end
      if 工具 then
        self.数据[道具id].可叠加=false
      self.数据[道具id].子类=数量
      else
      self.数据[道具id].可叠加=false
      self.数据[道具id].子类=参数
    end
    elseif 名称=="强化符" then
      if 数量==nil then 数量=100 end
      if 参数==nil then 参数="嗜血" end
      if 工具 then
        self.数据[道具id].等级=数量
      self.数据[道具id].类型=参数
      else
      self.数据[道具id].等级=参数
      self.数据[道具id].类型=附加
    end

    elseif self.数据[道具id].总类==2000 then
      self.数据[道具id].耐久=100
    elseif 名称=="百炼精铁" then
      if 数量==nil then 数量=100 end
      self.数据[道具id].子类=数量
    elseif 名称=="初级清灵仙露" then
      --self.数据[道具id].可叠加=true
      if 数量==nil then 数量=4 end
      if 工具 then
        self.数据[道具id].灵气=数量
      else
      self.数据[道具id].灵气=取随机数(1,4)
      end
    elseif 名称=="中级清灵仙露" then
      --self.数据[道具id].可叠加=true
      if 数量==nil then 数量=6 end
       if 工具 then
      self.数据[道具id].灵气=数量
    else
      self.数据[道具id].灵气=取随机数(2,6)
    end
    elseif 名称=="高级清灵仙露" then
     -- self.数据[道具id].可叠加=true
      if 数量==nil then 数量=8 end
      if 工具 then
      self.数据[道具id].灵气=数量
    else
      self.数据[道具id].灵气=取随机数(4,8)
    end

    elseif 名称=="召唤兽内丹" then
      if 参数==nil then 参数=取内丹() end
      if 工具 then
        self.数据[道具id].附带技能=参数
      else
      self.数据[道具id].附带技能=取内丹()
    end
    elseif 名称=="高级召唤兽内丹" then
      if 参数==nil then 参数=取内丹("高级") end
      if 工具 then
      self.数据[道具id].附带技能=参数
    else
      self.数据[道具id].附带技能=取内丹("高级")
    end
    elseif 名称=="魔兽要诀" then
      if 参数==nil then
        self.数据[道具id].附带技能=取低级要诀()
      else
        self.数据[道具id].附带技能=参数
      end
    elseif 参数==55 then
      local 符石数据 = 取物品数据(名称)
      self.数据[道具id].颜色=符石数据[20]
      self.数据[道具id].耐久度=符石数据[17]
      self.数据[道具id].等级=符石数据[16]
      self.数据[道具id][符石数据[18]]=符石数据[19]
      if 符石数据[21]~=nil then
          self.数据[道具id][符石数据[21]]=符石数据[22]
      end
    elseif 名称=="高级魔兽要诀" then
     if 参数==nil then
       self.数据[道具id].附带技能=取高级要诀()
      else
       self.数据[道具id].附带技能=参数
      end
    elseif 名称=="特殊魔兽要诀" then
     if 参数==nil then
       self.数据[道具id].附带技能=取特殊要诀10()
      else
       self.数据[道具id].附带技能=参数
      end
    elseif 名称=="神兽兽决" then
     if 参数==nil then
       self.数据[道具id].附带技能=神兽要诀()
      else
       self.数据[道具id].附带技能=参数
      end
    elseif 名称=="帮派银票" then
      self.数据[道具id].初始金额=52000
      self.数据[道具id].完成金额=180000
      self.数据[道具id].专用="专用"
    elseif 名称=="月华露" or 名称=="九转金丹" or 名称=="修炼果" then
      if 参数==nil then 参数= 1 end
      if 数量==nil then 数量=50 end
      if 工具 then
        self.数据[道具id].阶品=数量
      self.数据[道具id].数量=参数
      self.数据[道具id].可叠加=true
      self.数据[道具id].不可交易=false
      else
      self.数据[道具id].阶品=参数
      self.数据[道具id].数量=数量
      self.数据[道具id].可叠加=true
      self.数据[道具id].不可交易=false
    end
    elseif  名称 == "金柳露"  or  名称=="超级金柳露" or  名称=="圣兽丹" or  名称=="吸附石" then
      self.数据[道具id].数量 = 数量 or 1
      self.数据[道具id].可叠加 = true
    elseif  名称 == "分解符" then
      -- self.数据[道具id].数量 = 数量 or 1
      self.数据[道具id].可叠加 = true
    elseif  名称 == "雪人鼻子" or 名称 == "雪人帽子" or 名称 == "雪人眼睛" then
      self.数据[道具id].可叠加 = true
    elseif 名称=="元宵" then
      local 食材 = {"芝麻沁香","桂花酒酿","细磨豆沙","蜜糖腰果","蜜糖腰果","蜜糖腰果","山楂拔丝","滑玉莲蓉"}
      self.数据[道具id].食材 = 食材[取随机数(1,#食材)]
      self.数据[道具id].数量 = 数量 or 1
    elseif 名称=="清灵净瓶" then
      self.数据[道具id].数量=数量 or 1
      self.数据[道具id].可叠加 = true
    elseif 名称=="藏宝图" or 名称=="高级藏宝图"or 名称=="超级藏宝图" then
      local 随机地图={1501,1506,1092,1091,1110,1142,1514,1174,1173,1146,1208}
      local 临时地图=随机地图[取随机数(1,#随机地图)]
      self.数据[道具id].地图名称=取地图名称(临时地图)
      self.数据[道具id].地图编号=临时地图
      local xy=地图处理类.地图坐标[临时地图]:取随机点()
      self.数据[道具id].x=xy.x
      self.数据[道具id].y=xy.y
    elseif 名称=="炼妖石" or 名称=="上古锻造图策" then
      if  数量==nil then 数量=65 end
      if 工具 then
        self.数据[道具id].级别限制=数量
      self.数据[道具id].种类=参数 or 图策范围[取随机数(1,#图策范围)]
      else
      self.数据[道具id].级别限制=数量[取随机数(1,#数量)]
      self.数据[道具id].种类=图策范围[取随机数(1,#图策范围)]
    end
    elseif 名称=="珍珠" then
      self.数据[道具id].级别限制 = 数量 or 100
    elseif 名称=="战魂" then
        self.数据[道具id].级别限制=数量 or 160
        self.数据[道具id].总类=67
    elseif 名称=="未激活的符石" then
      if 参数==nil or 参数=="" then
         local 级别 = 数量 or 1
        self.数据[道具id].子类 = 级别
        if 级别 == 1 then
          self.数据[道具id].符石名称 = 一级符石[取随机数(1,#一级符石)]
        elseif 级别==2 then
          self.数据[道具id].符石名称 = 二级符石[取随机数(1,#二级符石)]
        elseif 级别==3 then
          self.数据[道具id].符石名称 = 三级符石[取随机数(1,#三级符石)]
        else
          self.数据[道具id].子类 = 1
          self.数据[道具id].符石名称 = 一级符石[取随机数(1,#一级符石)]
        end
        local 临时数据 = 取物品数据(self.数据[道具id].符石名称)
        self.数据[道具id].符石属性 = 临时数据[21]
        self.数据[道具id].颜色 = 临时数据[20]
      else
        local 临时数据 = 取物品数据(参数)
        self.数据[道具id].符石属性 = 临时数据[21]
        if self.数据[道具id].符石属性~=nil then
            self.数据[道具id].符石名称 = 参数
            self.数据[道具id].子类 = 临时数据[4]
            self.数据[道具id].颜色 = 临时数据[20]
          else
            self.数据[道具id].符石名称 = 一级符石[取随机数(1,#一级符石)]
            local 临时数据 = 取物品数据(self.数据[道具id].符石名称)
            self.数据[道具id].符石属性 = 临时数据[21]
            self.数据[道具id].子类 = 临时数据[4]
            self.数据[道具id].颜色 = 临时数据[20]
        end
      end
    elseif 名称=="未激活的星石" then
      if 参数==nil or 参数=="" then
        self.数据[道具id].子类 = 取随机数(1,6)
      else
        if 参数 == "头盔" then
          self.数据[道具id].子类 = 1
        elseif 参数 == "饰物" then
          self.数据[道具id].子类 = 2
        elseif 参数 == "武器" then
          self.数据[道具id].子类 = 3
        elseif 参数 == "衣甲" then
          self.数据[道具id].子类 = 4
        elseif 参数 == "腰带" then
          self.数据[道具id].子类 = 5
        elseif 参数 == "靴子" then
          self.数据[道具id].子类 = 6
        else
          self.数据[道具id].子类 = 取随机数(1,6)
        end
      end
    elseif 名称=="符石卷轴" then
      self.数据[道具id].可叠加=true
    elseif 名称=="怪物卡片" then
      if 变身卡数据[数量]==nil then
       self.数据[道具id].等级=数量
       self.数据[道具id].造型=变身卡范围[数量][取随机数(1,#变身卡范围[数量])]
      else
       self.数据[道具id].等级=变身卡数据[数量].等级
       self.数据[道具id].造型=数量
      end
      self.数据[道具id].类型=变身卡数据[self.数据[道具id].造型].类型
      self.数据[道具id].单独=变身卡数据[self.数据[道具id].造型].单独
      self.数据[道具id].正负=变身卡数据[self.数据[道具id].造型].正负
      self.数据[道具id].技能=变身卡数据[self.数据[道具id].造型].技能
      self.数据[道具id].属性=变身卡数据[self.数据[道具id].造型].属性
      self.数据[道具id].次数=self.数据[道具id].等级
    elseif 临时道具.总类==5 and  临时道具.分类==4 then
      self.数据[道具id].级别限制=数量
    elseif 临时道具.总类==5 and  临时道具.分类==6 then
      self.数据[道具id].级别限制=数量
    elseif 临时道具.总类==1 and 临时道具.子类==1 and 临时道具.分类==4 then
      self.数据[道具id].阶品=参数
    elseif 名称=="金创药" or 名称=="小还丹" or 名称=="千年保心丹" or 名称=="金香玉" or 名称=="风水混元丹" or 名称=="蛇蝎美人" or 名称=="定神香" or 名称=="佛光舍利子" or 名称=="九转回魂丹" or 名称=="五龙丹"   or 名称=="十香返生丸"     then
      self.数据[道具id].阶品=参数 or 100
  	end
    if self.数据[道具id].可叠加 then
        self.数据[道具id].数量=数量
    end
  end
  self.数据[道具id].识别码=识别码
  if  self.数据[道具id].名称=="心魔宝珠" or self.数据[道具id].名称=="神秘钥匙" or self.数据[道具id].名称=="神兜兜(专属)" then
    self.数据[道具id].不可交易=true
  end
  if self.数据[道具id].总类==1001 then
      self.数据[道具id].不可交易=true
      self.数据[道具id].专用="专用"
  end
  if 专用~=nil then
    self.数据[道具id].专用=id
    self.数据[道具id].不可交易=true
  end
  --print(self.数据[道具id].识别码,666)
  发送数据(玩家数据[id].连接id,3699)
  道具刷新(id)
end

function 道具处理类:卸下灵饰(连接id,id,道具id,道具格子,数据)
  玩家数据[id].角色:卸下灵饰(self.数据[玩家数据[id].角色.数据.灵饰[数据.道具]])
  玩家数据[id].角色.数据[数据.类型][道具格子]=玩家数据[id].角色.数据.灵饰[数据.道具]
  玩家数据[id].角色.数据.灵饰[数据.道具]=nil
  self:刷新道具行囊(id,数据.类型)
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
  发送数据(玩家数据[id].连接id,3506,玩家数据[id].角色:取灵饰数据())
  发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
  发送数据(玩家数据[id].连接id,12)
end

function 道具处理类:卸下锦衣(连接id,id,道具id,道具格子,数据)
  玩家数据[id].角色.数据[数据.类型][道具格子]=玩家数据[id].角色.数据.锦衣[数据.道具]
  玩家数据[id].角色.数据.锦衣[数据.道具]=nil
  if self.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==15 then
      玩家数据[id].角色.数据.穿戴锦衣=nil
  elseif self.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==16 then
      玩家数据[id].角色.数据.穿戴足印=nil
  elseif self.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==17 then
      玩家数据[id].角色.数据.穿戴足迹=nil
  end
  玩家数据[id].角色:刷新信息()
  self:刷新道具行囊(id,数据.类型)
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[id].连接id,3530,玩家数据[id].角色:取锦衣数据())
  发送数据(玩家数据[id].连接id,12)
  地图处理类:更新锦衣(id,玩家数据[id].角色:取锦衣数据())

end

function 道具处理类:卸下装备(连接id,id,数据)
  local 道具格子=玩家数据[id].角色:取道具格子1(数据.类型)
  if 道具格子==0 then
    常规提示(id,"您的道具栏物品已经满啦")
    return 0
  end
  if 数据.灵饰 then
    self:卸下灵饰(连接id,id,道具id,道具格子,数据)
    return
  end
  if 数据.锦衣 then
    self:卸下锦衣(连接id,id,道具id,道具格子,数据)
    return
  end
  local 道具id=玩家数据[id].角色.数据.装备[数据.道具]
  if 道具id~=nil and self.数据[道具id]~=nil and self.数据[道具id].耐久 > 0 and self.数据[道具id].耐久 ~= nil then
      玩家数据[id].角色:卸下装备(self.数据[道具id],self.数据[道具id].分类,id)
  end
  玩家数据[id].角色.数据.装备[数据.道具]=nil
  玩家数据[id].角色.数据[数据.类型][道具格子]=道具id
  self:刷新道具行囊(id,数据.类型)
  玩家数据[id].角色:刷新信息()
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
  if 数据.道具==3 then
    发送数据(玩家数据[id].连接id,3505)
    地图处理类:更新武器(id)
  end
  发送数据(玩家数据[id].连接id,12)
end



function 道具处理类:多开卸下装备(连接id,id,数据,主id)
  local 道具格子=玩家数据[id].角色:多开取道具格子1(数据.类型,id)
  if 道具格子==0 then
    常规提示(主id,"您的道具栏物品已经满啦")
    return 0
  end
  if 数据.灵饰 then
    self:多开卸下灵饰(玩家数据[主id].连接id,id,道具id,道具格子,数据,主id)--------------
    return
  end
  if 数据.锦衣 then
    self:多开卸下锦衣(玩家数据[主id].连接id,id,道具id,道具格子,数据,主id)--------------
    return
  end
  local 道具id=玩家数据[id].角色.数据.装备[数据.道具]
  if 道具id~=nil and 玩家数据[id].道具.数据[道具id]~=nil and 玩家数据[id].道具.数据[道具id].耐久 > 0 and 玩家数据[id].道具.数据[道具id].耐久 ~= nil then
      玩家数据[id].角色:卸下装备(玩家数据[id].道具.数据[道具id],玩家数据[id].道具.数据[道具id].分类,id)--------------
  end

  玩家数据[id].角色.数据.装备[数据.道具]=nil
  玩家数据[id].角色.数据[数据.类型][道具格子]=道具id
  self:多开刷新道具行囊(id,数据.类型,主id)
  玩家数据[id].角色:刷新信息()--------------
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[主id].连接id,8019,玩家数据[id].角色:取装备数据())--
  if 数据.道具==3 then
    --发送数据(玩家数据[主id].连接id,3505)--
    地图处理类:更新武器(id)--
  end
  发送数据(玩家数据[主id].连接id,12.1)--
end


function 道具处理类:多开卸下灵饰(连接id,id,道具id,道具格子,数据,主id)
  玩家数据[id].角色:卸下灵饰(玩家数据[id].道具.数据[玩家数据[id].角色.数据.灵饰[数据.道具]])
  玩家数据[id].角色.数据[数据.类型][道具格子]=玩家数据[id].角色.数据.灵饰[数据.道具]
  玩家数据[id].角色.数据.灵饰[数据.道具]=nil
  self:多开刷新道具行囊(id,数据.类型,主id)
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[主id].连接id,8019,玩家数据[id].角色:取装备数据())
  发送数据(玩家数据[主id].连接id,3506.1,玩家数据[id].角色:取灵饰数据())
  发送数据(玩家数据[主id].连接id,5506.1,{玩家数据[id].角色:取气血数据()})
  发送数据(玩家数据[主id].连接id,12.1)
end

function 道具处理类:多开卸下锦衣(连接id,id,道具id,道具格子,数据,主id)
  玩家数据[id].角色.数据[数据.类型][道具格子]=玩家数据[id].角色.数据.锦衣[数据.道具]
  玩家数据[id].角色.数据.锦衣[数据.道具]=nil
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==15 then
      玩家数据[id].角色.数据.穿戴锦衣=nil
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==16 then
      玩家数据[id].角色.数据.穿戴足印=nil
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][道具格子]].分类==17 then
      玩家数据[id].角色.数据.穿戴足迹=nil
  end
  玩家数据[id].角色:刷新信息()
  self:多开刷新道具行囊(id,数据.类型,主id)
  -- 发送数据(玩家数据[id].连接id,3699)
  -- 道具刷新(id)
  发送数据(玩家数据[主id].连接id,3530.1,玩家数据[id].角色:取锦衣数据())
  发送数据(玩家数据[主id].连接id,12.1)
  地图处理类:更新锦衣(id,玩家数据[id].角色:取锦衣数据())

end

function 道具处理类:佩戴灵饰(连接id,id,道具id,数据)
  local 物品=取物品数据(self.数据[道具id].名称)
  local 级别=物品[5]
  if 级别>玩家数据[id].角色.数据.等级 and self.数据[道具id].特效~="无级别限制" then
    常规提示(id,"#Y你当前的等级不足以佩戴这样的灵饰")
    return
  end
  if 玩家数据[id].角色.数据.灵饰[self.数据[道具id].子类]==nil then
    玩家数据[id].角色.数据.灵饰[self.数据[道具id].子类]=道具id
    玩家数据[id].角色:佩戴灵饰(self.数据[道具id])
    玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
  else
    local 道具id1=玩家数据[id].角色.数据.灵饰[self.数据[道具id].子类]
    玩家数据[id].角色:卸下灵饰(self.数据[道具id1])
    玩家数据[id].角色.数据.灵饰[self.数据[道具id].子类]=道具id
    玩家数据[id].角色:佩戴灵饰(self.数据[道具id])
    玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
  end
  self:刷新道具行囊(id,数据.类型)
  发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
  发送数据(玩家数据[id].连接id,3506,玩家数据[id].角色:取灵饰数据())
  发送数据(连接id,5506,{玩家数据[id].角色:取气血数据()})
  发送数据(玩家数据[id].连接id,12)
end




function 道具处理类:佩戴锦衣(连接id,id,道具id,数据)
  local 物品=取物品数据(self.数据[道具id].名称)
  if 玩家数据[id].角色.数据.锦衣[self.数据[道具id].子类]==nil then
    玩家数据[id].角色.数据.锦衣[self.数据[道具id].子类]=道具id
    玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
  else
    local 道具id1=玩家数据[id].角色.数据.锦衣[self.数据[道具id].子类]
    玩家数据[id].角色.数据.锦衣[self.数据[道具id].子类]=道具id
    玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
  end
  -- 玩家数据[id].角色:穿戴锦衣(self.数据[道具id],self.数据[道具id].分类,id)
  if self.数据[道具id].分类 == 15 then
      玩家数据[id].角色.数据.穿戴锦衣=self.数据[道具id].名称
  elseif self.数据[道具id].分类 == 16 then
      玩家数据[id].角色.数据.穿戴足印=self.数据[道具id].名称
  elseif self.数据[道具id].分类 == 17 then
      玩家数据[id].角色.数据.穿戴足迹=self.数据[道具id].名称
  end
  玩家数据[id].角色:刷新信息()
  self:刷新道具行囊(id,数据.类型)
  发送数据(玩家数据[id].连接id,3530,玩家数据[id].角色:取锦衣数据())
  地图处理类:更新锦衣(id,玩家数据[id].角色:取锦衣数据())
  发送数据(玩家数据[id].连接id,3699)
  道具刷新(id)
  发送数据(玩家数据[id].连接id,12)
end

function 道具处理类:佩戴装备(连接id,id,数据)
  local 道具id=玩家数据[id].角色.数据[数据.类型][数据.道具]
  if self.数据[道具id]~= nil and self.数据[道具id].灵饰 ~= nil and self.数据[道具id].灵饰 then
    self:佩戴灵饰(连接id,id,道具id,数据)
    return
  end
  if self.数据[道具id]~= nil and self.数据[道具id].锦衣~=nil and self.数据[道具id].锦衣 then
      self:佩戴锦衣(连接id,id,道具id,数据)
      return
  end
  local 装备条件
  if self.数据[道具id] == nil or self.数据[道具id].分类 == nil then
    装备条件 =false
  else
--    table.print(self.数据[道具id])

	装备条件=self:可装备(self.数据[道具id],self.数据[道具id].分类,数据.角色,id)
  end
  if 装备条件~=true then
    常规提示(id,"#Y你当前的角色无法装备此装备")
    return 0
  else
  --检查是否有装备已经佩戴
    if 玩家数据[id].角色.数据.装备[self.数据[道具id].分类]~=nil then
      local 道具id1=玩家数据[id].角色.数据.装备[self.数据[道具id].分类]
      玩家数据[id].角色:卸下装备(self.数据[道具id1],self.数据[道具id1].分类,id)
      玩家数据[id].角色.数据.装备[self.数据[道具id].分类]= 道具id
      玩家数据[id].角色:穿戴装备(self.数据[道具id],self.数据[道具id].分类,id)
      玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
    else
      玩家数据[id].角色.数据.装备[self.数据[道具id].分类]= 道具id
      玩家数据[id].角色:穿戴装备(self.数据[道具id],self.数据[道具id].分类,id)
      玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
    end
  end
  self:刷新道具行囊(id,数据.类型)
  发送数据(玩家数据[id].连接id,3503,玩家数据[id].角色:取装备数据())
  if self.数据[道具id].分类==3 and 玩家数据[id].角色.数据.装备[3] ~= nil then
    发送数据(玩家数据[id].连接id,3504)
    地图处理类:更新武器(id,self.数据[玩家数据[id].角色.数据.装备[3]])
  end
  发送数据(玩家数据[id].连接id,12	)
end


function 道具处理类:多开佩戴装备(连接id,id,数据,主id)
  local 道具id=玩家数据[id].角色.数据[数据.类型][数据.道具]
  if 玩家数据[id].道具.数据[道具id]~= nil and 玩家数据[id].道具.数据[道具id].灵饰 ~= nil and 玩家数据[id].道具.数据[道具id].灵饰 then
    self:多开佩戴灵饰(连接id,id,道具id,数据,主id)
    return
  end
  if 玩家数据[id].道具.数据[道具id]~= nil and 玩家数据[id].道具.数据[道具id].锦衣~=nil and 玩家数据[id].道具.数据[道具id].锦衣 then
      self:多开佩戴锦衣(连接id,id,道具id,数据,主id)
      return
  end
  local 装备条件
  if 玩家数据[id].道具.数据[道具id] == nil or 玩家数据[id].道具.数据[道具id].分类 == nil then
    装备条件 =false
  else
--    table.print(self.数据[道具id])

  装备条件=self:可装备(玩家数据[id].道具.数据[道具id],玩家数据[id].道具.数据[道具id].分类,数据.角色,id)
  end
  if 装备条件~=true then
    常规提示(主id,"#Y你当前的角色无法装备此装备")
    return 0
  else
  --检查是否有装备已经佩戴
    if 玩家数据[id].角色.数据.装备[玩家数据[id].道具.数据[道具id].分类]~=nil then
      local 道具id1=玩家数据[id].角色.数据.装备[玩家数据[id].道具.数据[道具id].分类]
      玩家数据[id].角色:卸下装备(玩家数据[id].道具.数据[道具id1],玩家数据[id].道具.数据[道具id1].分类,id)
      玩家数据[id].角色.数据.装备[玩家数据[id].道具.数据[道具id].分类]= 道具id
      玩家数据[id].角色:穿戴装备(玩家数据[id].道具.数据[道具id],玩家数据[id].道具.数据[道具id].分类,id)
      玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
    else
      玩家数据[id].角色.数据.装备[玩家数据[id].道具.数据[道具id].分类]= 道具id
      玩家数据[id].角色:穿戴装备(玩家数据[id].道具.数据[道具id],玩家数据[id].道具.数据[道具id].分类,id)
      玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
    end
  end
  --self:刷新道具行囊(id,数据.类型)
  self:多开刷新道具行囊(id,数据.类型,主id)
  发送数据(玩家数据[主id].连接id,8019,玩家数据[id].角色:取装备数据())
  if 玩家数据[id].道具.数据[道具id].分类==3 and 玩家数据[id].角色.数据.装备[3] ~= nil then
    --发送数据(玩家数据[主id].连接id,3504)
    地图处理类:更新武器(id,玩家数据[id].道具.数据[玩家数据[id].角色.数据.装备[3]])
  end
  发送数据(玩家数据[主id].连接id,12.1 )
end




function 道具处理类:多开佩戴灵饰(连接id,id,道具id,数据,主id)
  local 物品=取物品数据(玩家数据[id].道具.数据[道具id].名称)
  local 级别=物品[5]
  if 级别>玩家数据[id].角色.数据.等级 and 玩家数据[id].道具.数据[道具id].特效~="无级别限制" then
    常规提示(主id,"#Y你当前的等级不足以佩戴这样的灵饰")
    return
  end
  if 玩家数据[id].角色.数据.灵饰[玩家数据[id].道具.数据[道具id].子类]==nil then
    玩家数据[id].角色.数据.灵饰[玩家数据[id].道具.数据[道具id].子类]=道具id
    玩家数据[id].角色:佩戴灵饰(玩家数据[id].道具.数据[道具id])
    玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
  else
    local 道具id1=玩家数据[id].角色.数据.灵饰[玩家数据[id].道具.数据[道具id].子类]
    玩家数据[id].角色:卸下灵饰(玩家数据[id].道具.数据[道具id1])
    玩家数据[id].角色.数据.灵饰[玩家数据[id].道具.数据[道具id].子类]=道具id
    玩家数据[id].角色:佩戴灵饰(玩家数据[id].道具.数据[道具id])
    玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
  end
  self:多开刷新道具行囊(id,数据.类型,主id)
  发送数据(玩家数据[主id].连接id,8019,玩家数据[id].角色:取装备数据())
  发送数据(玩家数据[主id].连接id,3506.1,玩家数据[id].角色:取灵饰数据())
  发送数据(玩家数据[主id].连接id,5506.1,{玩家数据[id].角色:取气血数据()})
  发送数据(玩家数据[主id].连接id,12.1)
end




function 道具处理类:多开佩戴锦衣(连接id,id,道具id,数据,主id)
  local 物品=取物品数据(玩家数据[id].道具.数据[道具id].名称)
  if 玩家数据[id].角色.数据.锦衣[玩家数据[id].道具.数据[道具id].子类]==nil then
    玩家数据[id].角色.数据.锦衣[玩家数据[id].道具.数据[道具id].子类]=道具id
    玩家数据[id].角色.数据[数据.类型][数据.道具]=nil
  else
    local 道具id1=玩家数据[id].角色.数据.锦衣[玩家数据[id].道具.数据[道具id].子类]
    玩家数据[id].角色.数据.锦衣[玩家数据[id].道具.数据[道具id].子类]=道具id
    玩家数据[id].角色.数据[数据.类型][数据.道具]=道具id1
  end
  -- 玩家数据[id].角色:穿戴锦衣(self.数据[道具id],self.数据[道具id].分类,id)
  if 玩家数据[id].道具.数据[道具id].分类 == 15 then
      玩家数据[id].角色.数据.穿戴锦衣=玩家数据[id].道具.数据[道具id].名称
  elseif 玩家数据[id].道具.数据[道具id].分类 == 16 then
      玩家数据[id].角色.数据.穿戴足印=玩家数据[id].道具.数据[道具id].名称
  elseif 玩家数据[id].道具.数据[道具id].分类 == 17 then
      玩家数据[id].角色.数据.穿戴足迹=玩家数据[id].道具.数据[道具id].名称
  end
  玩家数据[id].角色:刷新信息()
  self:多开刷新道具行囊(id,数据.类型,主id)
  发送数据(玩家数据[主id].连接id,3530.1,玩家数据[id].角色:取锦衣数据())
  地图处理类:更新锦衣(id,玩家数据[id].角色:取锦衣数据())
  发送数据(玩家数据[主id].连接id,3699.1)
  道具刷新(id)
  发送数据(玩家数据[主id].连接id,12.1)
end

function 道具处理类:可装备(i1,i2,类型,id)
	if i2 > 6 and 类型 == "主角" then
		return "#Y/该装备与你的种族不符"
	elseif i2 < 6 and 类型 == "召唤兽" then
		return "#Y/召唤兽不能穿戴该装备"
	end
	if i1.总类 ~= 2 then
		return "#Y/这个物品不可以装备"
	end
  if i1.专用~=nil and i1.专用~=id then
   return "#Y/你无法佩戴他人的专用装备"
  end
    if i1.限时 ~= nil and i1.限时 < os.time() then
      常规提示(id,"#Y该装备的使用时限到了无法在使用了")
    return "#Y/该装备的使用时限到了无法在使用了"
  end
  if i1.鉴定==false then
      return "#Y/该装备未鉴定，无法佩戴"
  end
  if i1.耐久==nil then
      i1.耐久=500
  end
  if i1.耐久<=0 and i1.耐久~=nil then
      return "#Y/该装备耐久不足，无法穿戴"
  end
  if i1.修理失败~=nil and i1.修理失败==3 and i1.耐久<=0 then
      return "#Y/该装备因修理失败过度，而无法使用！"
  end
	if i1 ~= nil and i1.分类 == i2 then
		if i2 == 1 or i2 == 4 then
			if i1.性别限制 ~= 0 and i1.性别限制 == 玩家数据[id].角色.数据.性别 then
					if (i1.级别限制 == 0 or i1.特效 == "无级别限制" or 玩家数据[id].角色.数据.等级 >= i1.级别限制 or i1.第二特效 == "无级别限制") then
						return true
          elseif (i1.特效 == "简易" or i1.第二特效 == "简易") and 玩家数据[id].角色.数据.等级+5 >= i1.级别限制 then
            return true
					else
					if 玩家数据[id].角色.数据.等级 < i1.级别限制 then
						return "#Y/你的等级不够呀"
					end
				end
			else
				return "#Y/该装备您无法使用呀"
			end
		elseif i2 == 2 or i2 == 5 or i2 == 6 then
			if (i1.级别限制 == 0 or i1.特效 == "无级别限制" or 玩家数据[id].角色.数据.等级 >= i1.级别限制 or i1.第二特效 == "无级别限制") then
				return true
       elseif (i1.特效 == "简易" or i1.第二特效 == "简易") and 玩家数据[id].角色.数据.等级+5 >= i1.级别限制 then
            return true
			else
				if i1.级别限制 > tonumber(玩家数据[id].角色.数据.等级) then
					return "#Y/你的等级不够呀"
				end
			end
		elseif i2 == 3 then
			if i1.角色限制 ~= 0 and (i1.角色限制[1] == 玩家数据[id].角色.数据.模型 or i1.角色限制[2] == 玩家数据[id].角色.数据.模型 or i1.角色限制[3] == 玩家数据[id].角色.数据.模型) then
					if (i1.级别限制 == 0 or i1.特效 == "无级别限制" or 玩家数据[id].角色.数据.等级 >= i1.级别限制 or i1.第二特效 == "无级别限制") then
						return true
          elseif (i1.特效 == "简易" or i1.第二特效 == "简易") and 玩家数据[id].角色.数据.等级+5 >= i1.级别限制 then
            return true
					else
					if 玩家数据[id].角色.数据.等级 < i1.级别限制 then
						return "#Y/你的等级不够呀"
					end
				end
			else
				return "#Y/该装备您无法使用呀"
			end
		end
	end
	return false
end

function 道具处理类:加载数据(账号,数字id)
  self.数字id=数字id
  self.数据=table.loadstring(读入文件([[data/]]..账号..[[/]]..数字id..[[/道具.txt]]))
  for n, v in pairs(self.数据) do
    if self.数据[n].名称==nil then
      self.数据[n]=nil
    end
    if n~=nil and self.数据[n]~=nil and self.数据[n].名称~=nil and self.数据[n].名称=="帮派银票" then
      local 是否存在 = false
      for i=1,100 do
        if 玩家数据[数字id].角色.数据.道具[i] ~= nil and 玩家数据[数字id].角色.数据.道具[i] == n then
          是否存在 = true
        end
      end
      if 是否存在 == false then
        self.数据[n] = nil
      end
    end
  end
end

function 道具处理类:取新编号()
  for n, v in pairs(self.数据) do
    if self.数据[n]==nil then
      return n
    end
  end
  return #self.数据+1
end
function 道具处理类:多开取新编号(id)
  for n, v in pairs(玩家数据[id].道具.数据) do
    if 玩家数据[id].道具.数据[n]==nil then
      return n
    end
  end
  return #玩家数据[id].角色.数据+1
end
function 道具处理类:更新(dt) end

function 道具处理类:丢弃道具(连接id,id,数据)
  local 丢弃类型=数据.类型
  if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称=="帮派银票" then
      常规提示(id,"#Y该物品无法丢弃")
      self:刷新道具行囊(id,数据.类型)
      return
  end
  if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].总类=="跑商商品" then
      常规提示(id,"#Y该物品无法丢弃")
      self:刷新道具行囊(id,数据.类型)
      return
  end
  if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码==nil then
    self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码="无法识别"
  end
  玩家数据[id].角色:日志记录("丢弃道具["..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称.."],道具识别码为"..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码)
  self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]]=nil
  玩家数据[id].角色.数据[数据.类型][数据.物品]=nil
  --print(self.数据.类型,55)
  if 丢弃类型=="法宝" then
    self:索要法宝(连接id,id)
  else
    self:刷新道具行囊(id,数据.类型)
  end
end


function 道具处理类:多开丢弃道具(连接id,id,数据,主id)
  local 丢弃类型=数据.类型
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称=="帮派银票" then
      常规提示(主id,"#Y该物品无法丢弃")
      self:多开刷新道具行囊(id,数据.类型,主id)
      return
  end
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].总类=="跑商商品" then
      常规提示(主id,"#Y该物品无法丢弃")
      self:多开刷新道具行囊(id,数据.类型,主id)
      return
  end
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码==nil then
    玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码="无法识别"
  end
  --玩家数据[id].角色:日志记录("丢弃道具["..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称.."],道具识别码为"..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码)
  玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]]=nil
  玩家数据[id].角色.数据[数据.类型][数据.物品]=nil
  --print(self.数据.类型,55)
  常规提示(主id,"#Y多角色物品丢弃成功！")
  if 丢弃类型=="法宝" then
    --self:索要法宝(连接id,id)
    self:多开索要法宝(连接id,id)
  else
    self:多开刷新道具行囊(id,数据.类型,主id)
  end
end



function 道具处理类:出售道具(连接id,id,数据)
  if 玩家数据[id].角色.数据[数据.类型][数据.物品] == nil then
      常规提示(id,"#Y该物品不存在")
      return
  end
  local 物品名称 = self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称
  local 物品数量 = 1
  local 出售价格 = 1
  local 出售总价 = 0
  if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称=="帮派银票" then
      常规提示(id,"#Y该物品无法出售")
      self:刷新道具行囊(id,数据.类型)
      return
  end
  if  tonumber(f函数.读配置(程序目录..[[功能设置\]].."一键出售价格.ini","自定义一键出售",物品名称)) == nil then
      常规提示(id,"#Y该物品无法出售")
      self:刷新道具行囊(id,数据.类型)
      return
  else
    出售价格 =  tonumber(f函数.读配置(程序目录..[[功能设置\]].."一键出售价格.ini","自定义一键出售",物品名称))
    if 出售价格 >=1000000 then
    出售价格= 1000000
   end
    if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].数量 ~= nil then
      物品数量 = self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].数量
    end
    出售总价 = 出售价格*物品数量
    if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码==nil then
      self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码="无法识别"
    end
    玩家数据[id].角色:添加银子(出售总价,"系统出售",1)
    玩家数据[id].角色:日志记录("出售道具["..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称.."],道具识别码为"..self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码)
    self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]]=nil
    玩家数据[id].角色.数据[数据.类型][数据.物品]=nil
    self:刷新道具行囊(id,数据.类型)
  end
end

function 道具处理类:刷新道具行囊(id,数据)
  if 数据=="道具" then
    self:索要道具(玩家数据[id].连接id,id)
  else
    self:索要行囊(玩家数据[id].连接id,id)
  end
  发送数据(玩家数据[id].连接id,3699)
  道具刷新(id)
end


function 道具处理类:多开刷新道具行囊(id,数据,主id)
  if 数据=="道具" then
    --self:索要道具(玩家数据[id].连接id,id)
    self:多开索要道具(玩家数据[主id].连接id,id,主id)
  else
    --self:索要行囊(玩家数据[id].连接id,id)
    self:多开索要行囊(玩家数据[主id].连接id,id,主id)
  end
  发送数据(玩家数据[id].连接id,3699.1)
  --道具刷新(id)
end

function 道具处理类:道具格子互换(连接id,id,数据)
  if 数据.放置id == nil or 数据.抓取id == nil or 数据.放置类型 == nil or 数据.抓取类型 == nil then
    return
  end
  if 数据.放置类型==数据.抓取类型 and 数据.放置id==数据.抓取id then
    发送数据(连接id,3699)
    道具刷新(id)
    return
  end
  -- if 数据.放置类型~=数据.抓取类型 and self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类==1000 then
  --   if self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].分类~=1 then
  --     常规提示(id,"#Y只有一级法宝才可以移动")
  --     return
  --   end
  -- end
  if 数据.放置类型~=数据.抓取类型 and 数据.抓取类型=="法宝" and 玩家数据[id].角色.数据[数据.放置类型][数据.放置id] ~= nil and  self.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类~= 1000 then
      常规提示(id,"#Y法宝栏只可以放入法宝哟")
      return
  end
  if 数据.放置类型~=数据.抓取类型 and 玩家数据[id].角色.数据[数据.放置类型][数据.放置id] ~= nil and  (self.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类== "帮派银票" or  self.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类== "跑商商品") then
      常规提示(id,"#Y该物品无法放入行囊")
      return
  end
  if 数据.放置类型~=数据.抓取类型 and 玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id] ~= nil and  (self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "帮派银票" or  self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "跑商商品") then
      常规提示(id,"#Y该物品无法放入道具")
      return
  end
  if 数据.放置类型=="行囊" and self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类=="帮派银票" then
      常规提示(id,"#Y帮派银票无法放入行囊")
      return
  end
  if 数据.放置类型=="法宝" and self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类~=1000 then
    常规提示(id,"#Y法宝栏只可以放入法宝哟")
    return
  end
  if 玩家数据[id].角色.数据[数据.放置类型][数据.放置id]==nil then --没有道具
    玩家数据[id].角色.数据[数据.放置类型][数据.放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
  else
    self.允许互换=true
    local 放置id=玩家数据[id].角色.数据[数据.放置类型][数据.放置id]
    local 抓取id=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    if 放置id~=nil and 抓取id~=nil and self.数据[抓取id].数量~=nil and self.数据[放置id].数量~=nil and self.数据[放置id].名称==self.数据[抓取id].名称 then
      if self.数据[抓取id].数量<99 and self.数据[放置id].数量<99 then
        if self.数据[抓取id].阶品~= nil and self.数据[放置id].阶品~=nil and self.数据[抓取id].阶品~=self.数据[放置id].阶品 then
          常规提示(id,"#Y不同阶品的物品，无法叠加")
          发送数据(连接id,3699)
          道具刷新(id)
          return
        elseif self.数据[抓取id].食材~= nil and self.数据[放置id].食材~=nil and self.数据[抓取id].食材~=self.数据[放置id].食材 then
          常规提示(id,"#Y不同食材的元宵，无法叠加")
          发送数据(连接id,3699)
          道具刷新(id)
          return
        elseif self.数据[抓取id].名称== "藏宝图" and self.数据[放置id].名称=="藏宝图" then
          常规提示(id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699)
          道具刷新(id)
          return
        elseif self.数据[抓取id].名称== "高级藏宝图" and self.数据[放置id].名称=="高级藏宝图" then
          常规提示(id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699)
          道具刷新(id)
          return
        elseif self.数据[抓取id].名称== "超级藏宝图" and self.数据[放置id].名称=="超级藏宝图" then
          常规提示(id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699)
          道具刷新(id)
          return
        end
        if self.数据[抓取id].数量+self.数据[放置id].数量<=99 then
          self.数据[放置id].数量=self.数据[放置id].数量+self.数据[抓取id].数量
          self.数据[抓取id]=nil
          玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
          self.允许互换=false
        else
          local 临时数量=self.数据[放置id].数量+self.数据[抓取id].数量-99
          self.数据[放置id].数量=99
          self.数据[抓取id].数量=临时数量
          self.允许互换=false
        end
      end
    end
    if self.允许互换 then
      玩家数据[id].角色.数据[数据.放置类型][数据.放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
      玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=放置id
    end
  end
  if 数据.放置类型=="道具" then
    self:索要道具(连接id,id)
  elseif 数据.放置类型=="法宝" then
    self:索要法宝(连接id,id)
  else
    self:索要行囊(连接id,id)
  end
  发送数据(连接id,3699)
  道具刷新(id)
end



function 道具处理类:多开道具格子互换(连接id,id,数据,主id)
  if 数据.放置id == nil or 数据.抓取id == nil or 数据.放置类型 == nil or 数据.抓取类型 == nil then
    return
  end
  if 数据.放置类型==数据.抓取类型 and 数据.放置id==数据.抓取id then
    发送数据(连接id,3699.1)
    --道具刷新(id)
    return
  end
  -- if 数据.放置类型~=数据.抓取类型 and self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类==1000 then
  --   if self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].分类~=1 then
  --     常规提示(id,"#Y只有一级法宝才可以移动")
  --     return
  --   end
  -- end


  --玩家数据[id].道具.数据
  if 数据.放置类型~=数据.抓取类型 and 数据.抓取类型=="法宝" and 玩家数据[id].角色.数据[数据.放置类型][数据.放置id] ~= nil and  玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类~= 1000 then
      常规提示(主id,"#Y法宝栏只可以放入法宝哟")
      return
  end
  if 数据.放置类型~=数据.抓取类型 and 玩家数据[id].角色.数据[数据.放置类型][数据.放置id] ~= nil and  (玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类== "帮派银票" or  玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.放置类型][数据.放置id]].总类== "跑商商品") then
      常规提示(主id,"#Y该物品无法放入行囊")
      return
  end
  if 数据.放置类型~=数据.抓取类型 and 玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id] ~= nil and  (玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "帮派银票" or  玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "跑商商品") then
      常规提示(主id,"#Y该物品无法放入道具")
      return
  end
  if 数据.放置类型=="行囊" and 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类=="帮派银票" then
      常规提示(主id,"#Y帮派银票无法放入行囊")
      return
  end
  if 数据.放置类型=="法宝" and 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类~=1000 then
    常规提示(主id,"#Y法宝栏只可以放入法宝哟")
    return
  end
  if 玩家数据[id].角色.数据[数据.放置类型][数据.放置id]==nil then --没有道具
    玩家数据[id].角色.数据[数据.放置类型][数据.放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
  else
    self.允许互换=true
    local 放置id=玩家数据[id].角色.数据[数据.放置类型][数据.放置id]
    local 抓取id=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    if 放置id~=nil and 抓取id~=nil and 玩家数据[id].道具.数据[抓取id].数量~=nil and 玩家数据[id].道具.数据[放置id].数量~=nil and 玩家数据[id].道具.数据[放置id].名称==玩家数据[id].道具.数据[抓取id].名称 then
      if 玩家数据[id].道具.数据[抓取id].数量<99 and 玩家数据[id].道具.数据[放置id].数量<99 then
        if 玩家数据[id].道具.数据[抓取id].阶品~= nil and 玩家数据[id].道具.数据[放置id].阶品~=nil and 玩家数据[id].道具.数据[抓取id].阶品~=玩家数据[id].道具.数据[放置id].阶品 then
          常规提示(主id,"#Y不同阶品的物品，无法叠加")
          发送数据(连接id,3699.1)
          --道具刷新(id)
          return
        elseif 玩家数据[id].道具.数据[抓取id].食材~= nil and 玩家数据[id].道具.数据[放置id].食材~=nil and 玩家数据[id].道具.数据[抓取id].食材~=玩家数据[id].道具.数据[放置id].食材 then
          常规提示(主id,"#Y不同食材的元宵，无法叠加")
          发送数据(连接id,3699.1)
          --道具刷新(id)
          return
        elseif 玩家数据[id].道具.数据[抓取id].名称== "藏宝图" and 玩家数据[id].道具.数据[放置id].名称=="藏宝图" then
          常规提示(主id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699.1)
          --道具刷新(id)
          return
        elseif 玩家数据[id].道具.数据[抓取id].名称== "高级藏宝图" and 玩家数据[id].道具.数据[放置id].名称=="高级藏宝图" then
          常规提示(主id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699.1)
          --道具刷新(id)
          return
        elseif 玩家数据[id].道具.数据[抓取id].名称== "超级藏宝图" and 玩家数据[id].道具.数据[放置id].名称=="超级藏宝图" then
          常规提示(主id,"#Y藏宝图，无法叠加")
          发送数据(连接id,3699.1)
          --道具刷新(id)
          return
        end
        if 玩家数据[id].道具.数据[抓取id].数量+玩家数据[id].道具.数据[放置id].数量<=99 then
          玩家数据[id].道具.数据[放置id].数量=玩家数据[id].道具.数据[放置id].数量+玩家数据[id].道具.数据[抓取id].数量
          玩家数据[id].道具.数据[抓取id]=nil
          玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
          self.允许互换=false
        else
          local 临时数量=玩家数据[id].道具.数据[放置id].数量+玩家数据[id].道具.数据[抓取id].数量-99
          玩家数据[id].道具.数据[放置id].数量=99
          玩家数据[id].道具.数据[抓取id].数量=临时数量
          self.允许互换=false
        end
      end
    end
    if self.允许互换 then
      玩家数据[id].角色.数据[数据.放置类型][数据.放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
      玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=放置id
    end
  end
  if 数据.放置类型=="道具" then
    --self:索要道具(连接id,id)
    self:多开索要道具(连接id,id,主id)
  elseif 数据.放置类型=="法宝" then
    --self:索要法宝(连接id,id,主id)
    self:多开索要法宝(连接id,id)
  else
    --self:索要行囊(连接id,id,主id)
    self:多开索要行囊(连接id,id)
  end
  发送数据(连接id,3699.1)
  --道具刷新(id)
end






function 道具处理类:道具格子互换1(连接id,id,数据)
  local 放置id = 玩家数据[id].角色:取道具格子1(数据.放置类型)
  if 放置id  == 0 then
    常规提示(id,"#Y"..数据.放置类型.."已满！")
    道具刷新(id)
    return
  end
  if 数据.放置类型==数据.抓取类型 then
    发送数据(连接id,3699)
    return
  end
  if 玩家数据[id].角色.数据[数据.抓取类型] == nil or 玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id] == nil or self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]] == nil then
    发送数据(连接id,3699)
    return
  end
  if self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类==1000 and 数据.放置类型~=数据.抓取类型 then
    -- if self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].分类~=1 then
    --   发送数据(连接id,3699)
    --   常规提示(id,"#Y只有一级法宝才可以移动")
    --   return
    -- end
  end
  if 数据.放置类型~="道具" and 数据.放置类型~="行囊" and 数据.放置类型~="法宝" then
    发送数据(连接id,3699)
    return
  end
  if 数据.抓取类型~="道具" and 数据.抓取类型~="行囊" and 数据.抓取类型~="法宝" then
    发送数据(连接id,3699)
    return
  end
  if 数据.放置类型=="法宝" and self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类~=1000 then
    发送数据(连接id,3699)
    常规提示(id,"#Y法宝栏只可以放入法宝哟")
    return
  end
  if 数据.放置类型=="行囊" and (self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类=="帮派银票" or  self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "跑商商品") then
    发送数据(连接id,3699)
    常规提示(id,"#Y帮派银票以及跑商物品无法放入行囊")
    return
  end
  if 放置id~=0 then --没有道具
    玩家数据[id].角色.数据[数据.放置类型][放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
    if 数据.放置类型=="道具" then
      self:索要道具(连接id,id)
    elseif 数据.放置类型=="法宝" then
      self:索要法宝(连接id,id)
    else
      self:索要行囊(连接id,id)
    end
    发送数据(连接id,3699)
    道具刷新(id)
  end
end


function 道具处理类:多开道具格子互换1(连接id,id,数据,主id)
  local 放置id = 玩家数据[id].角色:多开取道具格子1(数据.放置类型,id)
  if 放置id  == 0 then
    常规提示(主id,"#Y"..数据.放置类型.."已满！")
    道具刷新(id)
    return
  end
  if 数据.放置类型==数据.抓取类型 then
    发送数据(连接id,3699.1)
    return
  end
  if 玩家数据[id].角色.数据[数据.抓取类型] == nil or 玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id] == nil or 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]] == nil then
    发送数据(连接id,3699.1)
    return
  end
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类==1000 and 数据.放置类型~=数据.抓取类型 then
    -- if self.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].分类~=1 then
    --   发送数据(连接id,3699)
    --   常规提示(id,"#Y只有一级法宝才可以移动")
    --   return
    -- end
  end
  if 数据.放置类型~="道具" and 数据.放置类型~="行囊" and 数据.放置类型~="法宝" then
    发送数据(连接id,3699.1)
    return
  end
  if 数据.抓取类型~="道具" and 数据.抓取类型~="行囊" and 数据.抓取类型~="法宝" then
    发送数据(连接id,3699.1)
    return
  end
  if 数据.放置类型=="法宝" and 玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类~=1000 then
    发送数据(连接id,3699.1)
    常规提示(主id,"#Y法宝栏只可以放入法宝哟")
    return
  end
  if 数据.放置类型=="行囊" and (玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类=="帮派银票" or  玩家数据[id].道具.数据[玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]].总类== "跑商商品") then
    发送数据(连接id,3699.1)
    常规提示(主id,"#Y帮派银票以及跑商物品无法放入行囊")
    return
  end
  if 放置id~=0 then --没有道具
    玩家数据[id].角色.数据[数据.放置类型][放置id]=玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]
    玩家数据[id].角色.数据[数据.抓取类型][数据.抓取id]=nil
    if 数据.放置类型=="道具" then
      self:多开索要道具(连接id,id,主id)
    elseif 数据.放置类型=="法宝" then
      self:多开索要法宝(连接id,id)
    else
      self:多开索要行囊(连接id,id)
    end
    发送数据(连接id,3699.1)
    道具刷新(id)
  end
end

function 道具处理类:索要法宝(连接id,id)
  self.发送数据={法宝={},佩戴={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.法宝[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.法宝[n]]==nil then
        玩家数据[id].角色.数据.法宝[n]=nil
      else
        self.发送数据.法宝[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.法宝[n]]))
      end
    end
  end
  for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n]~=nil then
      self.发送数据.佩戴[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.法宝佩戴[n]]))
    end
  end
  发送数据(连接id,3527,self.发送数据)
end

function 道具处理类:多开索要法宝(连接id,id)
  self.发送数据={法宝={},佩戴={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.法宝[n]~=nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝[n]]==nil then
        玩家数据[id].角色.数据.法宝[n]=nil
      else
        self.发送数据.法宝[n]=table.loadstring(table.tostring(玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝[n]]))
      end
    end
  end
  for n=1,3 do
    if 玩家数据[id].角色.数据.法宝佩戴[n]~=nil then
      self.发送数据.佩戴[n]=table.loadstring(table.tostring(玩家数据[id].道具.数据[玩家数据[id].角色.数据.法宝佩戴[n]]))
    end
  end
  发送数据(连接id,3527.1,self.发送数据)
end
function 道具处理类:多开提取(连接id,数据)
local 放置id=数据.数字id+0
local 提取id=数据.多开id+0
local 窗口=数据.窗口
local 包裹类型=数据.类型
local 道具编号=数据.编号+0
local 道具格子 = 玩家数据[放置id].角色:取道具格子()
if 道具格子==0 then
    常规提示(放置id,"您的道具栏物品已经满啦！嘎嘎")
    return
end

 if 窗口=="主人公" and 包裹类型=="道具" then
    ----删除提取的道具
    提取道具id=玩家数据[提取id].角色.数据[包裹类型][道具编号]
  if 提取道具id~=nil and 玩家数据[提取id].道具.数据[提取道具id]~=nil then
    提取道具数据=玩家数据[提取id].道具.数据[提取道具id]
    提取道具识别码=玩家数据[提取id].道具.数据[提取道具id].识别码
    玩家数据[提取id].道具.数据[提取道具id]=nil
    玩家数据[提取id].角色.数据[包裹类型][道具编号]=nil
    ---给予提取道具
      local 新格子=玩家数据[放置id].角色:取道具格子()
      local 新id=玩家数据[放置id].道具:取新编号()
      玩家数据[放置id].道具.数据[新id]=提取道具数据
      玩家数据[放置id].角色.数据.道具[新格子]=新id
      玩家数据[放置id].道具.数据[新id].识别码=放置id.."_"..os.time().."_"..取随机数(20,10000).."_"..取随机数(111111111111,999999999999)
      常规提示(放置id,"#Y/道具提取成功！")
      道具刷新(放置id)
      多开道具刷新(提取id,玩家数据[放置id].连接id)
  end

 else
    常规提示(放置id,"#Y/请放置到道具栏在提取！")
 end

end


function 道具处理类:多开索要道具(连接id,id)
  self.发送数据={道具={}}
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      for i=1,100 do
        if i ~= n and 玩家数据[id].角色.数据.道具[i] ~= nil and 玩家数据[id].角色.数据.道具[i] == 玩家数据[id].角色.数据.道具[n] then
          --玩家数据[id].角色.数据.道具[i] = nil
        end
      end
    end
  end
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      --if self.数据[玩家数据[id].角色.数据.道具[n]]==nil then
       -- 玩家数据[id].角色.数据.道具[n]=nil
     -- else
        self.发送数据.道具[n]=table.loadstring(table.tostring(玩家数据[id].道具.数据[玩家数据[id].角色.数据.道具[n]]))
     -- end
    end
  end
  self.发送数据.体力=玩家数据[id].角色.数据.体力
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  self.发送数据.总格=100
  发送数据(连接id,8011,self.发送数据)--发送道具
  --发送数据(连接id,8019,玩家数据[id].角色:取装备数据())--发送6个装备
end

function 道具处理类:索要道具(连接id,id)
  self.发送数据={道具={}}
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      for i=1,100 do
        if i ~= n and 玩家数据[id].角色.数据.道具[i] ~= nil and 玩家数据[id].角色.数据.道具[i] == 玩家数据[id].角色.数据.道具[n] then
          玩家数据[id].角色.数据.道具[i] = nil
        end
      end
    end
  end
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.道具[n]]==nil then
        玩家数据[id].角色.数据.道具[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.道具[n]]))
      end
    end
  end
  self.发送数据.体力=玩家数据[id].角色.数据.体力
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  self.发送数据.总格=100
  发送数据(连接id,3501,self.发送数据)
end

function 道具处理类:索要道具1(id)
  self.发送数据={道具={}}
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.道具[n]]==nil then
        玩家数据[id].角色.数据.道具[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.道具[n]]))
      end
    end
  end
  self.发送数据.体力=玩家数据[id].角色.数据.体力
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  return self.发送数据
end

function 道具处理类:索要道具2(id)
  self.发送数据={道具={}}
  for n=1,100 do
    if 玩家数据[id].角色.数据.道具[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.道具[n]]==nil then
        玩家数据[id].角色.数据.道具[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.道具[n]]))
      end
    end
  end
  return self.发送数据
end

function 道具处理类:索要道具3(id)
  self.发送数据 = {道具={}}
  for n = 1, 100 do
    if 玩家数据[id].角色.数据.道具[n] ~= nil and self.数据[玩家数据[id].角色.数据.道具[n]] ~= nil then
      self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.道具[n]]))
    end
  end
  self.发送数据.体力=玩家数据[id].角色.数据.体力
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银

  return self.发送数据
end

function 道具处理类:索要道具4(id,类型)
  self.发送数据={道具={}}
  -- print(id,类型)
  for n=1,20 do
    if 玩家数据[id].角色.数据[类型][n]~=nil then
      if self.数据[玩家数据[id].角色.数据[类型][n]]==nil then
        玩家数据[id].角色.数据[类型][n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据[类型][n]]))
      end
    end
  end
  self.发送数据.数据类型=类型
  return self.发送数据
end

function 道具处理类:索要道具5(id,类型)
  self.发送数据={道具={}}
  local 道具数量=20
  if 类型=="道具" then
	道具数量=100
  end
  -- print(id,类型)
  for n=1,道具数量 do
    if 玩家数据[id].角色.数据[类型][n]~=nil then
      if self.数据[玩家数据[id].角色.数据[类型][n]]==nil then
        玩家数据[id].角色.数据[类型][n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据[类型][n]]))
      end
    end
  end
  self.发送数据.数据类型=类型
  return self.发送数据
end

function 道具处理类:重置法宝回合(id)
  for n=1,20 do
    if 玩家数据[id].角色.数据.法宝[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.法宝[n]]==nil then
        玩家数据[id].角色.数据.法宝[n]=nil
      else
        self.数据[玩家数据[id].角色.数据.法宝[n]].回合=nil
      end
    end
  end
end

function 道具处理类:索要法宝2(id,回合)
  self.发送数据={道具={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.法宝[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.法宝[n]]==nil then
        玩家数据[id].角色.数据.法宝[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.法宝[n]]))
        if self.发送数据.道具[n].回合~=nil then
          if self.发送数据.道具[n].回合<=回合 then
            self.发送数据.道具[n].回合=nil
          else
            self.发送数据.道具[n].回合=self.发送数据.道具[n].回合-回合
          end
        end
      end
    end
  end
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  return self.发送数据
end

function 道具处理类:索要法宝1(id,回合)
  self.发送数据={道具={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.法宝[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.法宝[n]]==nil then
        玩家数据[id].角色.数据.法宝[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.法宝[n]]))
        if self.发送数据.道具[n].回合~=nil then
          if self.发送数据.道具[n].回合<=回合 then
            self.发送数据.道具[n].回合=nil
          else
            self.发送数据.道具[n].回合=self.发送数据.道具[n].回合-回合
          end
        end
      end
    end
  end
  return self.发送数据
end

function 道具处理类:索要仓库道具(id,页)
  self.发送数据={道具={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.道具仓库[页][n]~=nil then
      if self.数据[玩家数据[id].角色.数据.道具仓库[页][n]]==nil then
        玩家数据[id].角色.数据.道具仓库[页][n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.道具仓库[页][n]]))
      end
    end
  end
  return self.发送数据
end

function 道具处理类:索要行囊(连接id,id)
 self.发送数据={道具={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.行囊[n]~=nil then
      if self.数据[玩家数据[id].角色.数据.行囊[n]]==nil then
        玩家数据[id].角色.数据.行囊[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(self.数据[玩家数据[id].角色.数据.行囊[n]]))
      end
    end
  end
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  发送数据(连接id,3502,self.发送数据)
end


function 道具处理类:多开索要行囊(连接id,id)
 self.发送数据={道具={}}
  for n=1,20 do
    if 玩家数据[id].角色.数据.行囊[n]~=nil then
      if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.行囊[n]]==nil then
         玩家数据[id].角色.数据.行囊[n]=nil
      else
        self.发送数据.道具[n]=table.loadstring(table.tostring(玩家数据[id].道具.数据[玩家数据[id].角色.数据.行囊[n]]))
      end
    end
  end
  self.发送数据.银子=玩家数据[id].角色.数据.银子
  self.发送数据.储备=玩家数据[id].角色.数据.储备
  self.发送数据.存银=玩家数据[id].角色.数据.存银
  发送数据(连接id,3502.1,self.发送数据)
end

function 道具处理类:帮派点修处理(连接id,数字id,数据)
    local 消耗银子 = 0
    local 帮派编号 = 玩家数据[数字id].角色.数据.帮派数据.编号
    local 帮派资材 = 帮派数据[帮派编号].帮派资材.当前
    local 帮贡 = 玩家数据[数字id].角色.数据.帮贡
    local 帮贡上限 = 帮派数据[帮派编号].成员数据[数字id].帮贡.上限
    local 帮贡当前 = 帮派数据[帮派编号].成员数据[数字id].帮贡.当前
    if 数据.修炼项目 == "攻击修炼" or 数据.修炼项目 == "法术修炼" or 数据.修炼项目 == "猎术修炼" then
        消耗银子 = 30000
    else
        消耗银子 = 20000
    end
    if 数据.修炼项目 == nil then
      常规提示(数字id,"#Y/请选择你要提升的修炼")
      return
    end
    if 玩家数据[数字id].角色.数据.修炼[数据.修炼项目][1]>=玩家数据[数字id].角色.数据.修炼[数据.修炼项目][3] then
      常规提示(数字id,"#Y/你的此项修炼已经达上限")
      return
    end
    if 取银子(数字id)+取储备(数字id) < 消耗银子 then
        常规提示(数字id,"#Y/你的当前的银子不够修炼哦")
        return
    end
    if 帮贡 < 5 then
        常规提示(数字id,"#Y/当前帮贡不足5点，无法进行帮派点修")
        return
    end
    if 帮贡当前 < 5 then
        常规提示(数字id,"#Y/当前帮贡不足5点，无法进行帮派点修")
        return
    end
      if 帮派资材 < 5 then
        常规提示(数字id,"#Y/贵帮当前的资材不足5点，无法进行帮派点修")
        return
      end
    -- 扣除帮贡(数字id,15)
    帮派数据[帮派编号].帮派资材.当前 = 帮派数据[帮派编号].帮派资材.当前 -5
    玩家数据[数字id].角色.数据.帮贡 = 玩家数据[数字id].角色.数据.帮贡 -5
    帮派数据[帮派编号].成员数据[数字id].帮贡.当前 = 帮派数据[帮派编号].成员数据[数字id].帮贡.当前 -5
    玩家数据[数字id].角色:扣除储备和银子(消耗银子,"帮派点修")
    玩家数据[数字id].角色:帮派添加人物修炼经验(数字id,10,数据.修炼项目)
end

function 道具处理类:比武奖励(id,分组)
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 比武大会数据[分组]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 比武大会数据[分组][id]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 比武大会数据[分组][id].奖励==false then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 道具格子<=5 then
    常规提示(id,"您的道具栏物品已经满啦")
    return 0
  else
    local 书铁种类=取随机数(1,#书铁范围)
    比武大会数据[分组][id].奖励=false
    self.经验奖励=math.floor(玩家数据[id].角色.数据.等级*玩家数据[id].角色.数据.等级*玩家数据[id].角色.数据.等级)
    self.银子奖励=比武大会数据[分组][id].积分*20000+100000
    玩家数据[id].角色:添加经验(self.经验奖励,"比武大会奖励")
    玩家数据[id].角色:添加银子(self.银子奖励,"比武大会奖励",1)
    添加仙玉(200,玩家数据[id].账号,id,"英雄比武大会")
    self:给予道具(id,"灵饰指南书",{8})
    self:给予道具(id,"元灵晶石",{8})
    self:给予道具(id,"制造指南书",90,书铁种类)
    self:给予道具(id,"百炼精铁",90,书铁种类)
    玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+50
    --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+50
    常规提示(id,"你领取了比武大会奖励:获得50点比武积分和80级灵饰书铁,90级装备书铁")
    if 分组=="精锐组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐状元")
          添加仙玉(200,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+200
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+200
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
          self:给予道具(id,"制造指南书",110,书铁种类)
          self:给予道具(id,"百炼精铁",110,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得200点比武积分和100级灵饰书铁,110级装备书铁")
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐榜眼")
          添加仙玉(150,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+150
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+150
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得150点比武积分和100级灵饰书铁,100级装备书铁")
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐探花")
          添加仙玉(100,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+100
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+100
          self:给予道具(id,"灵饰指南书",{8})
          self:给予道具(id,"元灵晶石",{8})
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得100点比武积分和80级灵饰书铁,100级装备书铁")
      end
    elseif 分组=="勇武组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐状元")
          添加仙玉(200,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+200
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+200
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
          self:给予道具(id,"制造指南书",110,书铁种类)
          self:给予道具(id,"百炼精铁",110,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得200点比武积分和100级灵饰书铁,110级装备书铁")
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐榜眼")
          添加仙玉(150,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+150
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+150
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得150点比武积分和100级灵饰书铁,100级装备书铁")
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会精锐探花")
          添加仙玉(100,玩家数据[id].账号,id,"英雄比武大会")
          玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+100
          --玩家数据[id].角色.数据.比武积分.总积分=玩家数据[id].角色.数据.比武积分.总积分+100
          self:给予道具(id,"灵饰指南书",{8})
          self:给予道具(id,"元灵晶石",{8})
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
          常规提示(id,"你领取了比武大会奖励:获得200点比武积分和100级灵饰书铁,110级装备书铁")
      end
    elseif 分组=="神威组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会神威状元")
          添加仙玉(70,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会神威榜眼")
          添加仙玉(60,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{10})
          self:给予道具(id,"元灵晶石",{10})
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会神威探花")
          添加仙玉(50,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"制造指南书",100,书铁种类)
          self:给予道具(id,"百炼精铁",100,书铁种类)
      end
    elseif 分组=="天科组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天科状元")
          添加仙玉(80,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{12})
          self:给予道具(id,"元灵晶石",{12})
          self:给予道具(id,"制造指南书",120,书铁种类)
          self:给予道具(id,"百炼精铁",120,书铁种类)
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天科榜眼")
          添加仙玉(70,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{12})
          self:给予道具(id,"元灵晶石",{12})
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天科探花")
          添加仙玉(60,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"制造指南书",120,书铁种类)
          self:给予道具(id,"百炼精铁",120,书铁种类)
      end
    elseif 分组=="天启组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天启状元")
          添加仙玉(90,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{14})
          self:给予道具(id,"元灵晶石",{14})
          self:给予道具(id,"制造指南书",140,书铁种类)
          self:给予道具(id,"百炼精铁",140,书铁种类)
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天启榜眼")
          添加仙玉(80,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{14})
          self:给予道具(id,"元灵晶石",{14})
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天启探花")
          添加仙玉(70,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"制造指南书",140,书铁种类)
          self:给予道具(id,"百炼精铁",140,书铁种类)
      end
    elseif 分组=="天元组" then
      if 比武大会[分组][1]~=nil and 比武大会[分组][1].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天元状元")
          添加仙玉(100,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{14})
          self:给予道具(id,"元灵晶石",{14})
          self:给予道具(id,"制造指南书",150,书铁种类)
          self:给予道具(id,"百炼精铁",150,书铁种类)
      end
      if 比武大会[分组][2]~=nil and 比武大会[分组][2].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天元榜眼")
          添加仙玉(90,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"灵饰指南书",{14})
          self:给予道具(id,"元灵晶石",{14})
      end
      if 比武大会[分组][3]~=nil and 比武大会[分组][3].id==id then
          玩家数据[id].角色:添加称谓(id,"英雄会天元探花")
          添加仙玉(80,玩家数据[id].账号,id,"英雄比武大会")
          self:给予道具(id,"制造指南书",150,书铁种类)
          self:给予道具(id,"百炼精铁",150,书铁种类)
      end
    end
    if 玩家数据[id].角色.数据.比武积分.总积分>=40 and 玩家数据[id].角色.数据.等级>=50 then
      玩家数据[id].角色:添加称谓(id,"江湖小虾")
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=80 and 玩家数据[id].角色.数据.等级>=60 then
      玩家数据[id].角色:删除称谓(id,"江湖小虾")
      玩家数据[id].角色:添加称谓(id,"明日之星")
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=140 and 玩家数据[id].角色.数据.等级>=70 then
      玩家数据[id].角色:删除称谓(id,"明日之星")
      玩家数据[id].角色:添加称谓(id,"武林高手")
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=200 and 玩家数据[id].角色.数据.等级>=80 then
      玩家数据[id].角色:删除称谓(id,"武林高手")
      玩家数据[id].角色:添加称谓(id,"绝世奇才")
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=280 and 玩家数据[id].角色.数据.等级>=90 then
      玩家数据[id].角色:删除称谓(id,"绝世奇才")
      玩家数据[id].角色:添加称谓(id,"威震三界")
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=400 and 玩家数据[id].角色.数据.等级>=100 then
      玩家数据[id].角色:删除称谓(id,"威震三界")
      if 玩家数据[id].角色.数据.性别=="男" then
          玩家数据[id].角色:添加称谓(id,"盖世英雄")
      else
          玩家数据[id].角色:添加称谓(id,"绝代佳人")
      end
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=3000 and 玩家数据[id].角色.数据.等级>=100 then
      if 玩家数据[id].角色.数据.性别=="男" then
        玩家数据[id].角色:删除称谓(id,"盖世英雄")
        玩家数据[id].角色:添加称谓(id,"气吞山河")
      else
        玩家数据[id].角色:删除称谓(id,"绝代佳人")
        玩家数据[id].角色:添加称谓(id,"绝世独立")
      end
    elseif 玩家数据[id].角色.数据.比武积分.总积分>=5000 and 玩家数据[id].角色.数据.等级>=155 then
      if 玩家数据[id].角色.数据.性别=="男" then
        玩家数据[id].角色:删除称谓(id,"气吞山河")
        玩家数据[id].角色:添加称谓(id,"战天斗地")
      else
        玩家数据[id].角色:删除称谓(id,"绝世独立")
        玩家数据[id].角色:添加称谓(id,"姑射神人")
      end
    end
  end
end

function 道具处理类:首席争霸奖励(id,门派)
  if 首席争霸数据[门派]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 首席争霸数据[门派][id]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 首席争霸数据[门派][id].奖励==false then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  else
    local 等级=玩家数据[id].角色.数据.等级
    local 获得仙玉=300
    local 仙玉1=100
    首席争霸数据[门派][id].奖励=false
    self.经验奖励=math.floor(等级*等级*等级)
    self.银子奖励=100000
    if 首席争霸[门派]~=nil and 首席争霸[门派].id==id then
    玩家数据[id].角色:添加经验(self.经验奖励,"首席争霸赛奖励")
    玩家数据[id].角色:添加银子(self.银子奖励,"首席争霸赛奖励",1)
    添加仙玉(获得仙玉,玩家数据[id].账号,id,"首席争霸赛奖励")
    else
    玩家数据[id].角色:添加经验(self.经验奖励,"首席争霸赛奖励")
    玩家数据[id].角色:添加银子(self.银子奖励,"首席争霸赛奖励",1)
    添加仙玉(仙玉1,玩家数据[id].账号,id,"首席争霸赛奖励")
    end
  end
end

function 道具处理类:帮派竞赛奖励(id,编号)
  local 道具格子=玩家数据[id].角色:取道具格子2()
  if 帮派竞赛数据==nil or 帮派竞赛数据[编号]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 帮派竞赛数据[编号][id]==nil then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  elseif 帮派竞赛数据[编号][id].奖励==false then
    常规提示(id,"你没有这样的奖励可以领取")
    return 0
  else
    帮派竞赛数据[编号][id].奖励=false
    local 等级=玩家数据[id].角色.数据.等级
    self.经验奖励=math.floor(等级*等级*等级)
    self.银子奖励=帮派竞赛数据[编号][id].积分*20000+1000000
    玩家数据[id].角色.数据.比武积分.当前积分=玩家数据[id].角色.数据.比武积分.当前积分+50000
    添加仙玉(50000,玩家数据[id].账号,id,"帮派竞赛奖励")
    玩家数据[id].角色:添加经验(self.经验奖励,"帮派竞赛奖励")
    玩家数据[id].角色:添加银子(self.银子奖励,"帮派竞赛奖励",1)
    玩家数据[id].道具:给予书铁(id,{12,12},"指南书")
    玩家数据[id].道具:给予书铁(id,{12,12},"精铁")
    常规提示(id,"你领取了帮派竞赛奖励,获得#R50000#点比武积分")
  end
end
function 道具处理类:一键出售处理(连接id,id)
for b,c in  pairs (玩家数据[id].角色.数据.道具) do

     local 数据={}
   数据.类型 = "道具"
   数据.物品 = b
   self:出售道具(连接id,id,数据)
   end
 end
function 道具处理类:一键出售道具1(连接id,id,数据)
  if 玩家数据[id].角色.数据[数据.类型][数据.物品] == nil then

      return
  end

  local 物品名称 = self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称

  local 物品数量 = 1
  local 出售价格 = 1
  local 出售总价 = 0
  if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].名称=="帮派银票" then
      return
  end

    if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].级别限制 ~= nil and tonumber(self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].级别限制) > 160 then
      return
  end
   if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].不可交易 then
      return
  end

  if tonumber(f函数.读配置(程序目录..[[功能设置\]].."一键出售价格.ini","自定义一键出售",物品名称)) == nil then
    常规提示(id,"#Y背包#G"..物品名称.."#Y无法出售")
      return
  else

    出售价格 = tonumber(f函数.读配置(程序目录..[[功能设置\]].."一键出售价格.ini","自定义一键出售",物品名称))
   常规提示(id,"#Y您回收掉了#G"..物品名称.."#Y回收价格为#G"..出售价格)
   if 出售价格 >=1000000 then
    出售价格= 1000000
   end
    if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].数量 ~= nil then
      物品数量 = self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].数量
    end
    出售总价 = 出售价格*物品数量
    if self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码==nil then
      self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]].识别码="无法识别"
    end

    玩家数据[id].角色:添加银子(出售总价,"系统出售",1)
    self.数据[玩家数据[id].角色.数据[数据.类型][数据.物品]]=nil
    玩家数据[id].角色.数据[数据.类型][数据.物品]=nil
    self:刷新道具行囊(id,数据.类型)
  end
end


function 道具处理类:发放雪人奖励(id)
  任务处理类:全服蚩尤(self.任务id,id组)
  local 名称="1千储备"
  玩家数据[id].角色:添加储备(1000,"雪人奖励",1)
  if 取随机数() <= 10 then
    广播消息({内容=format("#S(雪人奖励)#Y#R/%s#Y获得雪人赠送的#G/%s#Y",玩家数据[id].角色.数据.名称,名称),频道="xt"})
  end
end

function 道具处理类:雪人积分兑换(id)
  if 玩家数据[id].角色.数据.春节雪人==nil then
    常规提示(id,"你还没有获得雪人积分。")
    return
  elseif 玩家数据[id].角色.数据.春节雪人<500 then
    常规提示(id,"本次操作需要消耗500点雪人积分。")
    return
  end
  玩家数据[id].角色.数据.春节雪人 = 玩家数据[id].角色.数据.春节雪人 - 500
end
------嘎嘎 实用功能












function 道具处理类:显示(x,y) end

return 道具处理类