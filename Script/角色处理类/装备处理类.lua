-- @Author: baidwwy
-- @Date:   2023-03-10 11:49:54
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-01-22 20:42:08
-- @Author: baidwwy
-- @Date:   2023-03-10 11:49:54
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2023-05-14 12:40:56
--======================================================================--
-- 高级礼包装备打造公式  === 强化打造
-- 礼包装备打造公式  ====  普通打造
--- 摩托修改强化打造同步官服
--  生成指定装备礼包 ==普通打造 ==野外掉落
--======================================================================--
local 装备处理类 = class()
local floor=math.floor
local remove = table.remove
local 附加范围={"力量","敏捷","体质","耐力","魔力"}
local 附加上限={
  [60]={27,22}
  ,[80]={30,25}
  ,[90]={33,28}
  ,[100]={36,31}
  ,[110]={39,34}
  ,[120]={42,37}
  ,[130]={45,40}
  ,[140]={48,43}
  ,[150]={51,46}
  ,[160]={54,49}
}


function 装备处理类:初始化()
  self.打造物品=绑定等级物品()
end

function 装备处理类:数据处理(连接id,序号,id,内容)
  if 序号==4501 then
    if 玩家数据[id].打造方式==2 and 玩家数据[id].角色:取任务(5)~=0 then
      常规提示(id,"#Y/你已经有一个打造任务在进行了")
      return
    elseif 玩家数据[id].打造方式==nil then
      return
    end
    self:打造类型处理(连接id,序号,id,内容)
  elseif 序号==4502 then --装备开运
    self:装备开运(连接id,序号,id,内容)
   elseif 序号==4502.1 then --装备开运
    self:装备开启星位(连接id,序号,id,内容)
  elseif 序号==4503 then
    self:宝石镶嵌处理(连接id,序号,id,内容)
  elseif 序号==4504 then
    self:宝石合成处理(连接id,序号,id,内容)
  elseif 序号==4505 then
    self:装备修理处理(连接id,序号,id,内容)
  elseif 序号==4506 then
    self:装备熔炼处理(连接id,序号,id,内容)
  elseif 序号==4507 then
    发送数据(玩家数据[id].连接id,14,玩家数据[id].道具:索要道具1(id))
    玩家数据[id].打造方式=1
  elseif 序号==4508 then
    if 定制装备融合 then
      self:装备熔合处理(连接id,序号,id,内容)
    else
      发送数据(玩家数据[id].连接id,7,"#Y该功能尚未开放！")
    end
  elseif 序号==4510 then
    if 内容.序列1 ~=nil then
      self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列1]
      玩家数据[id].道具.数据[self.临时id1] = nil
      self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列2]
      玩家数据[id].道具.数据[self.临时id2].鉴定 = true
      玩家数据[id].道具.数据[self.临时id2].耐久 = 500
      if 玩家数据[id].道具.数据[self.临时id2].特效 ~= nil and 玩家数据[id].道具.数据[self.临时id2].级别限制>=90 and 玩家数据[id].道具.数据[self.临时id2].特效=="无级别限制" then
      广播消息({内容=format("#Y恭喜玩家#G%s#Y非常幸运的鉴定出#Z无级别限制#Y让我们恭喜他#4",玩家数据[id].角色.数据.名称),频道="xt"})
      end
      道具刷新(id)
      常规提示(id,"#Y/恭喜你，装备鉴定成功!")
    elseif 内容.数据~= nil then
      self.消耗体力 = floor(内容.数据.等级/2)
      if self.消耗体力 > 玩家数据[id].角色.数据.体力 then
          常规提示(id,"#Y/体力不够，无法鉴定该装备！")
      else
          玩家数据[id].角色.数据.体力 = 玩家数据[id].角色.数据.体力 - self.消耗体力
          self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列2]
          玩家数据[id].道具.数据[self.临时id2].鉴定 = true
          玩家数据[id].道具.数据[self.临时id2].耐久 = 500
      if 玩家数据[id].道具.数据[self.临时id2].特效 ~= nil and 玩家数据[id].道具.数据[self.临时id2].级别限制>=90 and 玩家数据[id].道具.数据[self.临时id2].特效=="无级别限制" then
      广播消息({内容=format("#Y恭喜玩家#G%s#Y非常幸运的鉴定出#Z无级别限制#Y让我们恭喜他#4",玩家数据[id].角色.数据.名称),频道="xt"})
      end
          道具刷新(id)
          常规提示(id,"#Y/恭喜你，装备鉴定成功!")
      end
    end

  elseif 序号==4511 then
    self:添加符石(id,内容.道具id,内容.装备id)
  elseif 序号==4512 then
    self:装备附魔(连接id,序号,id,内容)
  elseif 序号==4513 then
    self:技能附魔(连接id,序号,id,内容)
  elseif 序号==4514 then
    self:装备附魔宝珠(连接id,序号,id,内容)
  elseif 序号==4515 then
    self:装备碎星锤(连接id,序号,id,内容)
  elseif 序号==4516 then
    self:装备灵箓(连接id,序号,id,内容)
  elseif 序号==4517 then
    幻化处理类:数据处理(连接id,序号,id,内容)
  end
end

function 装备处理类:装备开启星位(连接id,序号,id,内容)
  -- table.print(内容)
  local 装备编号 = 玩家数据[id].角色.数据.道具[内容.序列]
  if 玩家数据[id].道具.数据[装备编号].总类~=2 or 玩家数据[id].道具.数据[装备编号].灵饰 or 玩家数据[id].道具.数据[装备编号].分类>6 then
    常规提示(id,"少侠，只有人物装备才可以开启星位。")
    return
  elseif 玩家数据[id].道具.数据[装备编号].级别限制==nil and 玩家数据[id].道具.数据[装备编号].级别限制<60 then
    常规提示(id,"少侠，需要装备等级达到60级才可以开启星位。")
    return
  elseif 玩家数据[id].道具.数据[装备编号].开运孔数==nil or 玩家数据[id].道具.数据[装备编号].开运孔数.上限<玩家数据[id].道具.数据[装备编号].开运孔数.当前 then
    常规提示(id,"少侠，你的装备孔数没满，不能开启星位。")
    return
  elseif 玩家数据[id].道具.数据[装备编号].星位组~=nil then
    常规提示(id,"少侠，你这件装备已经开启过星位了别闹了（&……*&")
    return
  end
  local 临时消耗 = 取开启星位消耗(玩家数据[id].道具.数据[装备编号].级别限制)
  if 玩家数据[id].角色.数据.银子<临时消耗.金钱 then
    常规提示(id,format("开启星位需要消耗#Z/%s#Y/两银子，你似乎手头有点紧哟？",临时消耗.金钱))
    return
  elseif 玩家数据[id].角色.数据.当前经验<临时消耗.经验 then
    常规提示(id,format("开启星位需要消耗#Z/%s#Y/点经验，你似乎没有那么多的经验？",临时消耗.经验))
    return
  end
  玩家数据[id].角色:扣除银子(临时消耗.金钱,0,0,"开启星位",1)
  玩家数据[id].角色:扣除经验(临时消耗.经验,0,1)
  玩家数据[id].道具.数据[装备编号].星位组 = true
  常规提示(id,"#Z/恭喜你开启星位成功！")
  道具刷新(id)
end

function 装备处理类:装备灵箓(连接id,序号,id,内容)
    self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列2]
    self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列1]
    if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2]==nil then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    end
    if 玩家数据[id].道具.数据[self.临时id1].分类<10 or 玩家数据[id].道具.数据[self.临时id1].分类>13 then
      常规提示(id,"灵箓只能用于灵饰")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2].名称 ~="灵箓" then
      常规提示(id,"请不要移动灵箓的位置")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id1].灵饰 == nil then
      常规提示(id,"只有灵饰才可以使用此物品")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id1].附加特性 == nil or 玩家数据[id].道具.数据[self.临时id1].附加特性.幻化等级 == nil then
      常规提示(id,"该装备尚未附加特性")
      return 0
    end
    玩家数据[id].道具.数据[self.临时id1].附加特性 = nil
    玩家数据[id].角色.数据.道具[内容.序列1] = nil
    玩家数据[id].道具.数据[self.临时id2] = nil
    道具刷新(id)
    常规提示(id,"灵箓使用成功")
end


function 装备处理类:装备碎星锤(连接id,序号,id,内容)
    self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列2]
    self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列1]
    if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2]==nil then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    end
    if 玩家数据[id].道具.数据[self.临时id1].分类>=7 then
      常规提示(id,"碎星锤只能用于装备")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2].名称 ~="碎星锤" and 玩家数据[id].道具.数据[self.临时id2].名称 ~= "超级碎星锤" then
      常规提示(id,"请不要移动碎星锤的位置")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id1].镶嵌类型 == nil or 玩家数据[id].道具.数据[self.临时id1].锻炼等级 == nil or 玩家数据[id].道具.数据[self.临时id1].锻炼等级 <= 0 then
      常规提示(id,"该装备尚未镶嵌任何宝石")
      return 0
    end
    local 最高宝石 = {}
    if 玩家数据[id].道具.数据[self.临时id2].名称 == "超级碎星锤" then
      local 镶嵌类型 = {[1]={类型=玩家数据[id].道具.数据[self.临时id1].镶嵌类型[1],数量=1}}
      for i=2,玩家数据[id].道具.数据[self.临时id1].锻炼等级 do
        if 玩家数据[id].道具.数据[self.临时id1].镶嵌类型[i] == 镶嵌类型[1].类型 then
          镶嵌类型[1].数量 = 镶嵌类型[1].数量 +1
        else
          if 镶嵌类型[2] ~= nil then
            镶嵌类型[2].数量 = 镶嵌类型[2].数量 +1
          else
            镶嵌类型[2] = {类型=玩家数据[id].道具.数据[self.临时id1].镶嵌类型[i],数量=1}
          end
        end
      end
      最高宝石.名称 = 玩家数据[id].道具.数据[self.临时id1].镶嵌类型[#玩家数据[id].道具.数据[self.临时id1].镶嵌类型]
      最高宝石.等级 = 玩家数据[id].道具.数据[self.临时id1].锻炼等级
      for i=1,#镶嵌类型 do
        if 镶嵌类型[i].类型 == "太阳石" then
          玩家数据[id].道具.数据[self.临时id1].伤害 = math.floor(玩家数据[id].道具.数据[self.临时id1].伤害-镶嵌类型[i].数量*8)
        elseif 镶嵌类型[i].类型 == "红玛瑙" then
          玩家数据[id].道具.数据[self.临时id1].命中 = math.floor(玩家数据[id].道具.数据[self.临时id1].命中-镶嵌类型[i].数量*25)
        elseif 镶嵌类型[i].类型 == "月亮石" then
          玩家数据[id].道具.数据[self.临时id1].防御 = math.floor(玩家数据[id].道具.数据[self.临时id1].防御-镶嵌类型[i].数量*12)
        elseif 镶嵌类型[i].类型 == "黑宝石" then
          玩家数据[id].道具.数据[self.临时id1].速度 = math.floor(玩家数据[id].道具.数据[self.临时id1].速度-镶嵌类型[i].数量*8)
        elseif 镶嵌类型[i].类型 == "舍利子" then
          玩家数据[id].道具.数据[self.临时id1].灵力 = math.floor(玩家数据[id].道具.数据[self.临时id1].灵力-镶嵌类型[i].数量*6)
        elseif 镶嵌类型[i].类型 == "光芒石" then
          玩家数据[id].道具.数据[self.临时id1].气血 = math.floor(玩家数据[id].道具.数据[self.临时id1].气血-镶嵌类型[i].数量*40)
        elseif 镶嵌类型[i].类型 == "神秘石" then
          玩家数据[id].道具.数据[self.临时id1].躲避 = math.floor(玩家数据[id].道具.数据[self.临时id1].躲避-镶嵌类型[i].数量*20)
        end
      end
      玩家数据[id].道具.数据[self.临时id1].锻炼等级 = nil
      玩家数据[id].道具.数据[self.临时id1].镶嵌宝石 = nil
      玩家数据[id].道具.数据[self.临时id1].镶嵌类型 = nil
    elseif 玩家数据[id].道具.数据[self.临时id2].名称 == "碎星锤" then
      local 镶嵌类型 = 玩家数据[id].道具.数据[self.临时id1].镶嵌类型[#玩家数据[id].道具.数据[self.临时id1].镶嵌类型]
      if 镶嵌类型 == "太阳石" then
        玩家数据[id].道具.数据[self.临时id1].伤害 = math.floor(玩家数据[id].道具.数据[self.临时id1].伤害-8)
      elseif 镶嵌类型 == "红玛瑙" then
        玩家数据[id].道具.数据[self.临时id1].命中 = math.floor(玩家数据[id].道具.数据[self.临时id1].命中-25)
      elseif 镶嵌类型 == "月亮石" then
        玩家数据[id].道具.数据[self.临时id1].防御 = math.floor(玩家数据[id].道具.数据[self.临时id1].防御-12)
      elseif 镶嵌类型 == "黑宝石" then
        玩家数据[id].道具.数据[self.临时id1].速度 = math.floor(玩家数据[id].道具.数据[self.临时id1].速度-8)
      elseif 镶嵌类型 == "舍利子" then
        玩家数据[id].道具.数据[self.临时id1].灵力 = math.floor(玩家数据[id].道具.数据[self.临时id1].灵力-6)
      elseif 镶嵌类型 == "光芒石" then
        玩家数据[id].道具.数据[self.临时id1].气血 = math.floor(玩家数据[id].道具.数据[self.临时id1].气血-40)
      elseif 镶嵌类型 == "神秘石" then
        玩家数据[id].道具.数据[self.临时id1].躲避 = math.floor(玩家数据[id].道具.数据[self.临时id1].躲避-20)
      end
      玩家数据[id].道具.数据[self.临时id1].锻炼等级 = 玩家数据[id].道具.数据[self.临时id1].锻炼等级 -1
      if 玩家数据[id].道具.数据[self.临时id1].锻炼等级 <= 0 then
        玩家数据[id].道具.数据[self.临时id1].锻炼等级 = nil
        玩家数据[id].道具.数据[self.临时id1].镶嵌宝石 = nil
        玩家数据[id].道具.数据[self.临时id1].镶嵌类型 = nil
      else
        玩家数据[id].道具.数据[self.临时id1].镶嵌类型[#玩家数据[id].道具.数据[self.临时id1].镶嵌类型] = nil
        if #玩家数据[id].道具.数据[self.临时id1].镶嵌宝石 >= 2 then
          local 找到 = false
          for n=1,#玩家数据[id].道具.数据[self.临时id1].镶嵌类型 do
              if 玩家数据[id].道具.数据[self.临时id1].镶嵌宝石[1] == 玩家数据[id].道具.数据[self.临时id1].镶嵌类型[n] then
                找到 = true
                break
              end
          end
          if 找到 == false then
            table.remove(玩家数据[id].道具.数据[self.临时id1].镶嵌宝石,1)
          else
            找到 = false
            for n=1,#玩家数据[id].道具.数据[self.临时id1].镶嵌类型 do
              if 玩家数据[id].道具.数据[self.临时id1].镶嵌宝石[2] == 玩家数据[id].道具.数据[self.临时id1].镶嵌类型[n] then
                找到 = true
                break
              end
            end
            if 找到 == false then
              table.remove(玩家数据[id].道具.数据[self.临时id1].镶嵌宝石,2)
            end
          end
        end
      end
    end
    玩家数据[id].角色.数据.道具[内容.序列1] = nil
    玩家数据[id].道具.数据[self.临时id2] = nil
    if 最高宝石.等级 ~= nil and 最高宝石.名称 ~= nil then
      玩家数据[id].道具:给予道具(id,最高宝石.名称,最高宝石.等级)
    end
    道具刷新(id)
    常规提示(id,"碎星锤使用成功")
end

function 装备处理类:装备附魔宝珠(连接id,序号,id,内容)
    self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列2]
    self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列1]
    if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2]==nil then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    elseif 玩家数据[id].道具.数据[self.临时id2].名称 ~= "附魔宝珠" then
      常规提示(id,"请不要移动附魔宝珠的位置！")
      return 0
    end
    if 玩家数据[id].道具.数据[self.临时id1].分类>=7 then
      常规提示(id,"该物品无法开孔")
      return 0
    end
    local 套装类型={"附加状态","追加法术"}
    套装类型=套装类型[取随机数(1,#套装类型)]
    local 套装效果={
      附加状态={"金刚护法","金刚护体","生命之泉","炼气化神","普渡众生","定心术","碎星诀","变身","凝神术","逆鳞","不动如山","法术防御","明光宝烛","天神护体","移魂化骨","蜜润","杀气诀","韦陀护法","一苇渡江","天神护法","乘风破浪","魔息术","盘丝阵","炎护"},
      追加法术={"横扫千军","善恶有报","惊心一剑","壁垒击破","满天花雨","浪涌","唧唧歪歪","五雷咒","龙卷雨击","剑荡四方","裂石","烟雨剑法","天雷斩","力劈华山","夜舞倾城","上古灵符","叱咤风云","天降灵葫","月光","八凶法阵","死亡召唤","天罗地网","夺命咒","落叶萧萧","落雷符","雨落寒沙","苍茫树","飞砂走石","阎罗令","水攻","烈火","落岩","雷击","泰山压顶","水漫金山","地狱烈火","奔雷咒"}
    }
    玩家数据[id].道具.数据[self.临时id1].套装效果={套装类型,套装效果[套装类型][取随机数(1,#套装效果[套装类型])]}
    玩家数据[id].角色.数据.道具[内容.序列1] = nil
    玩家数据[id].道具.数据[self.临时id2] = nil
    道具刷新(id)
    常规提示(id,"附魔宝珠使用成功")
end

function 装备处理类:技能附魔(连接id,序号,id,内容)
    self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列2]
    if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
      常规提示(id,"你似乎并没有这样的道具")
      return 0
    end
    if 玩家数据[id].道具.数据[self.临时id1].临时附魔 == nil then
      玩家数据[id].道具.数据[self.临时id1].临时附魔 = {体质={数值=0,时间=0},伤害={数值=0,时间=0},防御={数值=0,时间=0},气血={数值=0,时间=0},魔法={数值=0,时间=0},命中={数值=0,时间=0},法术防御={数值=0,时间=0},速度={数值=0,时间=0},愤怒={数值=0,时间=0},魔力={数值=0,时间=0},法术伤害={数值=0,时间=0},耐力={数值=0,时间=0}}
    end
    self.到期时间 = os.time() + 604800
    if 玩家数据[id].角色.数据.活力 >= 内容.数据.等级 then
      if 内容.数据.名称 == "嗜血" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.1,内容.数据.等级*0.2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.时间 = 时间转换2(self.到期时间)
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.时间 = 0
      elseif 内容.数据.名称 == "莲华妙法" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.15,内容.数据.等级*0.3))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.时间 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "轻如鸿毛" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级,内容.数据.等级*2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "神木呓语" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.15,内容.数据.等级*0.3))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "拈花妙指" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.15,内容.数据.等级*0.3))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.速度.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.速度.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "盘丝舞" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.5,内容.数据.等级))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.防御.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.防御.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "一气化三清" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.1,内容.数据.等级*0.2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.时间 = 时间转换2(self.到期时间)
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.时间 = 0
      elseif 内容.数据.名称 == "浩然正气" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.15,内容.数据.等级*0.3))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.时间 = 时间转换2(self.到期时间)
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.时间 = 0
      elseif 内容.数据.名称 == "龙附" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.5,内容.数据.等级))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "穿云破空" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.5,内容.数据.等级))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "神兵护法" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.5,内容.数据.等级))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.时间 = 时间转换2(self.到期时间)
        玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.时间 = 0
      elseif 内容.数据.名称 == "魔王护持" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级,内容.数据.等级*2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "元阳护体" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级,内容.数据.等级*2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "神力无穷" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.16,内容.数据.等级*0.32))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.愤怒.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.愤怒.时间 = 时间转换2(self.到期时间)
      elseif 内容.数据.名称 == "尸气漫天" then
        self.临时数值 = math.floor(取随机数(内容.数据.等级*0.1,内容.数据.等级*0.2))
        玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.数值 = self.临时数值
        玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.时间 = 时间转换2(self.到期时间)
        玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.数值 = 0
        玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.时间 = 0
      end
      玩家数据[id].角色.数据.活力 = 玩家数据[id].角色.数据.活力 - 内容.数据.等级
      道具刷新(id)
      常规提示(id,"添加临时附魔成功")
    else
      常规提示(id,"活力不足,无法附魔")
    end
end

function 装备处理类:装备附魔(连接id,序号,id,内容)
  self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列2]
  self.临时id2 = 玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
    常规提示(id,"你似乎并没有这样的道具")
    return 0
  end
  if 玩家数据[id].道具.数据[self.临时id1].临时附魔 == nil then
      玩家数据[id].道具.数据[self.临时id1].临时附魔 = {体质={数值=0,时间=0},伤害={数值=0,时间=0},防御={数值=0,时间=0},气血={数值=0,时间=0},魔法={数值=0,时间=0},命中={数值=0,时间=0},法术防御={数值=0,时间=0},速度={数值=0,时间=0},愤怒={数值=0,时间=0},魔力={数值=0,时间=0},法术伤害={数值=0,时间=0},耐力={数值=0,时间=0}}
  end
  self.到期时间 = os.time() + 604800
  if 玩家数据[id].道具.数据[self.临时id2].类型 == "嗜血" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.1,玩家数据[id].道具.数据[self.临时id2].等级*0.2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.时间 = 时间转换2(self.到期时间)
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.时间 = 0
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "莲华妙法" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.15,玩家数据[id].道具.数据[self.临时id2].等级*0.3))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.体质.时间 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术伤害.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "轻如鸿毛" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级,玩家数据[id].道具.数据[self.临时id2].等级*2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "神木呓语" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.15,玩家数据[id].道具.数据[self.临时id2].等级*0.3))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔法.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "拈花妙指" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.15,玩家数据[id].道具.数据[self.临时id2].等级*0.3))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.速度.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.速度.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "盘丝舞" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.5,玩家数据[id].道具.数据[self.临时id2].等级))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.防御.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.防御.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "一气化三清" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.1,玩家数据[id].道具.数据[self.临时id2].等级*0.2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.时间 = 时间转换2(self.到期时间)
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.时间 = 0
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "浩然正气" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.15,玩家数据[id].道具.数据[self.临时id2].等级*0.3))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.法术防御.时间 = 时间转换2(self.到期时间)
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.魔力.时间 = 0
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "龙附" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.5,玩家数据[id].道具.数据[self.临时id2].等级))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "穿云破空" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.5,玩家数据[id].道具.数据[self.临时id2].等级))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.伤害.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "神兵护法" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.5,玩家数据[id].道具.数据[self.临时id2].等级))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.时间 = 时间转换2(self.到期时间)
      玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.时间 = 0
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "魔王护持" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级,玩家数据[id].道具.数据[self.临时id2].等级*2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "元阳护体" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级,玩家数据[id].道具.数据[self.临时id2].等级*2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.气血.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "神力无穷" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.16,玩家数据[id].道具.数据[self.临时id2].等级*0.32))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.愤怒.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.愤怒.时间 = 时间转换2(self.到期时间)
  elseif 玩家数据[id].道具.数据[self.临时id2].类型 == "尸气漫天" then
      self.临时数值 = math.floor(取随机数(玩家数据[id].道具.数据[self.临时id2].等级*0.1,玩家数据[id].道具.数据[self.临时id2].等级*0.2))
      玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.数值 = self.临时数值
      玩家数据[id].道具.数据[self.临时id1].临时附魔.耐力.时间 = 时间转换2(self.到期时间)
      玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.数值 = 0
      玩家数据[id].道具.数据[self.临时id1].临时附魔.命中.时间 = 0
  end
  玩家数据[id].道具.数据[self.临时id2] = nil
  道具刷新(id)
  常规提示(id,"添加临时附魔成功")
end

function 装备处理类:装备开运(连接id,序号,id,内容)
  self.临时id1 = 玩家数据[id].角色.数据.道具[内容.序列]
  if 玩家数据[id].道具.数据[self.临时id1]==nil or 玩家数据[id].道具.数据[self.临时id1]==0 then
    常规提示(id,"你似乎并没有这样的道具")
    return 0
  end
  if 玩家数据[id].道具.数据[self.临时id1].级别限制==nil then
    常规提示(id,"该物品无法开孔")
    return 0
  end
  if 玩家数据[id].道具.数据[self.临时id1].分类>=7 then
    常规提示(id,"该物品无法开孔")
    return 0
  end
  if 玩家数据[id].道具.数据[self.临时id1].开运孔数 ==nil then
    玩家数据[id].道具.数据[self.临时id1].开运孔数={上限=math.floor(玩家数据[id].道具.数据[self.临时id1].级别限制/35+1),当前=0}
  end
  if  玩家数据[id].道具.数据[self.临时id1].开运孔数.当前 < 玩家数据[id].道具.数据[self.临时id1].开运孔数.上限 and 玩家数据[id].道具.数据[self.临时id1].开运孔数.当前  <6 then
        self.扣除金钱=(玩家数据[id].道具.数据[self.临时id1].开运孔数.当前+1)*100000
        self.消耗体力=(玩家数据[id].道具.数据[self.临时id1].开运孔数.当前+1)*30
        if 玩家数据[id].角色.数据.银子 < self.扣除金钱 then
          常规提示(id,"你没那么多的银子")
          return 0
        elseif 玩家数据[id].角色.数据.体力<self.消耗体力 then
          常规提示(id,"你没那么多的体力")
          return 0
        end
        local 装备几率

        if  玩家数据[id].道具.数据[self.临时id1].级别限制  == 100 then
          装备几率= 80
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 110  then
          装备几率= 65
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 120  then
          装备几率= 55
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 130  then
          装备几率= 45
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 140  then
          装备几率= 30
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 150  then
          装备几率= 20
        elseif 玩家数据[id].道具.数据[self.临时id1].级别限制  == 160  then
          装备几率= 15
        else
          装备几率 =80
        end
        if 取随机数()<= 装备几率   then
          玩家数据[id].道具.数据[self.临时id1].开运孔数.当前=玩家数据[id].道具.数据[self.临时id1].开运孔数.当前+1
          玩家数据[id].角色:扣除银子(self.扣除金钱,0,0,"符石开孔",1)
          玩家数据[id].角色.数据.体力=玩家数据[id].角色.数据.体力-self.消耗体力
          常规提示(id,"你消耗了:"..self.扣除金钱.."金钱"..self.消耗体力.."体力")
          常规提示(id,"装备开孔成功")
        else
          玩家数据[id].角色:扣除银子(self.扣除金钱,0,0,"符石开孔",1)
          玩家数据[id].角色.数据.体力=玩家数据[id].角色.数据.体力-self.消耗体力
          常规提示(id,"你消耗了:"..self.扣除金钱.."金钱"..self.消耗体力.."体力")
          常规提示(id,"装备开孔失败")

        end
        self.发送信息 = {}
        self.发送信息.体力=玩家数据[id].角色.数据.体力
        self.发送信息.银子=玩家数据[id].角色.数据.银子
        发送数据(玩家数据[id].连接id,63,self.发送信息)
    else
      常规提示(id,"#r/装备已经无法再进行开孔了")
    end
end

function 装备处理类:添加符石(id,道具id,装备id)
  道具id=分割文本(道具id,",")
  local 临时id = {}
  local 临时装备id = 玩家数据[id].角色.数据.道具[装备id]
  for i=1,5 do
    道具id[i] = 道具id[i]+0
    临时id[i]=玩家数据[id].角色.数据.道具[道具id[i]]
    if 玩家数据[id].道具.数据[临时id[i]]~=nil and 道具id[i]~= 0 then
      if  玩家数据[id].道具.数据[临时id[i]].总类 == 55  then
        if 玩家数据[id].道具.数据[临时装备id].符石 == nil then
            玩家数据[id].道具.数据[临时装备id].符石 = {}
        end
        玩家数据[id].道具.数据[临时装备id].符石[i] =table.loadstring(table.tostring(玩家数据[id].道具.数据[临时id[i]]))
        常规提示(id,"镶嵌符石成功")
        玩家数据[id].道具.数据[临时id[i]] =nil
        玩家数据[id].角色.数据.道具[道具id[i]] =nil
      else
        常规提示(id,"只能镶嵌符石")
        return
      end
    end
  end
  符石置对象(id,临时装备id)
end

function 装备处理类:宝石合成处理(连接id,序号,id,内容)
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[格子1]==nil or 玩家数据[id].道具.数据[格子2]==nil then
    道具刷新(id)
    return
  end
  --========================宝石合成=======================================
  if 玩家数据[id].道具.数据[格子1].总类==5 and 玩家数据[id].道具.数据[格子1].分类==6 and 玩家数据[id].道具.数据[格子2].总类==5 and 玩家数据[id].道具.数据[格子1].分类==6 then --宝石镶嵌
    if 玩家数据[id].道具.数据[格子1].名称~=玩家数据[id].道具.数据[格子2].名称 then
      常规提示(id,"只有类型相同的宝石才可以合成")
      return
    elseif 玩家数据[id].道具.数据[格子1].级别限制~=玩家数据[id].道具.数据[格子2].级别限制 then
      常规提示(id,"只有等级相同的宝石才可以合成")
      return
    elseif 玩家数据[id].角色.数据.体力<玩家数据[id].道具.数据[格子1].级别限制*10 then
      常规提示(id,"你没有那么多的体力")
      return
    else
      玩家数据[id].角色.数据.体力=玩家数据[id].角色.数据.体力-玩家数据[id].道具.数据[格子1].级别限制
      体活刷新(id)
      if 玩家数据[id].道具.数据[格子1].名称 == "钟灵石" and 钟灵石定制 then
        local 概率 = f函数.读配置(程序目录.."配置文件.ini","主要配置","钟灵石基础概率")
        local 降低 = f函数.读配置(程序目录.."配置文件.ini","主要配置","钟灵石等级降低")
        if tonumber(概率) == nil then
          概率 = 100
        end
        概率 = tonumber(概率)
        if tonumber(降低) == nil then
          降低 = 5
        end
        降低 = tonumber(降低)
        if 取随机数() <= (概率-降低*玩家数据[id].道具.数据[格子1].级别限制) then
          玩家数据[id].道具.数据[格子1].级别限制=玩家数据[id].道具.数据[格子1].级别限制+1
          local 幻化类型 = {"心源","狂浪滔天","固若金汤","锐不可当","通真达灵","血气方刚","健步如飞"}
          玩家数据[id].道具.数据[格子1].附加特性 = 幻化类型[取随机数(1,#幻化类型)]
          玩家数据[id].道具.数据[格子2]=nil
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          常规提示(id,"你合成了一个更高级的宝石")
        else
          玩家数据[id].道具.数据[格子2]=nil
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          常规提示(id,"合成失败，你因此损失了一颗宝石")
        end
      else
        if self:取宝石合成几率(id,玩家数据[id].道具.数据[格子1].级别限制) then
          玩家数据[id].道具.数据[格子1].级别限制=玩家数据[id].道具.数据[格子1].级别限制+1
          玩家数据[id].道具.数据[格子2]=nil
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          常规提示(id,"你合成了一个更高级的宝石")
        else
          玩家数据[id].道具.数据[格子2]=nil
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          常规提示(id,"合成失败，你因此损失了一颗宝石")
        end
      end
      道具刷新(id)
    end
  end
end

function 装备处理类:装备修理处理(连接id,序号,id,内容)
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[格子1]==nil then
    道具刷新(id)
    return
  end
  if 玩家数据[id].道具.数据[格子1].总类 ~=2 then
    常规提示(id,"#Y/只有装备才可以进行修理")
    return
  end
  if 玩家数据[id].道具.数据[格子1].耐久 >=400 then
    常规提示(id,"#Y/目前该装备无需修理")
    return
  end
  if 玩家数据[id].道具.数据[格子1].耐久 ==nil then
    常规提示(id,"#Y/该物品无法修复")
    return
  end
  if 玩家数据[id].道具.数据[格子1].修理失败~=nil and 玩家数据[id].道具.数据[格子1].修理失败 >=3 then
    常规提示(id,"#Y/该装备已经无法修理")
    return
  end
  local 修理费用 = math.floor(玩家数据[id].道具.数据[格子1].级别限制/500*15000*300)
  if 取银子(id) < 修理费用 then
    常规提示(id,"#Y/你身上的银子不够修理该装备！")
    return
  end
  玩家数据[id].角色:扣除银子(修理费用,0,0,"修理装备耐久",1)
  local 失败几率 = 20+math.floor(玩家数据[id].角色.数据.打造熟练度/100)
  local 珍珠 = 0
  if 格子2 ~= 0 and 玩家数据[id].道具.数据[格子2] ~= nil and 玩家数据[id].道具.数据[格子2].名称 == "珍珠" then
    if 玩家数据[id].道具.数据[格子2].级别限制 < 玩家数据[id].道具.数据[格子1].级别限制 then
      常规提示(id,"#Y/该珍珠等级过低！")
      return
    else
      失败几率 = 151
      珍珠 =1
    end
    玩家数据[id].道具.数据[格子2] = nil
    玩家数据[id].角色.数据.道具[内容.序列1] = nil
  end
  if 失败几率<=取随机数(1,150) then
    if 玩家数据[id].道具.数据[格子1].修理失败==nil then
        玩家数据[id].道具.数据[格子1].修理失败=0
    end
    玩家数据[id].道具.数据[格子1].修理失败=玩家数据[id].道具.数据[格子1].修理失败+1
    常规提示(id,"#Y/你的装备在修理时出现了点意外")
  end
  if 珍珠 == 0 then
    玩家数据[id].道具.数据[格子1].耐久=500
  else
    玩家数据[id].道具.数据[格子1].耐久=玩家数据[id].道具.数据[格子1].耐久+500
  end

  常规提示(id,"#Y/装备修理成功！")
  道具刷新(id)
end

function 装备处理类:装备熔炼处理(连接id,序号,id,内容)
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[格子1]==nil or 玩家数据[id].道具.数据[格子2]==nil or  玩家数据[id].道具.数据[格子1]==nil or  玩家数据[id].道具.数据[格子2]==nil then
    道具刷新(id)
    return
  end
  --==========================================镶嵌装备===========================================
  if (玩家数据[id].道具.数据[格子1].名称=="钨金" or 玩家数据[id].道具.数据[格子2].名称=="钨金") and (玩家数据[id].道具.数据[格子1].总类==2 or 玩家数据[id].道具.数据[格子2].总类==2) then
    local 宝石格子=0
    local 装备格子=0
    if 玩家数据[id].道具.数据[格子1].总类==5 then
      宝石格子=格子1
      装备格子=格子2
    else
      宝石格子=格子2
      装备格子=格子1
    end
    if 玩家数据[id].道具.数据[装备格子].灵饰 then
      常规提示(id,"钨金不能镶嵌在灵饰上")
      return
    end
      if 玩家数据[id].道具.数据[装备格子].制造者 == nil then
    常规提示(id,"必须是打造出来的装备才能进行熔炼")
    return
  end
    --  if 玩家数据[id].道具.数据[书铁格子].种类=="护腕" or 玩家数据[id].道具.数据[书铁格子].种类=="护腕" or 玩家数据[id].道具.数据[书铁格子].种类=="护腕" then
    -- if 玩家数据[id].道具.数据[装备格子].种类~=6  then
    --   常规提示(id,"只有宝石才可以镶嵌在装备上")
    --   return
    -- end
    -- if 玩家数据[id].道具.数据[装备格子].级别限制<=180  then
    --    常规提示(id,"马上完成,等待刻晴调整!")
    --   -- 常规提示(id,"装备等级小于120级无法熔炼")
    --   return
    -- end
    if 玩家数据[id].道具.数据[装备格子].耐久>=20 then
       玩家数据[id].道具.数据[装备格子].耐久=玩家数据[id].道具.数据[装备格子].耐久-20

    else
             常规提示(id,"耐久度不足")
       return
    end
    if 取随机数()<=70 then
        if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
          玩家数据[id].角色.数据.道具[内容.序列]=nil
          玩家数据[id].道具.数据[宝石格子]=nil
        else
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          玩家数据[id].道具.数据[宝石格子]=nil
        end
      道具刷新(id)
      常规提示(id,"装备熔炼失败")
      return
    end

    local 基础属性 = {}
    local 三围属性 = {"体质","魔力","力量","耐力","敏捷"}
    if 玩家数据[id].道具.数据[装备格子].分类 == 3  then--武器
          table.insert(基础属性,{"伤害",math.floor(玩家数据[id].道具.数据[装备格子].伤害/30)})
          table.insert(基础属性,{"命中",math.floor(玩家数据[id].道具.数据[装备格子].命中/15)})
          for i,v in ipairs(三围属性) do
            if 玩家数据[id].道具.数据[装备格子][三围属性[i]]~=nil then
               table.insert(基础属性,{三围属性[i],math.floor(玩家数据[id].道具.数据[装备格子][三围属性[i]]/20)})
            end
          end
    elseif 玩家数据[id].道具.数据[装备格子].分类 == 1 then --头盔
          table.insert(基础属性,{"防御",math.floor(玩家数据[id].道具.数据[装备格子].防御/30)})
          table.insert(基础属性,{"魔法",math.floor(玩家数据[id].道具.数据[装备格子].魔法/30)})
    elseif 玩家数据[id].道具.数据[装备格子].分类 == 5 then --腰带
          table.insert(基础属性,{"防御",math.floor(玩家数据[id].道具.数据[装备格子].防御/30)})
          table.insert(基础属性,{"气血",math.floor(玩家数据[id].道具.数据[装备格子].气血/30)})
    elseif 玩家数据[id].道具.数据[装备格子].分类 == 2 then --项链
          table.insert(基础属性,{"灵力",math.floor(玩家数据[id].道具.数据[装备格子].灵力/30)})
    elseif 玩家数据[id].道具.数据[装备格子].分类 == 4 then --衣服
          table.insert(基础属性,{"防御",math.floor(玩家数据[id].道具.数据[装备格子].防御/30)})
          for i,v in ipairs(三围属性) do
            if 玩家数据[id].道具.数据[装备格子][三围属性[i]]~=nil then
               table.insert(基础属性,{三围属性[i],math.floor(玩家数据[id].道具.数据[装备格子][三围属性[i]]/10)})
            end
          end
    elseif 玩家数据[id].道具.数据[装备格子].分类 == 6 then --鞋子
          table.insert(基础属性,{"防御",math.floor(玩家数据[id].道具.数据[装备格子].防御/30)})
          table.insert(基础属性,{"敏捷",math.floor(玩家数据[id].道具.数据[装备格子].敏捷/20)})
    end
    if 玩家数据[id].道具.数据[装备格子].熔炼属性==nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性={}
    end


    local 临时 = {}
    for i=1,#基础属性 do
        临时[i]=基础属性[i]
        临时[i][2]=取随机数(-临时[i][2],临时[i][2])
    end
    if  临时[1]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[1]==nil  then
       玩家数据[id].道具.数据[装备格子].熔炼属性[1]=临时[1]
    elseif 临时[1]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[1]~=nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]=临时[1][2]+玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]
    end
    if  临时[2]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[2]==nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[2]=临时[2]
    elseif 临时[2]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[2]~=nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]=临时[2][2]+玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]
    end
    if  临时[3]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[3]==nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[3]=临时[3]
    elseif 临时[3]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[3]~=nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]=临时[3][2]+玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]
    end
    if  临时[4]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[4]==nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[4]=临时[4]
    elseif 临时[4]~=nil and 玩家数据[id].道具.数据[装备格子].熔炼属性[4]~=nil then
       玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]=临时[4][2]+玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]
    end


    if  玩家数据[id].道具.数据[装备格子].熔炼属性[1]~=nil then
        if 玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]>0 then
           玩家数据[id].道具.数据[装备格子].熔炼属性[1][3]="+"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]>玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[1][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[1][1]]/20)
          end
        else
           玩家数据[id].道具.数据[装备格子].熔炼属性[1][3]="-"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]<玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[1][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[1][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[1][1]]/20)
          end
        end
    end
    if  玩家数据[id].道具.数据[装备格子].熔炼属性[2]~=nil then
        if 玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]>0 then
           玩家数据[id].道具.数据[装备格子].熔炼属性[2][3]="+"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]>玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[2][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[2][1]]/20)
          end
        else
           玩家数据[id].道具.数据[装备格子].熔炼属性[2][3]="-"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]<玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[2][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[2][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[2][1]]/20)
          end
        end
    end
    if  玩家数据[id].道具.数据[装备格子].熔炼属性[3]~=nil then
        if 玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]>0 then
           玩家数据[id].道具.数据[装备格子].熔炼属性[3][3]="+"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]>玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[3][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[3][1]]/20)
          end
        else
           玩家数据[id].道具.数据[装备格子].熔炼属性[3][3]="-"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]<玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[3][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[3][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[3][1]]/20)
          end
        end
    end
     if  玩家数据[id].道具.数据[装备格子].熔炼属性[4]~=nil then
        if 玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]>0 then
           玩家数据[id].道具.数据[装备格子].熔炼属性[4][3]="+"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]>玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[4][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[4][1]]/20)
          end
        else
           玩家数据[id].道具.数据[装备格子].熔炼属性[4][3]="-"
          if 玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]<玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[4][1]]/10 then
             玩家数据[id].道具.数据[装备格子].熔炼属性[4][2]=math.floor(玩家数据[id].道具.数据[装备格子][玩家数据[id].道具.数据[装备格子].熔炼属性[4][1]]/20)
          end
        end
    end
      if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      end

      常规提示(id,"镶嵌熔炼成功")
      道具刷新(id)
    else
      常规提示(id,"这种宝石无法镶嵌到此类装备上")
      return
    end

end
function 装备处理类:熔炼上下限(装备)
end

function 装备处理类:宝石镶嵌处理(连接id,序号,id,内容)
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[格子1]==nil or 玩家数据[id].道具.数据[格子2]==nil then
    道具刷新(id)
    return

  elseif self:宝宝点化检测(玩家数据[id].道具.数据[格子1].总类,玩家数据[id].道具.数据[格子1].分类,玩家数据[id].道具.数据[格子2].总类,玩家数据[id].道具.数据[格子2].分类) then
    local 宝石格子=0
    local 装备格子=0
    if 玩家数据[id].道具.数据[格子1].总类==5 then
      宝石格子=格子1
      装备格子=格子2
    else
      宝石格子=格子2
      装备格子=格子1
    end
    local 附加状态 = "附加状态"
    local 追加法术技能表 = {"善恶有报","力劈华山","壁垒击破","惊心一剑","剑荡四方","水攻","烈火","雷击","落岩","奔雷咒","水漫金山","地狱烈火","泰山压顶","月光","夜舞倾城","上古灵符"}
    for i=1,#追加法术技能表 do
      if 玩家数据[id].道具.数据[宝石格子].附带技能==追加法术技能表[i] then
        附加状态="追加法术"
      end
    end
    玩家数据[id].道具.数据[装备格子].套装效果={附加状态,玩家数据[id].道具.数据[宝石格子].附带技能}
    常规提示(id,"#Y/点化召唤兽装备成功！")
    if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
      玩家数据[id].角色.数据.道具[内容.序列]=nil
      玩家数据[id].道具.数据[宝石格子]=nil
    else
      玩家数据[id].角色.数据.道具[内容.序列1]=nil
      玩家数据[id].道具.数据[宝石格子]=nil
    end
    道具刷新(id)
    return
  end
  --==========================================镶嵌装备===========================================
  if (玩家数据[id].道具.数据[格子1].总类==5 or 玩家数据[id].道具.数据[格子2].总类==5) and (玩家数据[id].道具.数据[格子1].总类==2 or 玩家数据[id].道具.数据[格子2].总类==2) then
    local 宝石格子=0
    local 装备格子=0
    if 玩家数据[id].道具.数据[格子1].总类==5 then
      宝石格子=格子1
      装备格子=格子2
    else
      宝石格子=格子2
      装备格子=格子1
    end

    if 玩家数据[id].道具.数据[宝石格子].分类~=6  then
      常规提示(id,"只有宝石才可以镶嵌在装备上")
      return
    end
    if 玩家数据[id].道具.数据[宝石格子].名称=="星辉石" and 玩家数据[id].道具.数据[装备格子].灵饰 then  --处理灵饰
      if 玩家数据[id].道具.数据[装备格子].级别限制 == nil then
        玩家数据[id].道具.数据[装备格子].级别限制 = 取物品数据(玩家数据[id].道具.数据[装备格子].名称)[5]
      end
      if 玩家数据[id].道具.数据[宝石格子].级别限制-1~=玩家数据[id].道具.数据[装备格子].幻化等级 then
        常规提示(id,"该灵饰目前只能用#R/"..(玩家数据[id].道具.数据[装备格子].幻化等级+1).."#Y/级的星辉石进行强化")
        return
      elseif (玩家数据[id].道具.数据[装备格子].特效==nil or 玩家数据[id].道具.数据[装备格子].特效~="无级别限制") and 玩家数据[id].道具.数据[装备格子].幻化等级>=(玩家数据[id].道具.数据[装备格子].级别限制/10) then
        常规提示(id,"#Y/灵饰强化等级不能超过装备等级")
        return
      end
      玩家数据[id].道具.数据[装备格子].幻化等级=玩家数据[id].道具.数据[装备格子].幻化等级+1
      for n=1,#玩家数据[id].道具.数据[装备格子].幻化属性.附加 do
        玩家数据[id].道具.数据[装备格子].幻化属性.附加[n].强化=0
        玩家数据[id].道具.数据[装备格子].幻化属性.附加[n].强化=math.floor(幻化属性强化[玩家数据[id].道具.数据[装备格子].幻化属性.附加[n].类型]*玩家数据[id].道具.数据[装备格子].幻化等级)
      end
      常规提示(id,"#Y/灵饰强化成功！")
      if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      end
      道具刷新(id)
      return
    end

    if 玩家数据[id].道具.数据[宝石格子].名称=="钟灵石" and 玩家数据[id].道具.数据[装备格子].灵饰 and 钟灵石定制 then  --处理灵饰
      if 玩家数据[id].道具.数据[装备格子].级别限制 == nil then
        玩家数据[id].道具.数据[装备格子].级别限制 = 取物品数据(玩家数据[id].道具.数据[装备格子].名称)[5]
      end
      if 玩家数据[id].道具.数据[装备格子].附加特性 == nil then
        玩家数据[id].道具.数据[装备格子].附加特性 = {}
      end
      if 玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 ~= nil and 玩家数据[id].道具.数据[宝石格子].级别限制 <= 玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 then
        常规提示(id,"#Y/该灵饰当前需要使用#R"..(玩家数据[id].道具.数据[装备格子].附加特性.幻化等级+1).."#Y等级钟灵石进行幻化操作。")
        return
      elseif  玩家数据[id].道具.数据[装备格子].附加特性.幻化类型 ~= nil and  玩家数据[id].道具.数据[宝石格子].附加特性 ~= 玩家数据[id].道具.数据[装备格子].附加特性.幻化类型 then
        常规提示(id,"#Y/该灵饰当前需要使用#R"..玩家数据[id].道具.数据[装备格子].附加特性.幻化类型.."#Y钟灵石进行幻化操作。")
        return
      end
      local 幻化成功 = false
      if 玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 == nil then
        玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 = 1
        玩家数据[id].道具.数据[装备格子].附加特性.幻化类型 = 玩家数据[id].道具.数据[宝石格子].附加特性
        幻化成功 = true
      else
        玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 = 玩家数据[id].道具.数据[装备格子].附加特性.幻化等级 + 1
        幻化成功 = true
      end
      if 幻化成功 then
        if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
          玩家数据[id].角色.数据.道具[内容.序列]=nil
          玩家数据[id].道具.数据[宝石格子]=nil
        else
          玩家数据[id].角色.数据.道具[内容.序列1]=nil
          玩家数据[id].道具.数据[宝石格子]=nil
        end
        常规提示(id,"#Y/灵饰幻化特性成功！")
        道具刷新(id)
      end
      return
    end
    print(玩家数据[id].道具.数据[装备格子].分类)
    print(玩家数据[id].道具.数据[宝石格子].子类)
    if self:取可以镶嵌(玩家数据[id].道具.数据[装备格子].分类,玩家数据[id].道具.数据[宝石格子].子类) then
      local 锻造级别=0
      if 玩家数据[id].道具.数据[装备格子].锻炼等级~=nil then
        锻造级别=玩家数据[id].道具.数据[装备格子].锻炼等级
      end
      锻造级别=锻造级别+1
      local 锻造级别上限=1
      if 玩家数据[id].道具.数据[装备格子].级别限制~=nil then
        锻造级别上限 = math.floor(玩家数据[id].道具.数据[装备格子].级别限制/10) + 1
      end
      if (玩家数据[id].道具.数据[装备格子].特效 ~= nil and 玩家数据[id].道具.数据[装备格子].特效 == "精致") or (玩家数据[id].道具.数据[装备格子].第二特效 ~= nil and 玩家数据[id].道具.数据[装备格子].第二特效 == "精致") then
        锻造级别上限 = 锻造级别上限 + 1
      end
      if (玩家数据[id].道具.数据[装备格子].特效 ~= nil and 玩家数据[id].道具.数据[装备格子].特效 == "无级别限制") or (玩家数据[id].道具.数据[装备格子].第二特效 ~= nil and 玩家数据[id].道具.数据[装备格子].第二特效 == "无级别限制") then
        锻造级别上限 = 99
      end
      if 锻造级别>锻造级别上限 then
        常规提示(id,"该装备已达到锻造等级上限")
        return
      end
      if 玩家数据[id].道具.数据[宝石格子].级别限制~=锻造级别 then
        常规提示(id,"该装备目前只能用#R/"..锻造级别.."#Y/级宝石镶嵌")
        return
      end
      if 玩家数据[id].道具.数据[装备格子].镶嵌宝石==nil then
        玩家数据[id].道具.数据[装备格子].镶嵌宝石={}
        玩家数据[id].道具.数据[装备格子].镶嵌类型={}
      end
      if 玩家数据[id].道具.数据[装备格子].镶嵌宝石[1]==nil then
        玩家数据[id].道具.数据[装备格子].镶嵌宝石[1]=玩家数据[id].道具.数据[宝石格子].名称
      elseif 玩家数据[id].道具.数据[装备格子].镶嵌宝石[2]==nil and 玩家数据[id].道具.数据[装备格子].镶嵌宝石[1]~=玩家数据[id].道具.数据[宝石格子].名称  then
        玩家数据[id].道具.数据[装备格子].镶嵌宝石[2]=玩家数据[id].道具.数据[宝石格子].名称
      elseif 玩家数据[id].道具.数据[装备格子].镶嵌宝石[1]~=玩家数据[id].道具.数据[宝石格子].名称  and 玩家数据[id].道具.数据[装备格子].镶嵌宝石[2]~=玩家数据[id].道具.数据[宝石格子].名称 then
        常规提示(id,"装备最多只能镶嵌两种不同类型的宝石")
        return
      end
      玩家数据[id].道具.数据[装备格子].锻炼等级=锻造级别
      玩家数据[id].道具.数据[装备格子].镶嵌类型[锻造级别]=玩家数据[id].道具.数据[宝石格子].名称
      if 玩家数据[id].道具.数据[宝石格子].子类 == 1 then
        玩家数据[id].道具.数据[装备格子].气血 = (玩家数据[id].道具.数据[装备格子].气血 or 0) - floor(40*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].气血 = (玩家数据[id].道具.数据[装备格子].气血 or 0) + floor(40*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 2 then
        玩家数据[id].道具.数据[装备格子].防御 = (玩家数据[id].道具.数据[装备格子].防御 or 0) - floor(12*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].防御 = (玩家数据[id].道具.数据[装备格子].防御 or 0) + floor(12*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 3 then
        玩家数据[id].道具.数据[装备格子].伤害 = (玩家数据[id].道具.数据[装备格子].伤害 or 0) - floor(8*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].伤害 = (玩家数据[id].道具.数据[装备格子].伤害 or 0) + floor(8*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 4 then
        玩家数据[id].道具.数据[装备格子].灵力 = (玩家数据[id].道具.数据[装备格子].灵力 or 0) - floor(6*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].灵力 = (玩家数据[id].道具.数据[装备格子].灵力 or 0) + floor(6*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 5 then
        玩家数据[id].道具.数据[装备格子].命中 = (玩家数据[id].道具.数据[装备格子].命中 or 0) - floor(25*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].命中 = (玩家数据[id].道具.数据[装备格子].命中 or 0) + floor(25*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 6 then
        玩家数据[id].道具.数据[装备格子].速度 = (玩家数据[id].道具.数据[装备格子].速度 or 0) - floor(8*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].速度 = (玩家数据[id].道具.数据[装备格子].速度 or 0) + floor(8*玩家数据[id].道具.数据[宝石格子].级别限制)
      elseif 玩家数据[id].道具.数据[宝石格子].子类 == 7 then
        玩家数据[id].道具.数据[装备格子].躲避 = (玩家数据[id].道具.数据[装备格子].躲避 or 0) - floor(20*(玩家数据[id].道具.数据[宝石格子].级别限制-1))
        玩家数据[id].道具.数据[装备格子].躲避 = (玩家数据[id].道具.数据[装备格子].躲避 or 0) + floor(20*玩家数据[id].道具.数据[宝石格子].级别限制)
      end
      if 宝石格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
        玩家数据[id].道具.数据[宝石格子]=nil
      end
      常规提示(id,"镶嵌装备成功")
      道具刷新(id)
    else
      常规提示(id,"这种宝石无法镶嵌到此类装备上")
      return
    end
  end
end

function 装备处理类:宝宝点化检测(总类1,分类1,总类2,分类2)
 if 总类1==2 and (分类1==7 or 分类1==8 or 分类1==9) and 总类2==5 and 分类2==5 then
   return true
  elseif 总类2==2 and (分类2==7 or 分类2==8 or 分类2==9) and 总类1==5 and 分类1==5 then
   return true
  else
   return false
   end
 end

 function 装备处理类:打造金钱公式(a)
    if a <= 40 then
      return floor((a*100+2000))
    elseif a > 40 and a <= 90 then
      return floor(((a-50)*1000+10000))
    elseif a >= 100 then
      return floor(((a-100)*45000+3000000))
    end
end

function 装备处理类:打造类型处理(连接id,序号,id,内容)
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  if 玩家数据[id].道具.数据[格子1]==nil or 玩家数据[id].道具.数据[格子2]==nil then
    道具刷新(id)
    return
  end
  --======================饰品打造=======================
  if (玩家数据[id].道具.数据[格子1].总类==5 and (玩家数据[id].道具.数据[格子1].分类==20 or 玩家数据[id].道具.数据[格子1].分类==21)) and (玩家数据[id].道具.数据[格子2].总类==5 and (玩家数据[id].道具.数据[格子2].分类==21 or 玩家数据[id].道具.数据[格子2].分类==20)) then
    local 制造格子=0
    local 精铁格子=0
    if 玩家数据[id].道具.数据[格子1].名称=="灵饰指南书" and 玩家数据[id].道具.数据[格子2].名称=="元灵晶石" then
      制造格子=格子1
      精铁格子=格子2
    elseif 玩家数据[id].道具.数据[格子1].名称=="元灵晶石" and 玩家数据[id].道具.数据[格子2].名称=="灵饰指南书" then
      制造格子=格子2
      精铁格子=格子1
  	end
    if 制造格子==0 or 精铁格子==0 then
      常规提示(id,"打造装备需要使用灵饰指南书和元灵晶石，你这给我的是啥玩意？？？")
      return
    end
    if 玩家数据[id].道具.数据[制造格子].子类>玩家数据[id].道具.数据[精铁格子].子类 then
      常规提示(id,"你的这块元灵晶石等级太低了，配不上这本制造指南书")
      return
    end
    if 玩家数据[id].道具.数据[制造格子].子类>140 or 玩家数据[id].道具.数据[精铁格子].子类>140 then
      常规提示(id,"灵饰等级高于140级暂时不能打造")
      return
    end
    local 扣除金钱 = self:打造金钱公式(玩家数据[id].道具.数据[制造格子].子类)
    if 取银子(id) < 扣除金钱 then
        常规提示(id,"#Y你银子不够打造装备哦！")
        return
    end
    玩家数据[id].角色:扣除银子(math.abs(扣除金钱),0,0,"打造灵饰",1)
    local 临时名称=制造装备[玩家数据[id].道具.数据[制造格子].特效][玩家数据[id].道具.数据[制造格子].子类]
    if 玩家数据[id].打造方式==1 then
      local 道具 = 物品类()
      道具:置对象(临时名称)
      道具.级别限制 = 玩家数据[id].道具.数据[制造格子].子类
      道具.幻化等级=0
      local 临时等级=玩家数据[id].道具.数据[制造格子].子类
      local 临时类型=玩家数据[id].道具.数据[制造格子].特效
      玩家数据[id].道具.数据[制造格子]=nil
      玩家数据[id].道具.数据[制造格子]=道具
      玩家数据[id].道具:灵饰处理(id,制造格子,临时等级,0,临时类型)
      玩家数据[id].道具.数据[精铁格子]=nil
      玩家数据[id].道具.数据[制造格子].耐久=500
      玩家数据[id].道具.数据[制造格子].部位类型=临时类型
      道具.制造者 = 玩家数据[id].角色.数据.名称
      道具.灵饰=true
      if 精铁格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
      end
      常规提示(id,"制造灵饰成功")
      道具刷新(id)
    else
      任务处理类:设置打造灵饰任务(id,临时名称,玩家数据[id].道具.数据[制造格子].子类,玩家数据[id].道具.数据[制造格子].特效)
      玩家数据[id].道具.数据[精铁格子]=nil
      玩家数据[id].道具.数据[制造格子]=nil
      玩家数据[id].角色.数据.道具[内容.序列1]=nil
      玩家数据[id].角色.数据.道具[内容.序列]=nil
      道具刷新(id)
    end
    --======================打造方式===========================================
  elseif (玩家数据[id].道具.数据[格子1].总类==5 and (玩家数据[id].道具.数据[格子1].分类==1 or 玩家数据[id].道具.数据[格子1].分类==2)) and (玩家数据[id].道具.数据[格子2].总类==5 and (玩家数据[id].道具.数据[格子2].分类==1 or 玩家数据[id].道具.数据[格子2].分类==2)) then
    local 制造格子=0
    local 精铁格子=0
    if 玩家数据[id].道具.数据[格子1].名称=="制造指南书" and 玩家数据[id].道具.数据[格子2].名称=="百炼精铁" then
      制造格子=格子1
      精铁格子=格子2
    elseif 玩家数据[id].道具.数据[格子2].名称=="制造指南书" and 玩家数据[id].道具.数据[格子1].名称=="百炼精铁" then
      制造格子=格子2
      精铁格子=格子1
    end
    if 制造格子==0 or 精铁格子==0 then
      常规提示(id,"打造装备需要使用制造指南书和百炼精铁，你这给我的是啥玩意？？？")
      return
    end
    if 玩家数据[id].道具.数据[制造格子].子类>玩家数据[id].道具.数据[精铁格子].子类 then
      常规提示(id,"你的这块精铁等级太低了，配不上这本制造指南书")
      return
    end
    --金钱体力技能
    --获取装备名称
    local 临时序列=玩家数据[id].道具.数据[制造格子].特效
    if 临时序列==25 then
      临时序列=23
    elseif 临时序列==24 then
      临时序列=22
    elseif 临时序列==23 or 临时序列==22 then
      临时序列=21
    elseif 临时序列==21 then
      临时序列=20
    elseif 临时序列==20 or 临时序列==19 then
      临时序列=19
    end
    local 临时等级=玩家数据[id].道具.数据[制造格子].子类/10
    -- 计算武器值
      if 临时序列<=18 and 临时等级>=9 then --是武器 10-12是普通光武
        if 临时等级<=11 then
          临时等级=取随机数(9,11)
        elseif 临时等级<=14 then
          临时等级=取随机数(12,14)
        end
        临时等级=临时等级+1
      else
        临时等级=临时等级+1
      end
    local 临时类型=self.打造物品[临时序列][临时等级]
    if type(临时类型)=="table" then
      if 玩家数据[id].道具.数据[制造格子].特效 ==23 then
       临时类型=临时类型[2]
      elseif 玩家数据[id].道具.数据[制造格子].特效 ==22 then
       临时类型=临时类型[1]
      elseif 玩家数据[id].道具.数据[制造格子].特效 ==20 then
       临时类型=临时类型[2]
      elseif 玩家数据[id].道具.数据[制造格子].特效 ==19 then
       临时类型=临时类型[1]
      else
        临时类型=临时类型[取随机数(1,2)]
     	end
  	end
    local 道具 = 物品类()
    道具:置对象(临时类型)
    local 满足打造等级 = 0
    local 满足打造条件 = true
    local 满足裁缝条件 = true
    local 满足炼金条件 = true
    if 打造熟练度开关==0 then
    else
      for n=1,#玩家数据[id].角色.数据.辅助技能 do
        if 玩家数据[id].角色.数据.辅助技能[n].名称 == "打造技巧" and 玩家数据[id].道具.数据[格子1].总类==5 and 道具.分类==3 then
            满足打造等级 = 玩家数据[id].角色.数据.辅助技能[n].等级+20
        elseif 玩家数据[id].角色.数据.辅助技能[n].名称 == "裁缝技巧" and 玩家数据[id].道具.数据[格子1].总类==5 and (道具.分类==4 or 道具.分类==1) then
            满足打造等级 = 玩家数据[id].角色.数据.辅助技能[n].等级+20
        elseif 玩家数据[id].角色.数据.辅助技能[n].名称 == "炼金术" and 玩家数据[id].道具.数据[格子1].总类==5 and (道具.分类==2 or 道具.分类==5 or 道具.分类==6) then
            满足打造等级 = 玩家数据[id].角色.数据.辅助技能[n].等级+20
        end
      end


      if 玩家数据[id].道具.数据[制造格子].子类 > 满足打造等级 then
          满足打造条件 = false
      end
      if 玩家数据[id].道具.数据[制造格子].子类 > 满足打造等级 then
          满足裁缝条件 = false
      end
      if 玩家数据[id].道具.数据[制造格子].子类 > 满足打造等级 then
          满足炼金条件 = false
      end
      -- if 玩家数据[id].道具.数据[制造格子].子类 <= 160 then
      --     满足打造条件 = true
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类  <= 160 then
      --     满足裁缝条件 = true
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类  <=160 then
      --     满足炼金条件 = true
      -- end
      -- if 玩家数据[id].道具.数据[格子1].总类==5 and 道具.分类==3 and 满足打造条件 == false then
      --     常规提示(id,"你的打造技巧等级不够，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[格子1].总类==5 and (道具.分类==4 or 道具.分类==1) and 满足裁缝条件 == false then
      --     常规提示(id,"你的裁缝技巧等级不够，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[格子1].总类==5 and (道具.分类==2 or 道具.分类==5 or 道具.分类==6) and 满足炼金条件 == false then
      --     常规提示(id,"你的炼金术等级不够，无法制作该装备")
      --     return
      -- end
      -- -- if 玩家数据[id].道具.数据[制造格子].子类==60 and 玩家数据[id].角色.数据.打造熟练度 <360 then
      -- --     常规提示(id,"你的辅助技能熟练度不够，无法制作该装备")
      -- --     return
      -- -- end
      -- -- if 玩家数据[id].道具.数据[制造格子].子类==70 and 玩家数据[id].角色.数据.打造熟练度 <490 then
      -- --     常规提示(id,"你的辅助技能熟练度不够，无法制作该装备")
      -- --     return
      -- -- end
      -- -- if 玩家数据[id].道具.数据[制造格子].子类==80 and 玩家数据[id].角色.数据.打造熟练度 <640 then
      -- --     常规提示(id,"你的辅助技能熟练度不够，无法制作该装备")
      -- --     return
      -- -- end
      -- -- if 玩家数据[id].道具.数据[制造格子].子类==90 and 玩家数据[id].角色.数据.打造熟练度 <810 then
      -- --     常规提示(id,"你的辅助技能熟练度不够，无法制作该装备")
      -- --     return
      -- -- end
      -- -- if 玩家数据[id].道具.数据[制造格子].子类==100 and 玩家数据[id].角色.数据.打造熟练度 <1000 then
      -- --     常规提示(id,"你的辅助技能熟练度不够，无法制作该装备")
      -- --     return
      -- -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==110 and 玩家数据[id].角色.数据.打造熟练度 <300 then
      --     常规提示(id,"你的辅助技能熟练度不够300，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==120 and 玩家数据[id].角色.数据.打造熟练度 <600 then
      --     常规提示(id,"你的辅助技能熟练度不够600，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==130 and 玩家数据[id].角色.数据.打造熟练度 <800 then
      --     常规提示(id,"你的辅助技能熟练度不够800，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==140 and 玩家数据[id].角色.数据.打造熟练度 <900 then
      --     常规提示(id,"你的辅助技能熟练度不够900，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==150 and 玩家数据[id].角色.数据.打造熟练度 <1000 then
      --     常规提示(id,"你的辅助技能熟练度不够1000，无法制作该装备")
      --     return
      -- end
      -- if 玩家数据[id].道具.数据[制造格子].子类==160 and 玩家数据[id].角色.数据.打造熟练度 <1500 then
      --     常规提示(id,"你的辅助技能熟练度不够1500，无法制作该装备")
      --     return
      -- end
    end
    local 扣除金钱 = self:打造金钱公式(玩家数据[id].道具.数据[制造格子].子类)
    if 取银子(id) < 扣除金钱 then
    常规提示(id,"#Y你银子不够打造装备哦！")
    return
    end
    玩家数据[id].角色:扣除银子(math.abs(扣除金钱),0,0,"打造装备",1)
    if 玩家数据[id].打造方式==1 then
      道具.级别限制 = 玩家数据[id].道具.数据[制造格子].子类
      local dz = self:打造公式(玩家数据[id].道具.数据[制造格子].子类,临时序列)
      if dz[1] ~= nil then
				道具.命中 = dz[1]
			end
			if dz[2] ~= nil then
				道具.伤害 = dz[2]
			end
			if dz[3] ~= nil then
				道具.防御 = dz[3]
			end
			if dz[4] ~= nil then
				道具.魔法 = dz[4]
			end
			if dz[5] ~= nil then
				道具.灵力 = dz[5]
			end
			if dz[6] ~= nil then
				道具.气血 = dz[6]
			end
			if dz[7] ~= nil then
				道具.敏捷 = dz[7]
			end
			if dz[8] ~= nil then
				道具.体质 = dz[8]
			end
			if dz[9] ~= nil then
				道具.力量 = dz[9]
			end
			if dz[10] ~= nil then
				道具.耐力 = dz[10]
			end
			if dz[11] ~= nil then
				道具.魔力 = dz[11]
			end
			if dz[12] ~= nil then
				local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
				if 道具.分类 == 5 then
					table.insert(通用特效,"愤怒")
					table.insert(通用特效,"暴怒")
				end
				道具.特效 = 通用特效[取随机数(1,#通用特效)]
			end
			if dz[13] ~= nil then
				local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
				道具.特技 = 通用特技[取随机数(1,#通用特技)]
      end
   --    -- 为装备赋予附加属性
      道具.制造者 = 玩家数据[id].角色.数据.名称
   --    -- 生产附加
   --    -- if 道具.分类==
      玩家数据[id].道具.数据[制造格子]=nil
      玩家数据[id].道具.数据[制造格子]=道具
      ------------摩托修改普通打造需要鉴定
      if 玩家数据[id].道具.数据[制造格子].级别限制 > 0 then
      玩家数据[id].道具.数据[制造格子].鉴定=false
      end
      玩家数据[id].道具.数据[制造格子].五行=取五行()
      玩家数据[id].道具.数据[制造格子].耐久=500
      玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
      随机序列=随机序列+1
      玩家数据[id].道具.数据[精铁格子]=nil
      if 精铁格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
      end
      玩家数据[id].角色.数据.打造熟练度=玩家数据[id].角色.数据.打造熟练度+1
      常规提示(id,"制造装备成功")
      道具刷新(id)
    else
      ----鞋子打造走这里
      任务处理类:设置打造装备任务(id,临时类型,玩家数据[id].道具.数据[制造格子].子类,临时序列)
      玩家数据[id].道具.数据[制造格子]=nil
      玩家数据[id].道具.数据[精铁格子]=nil
      if 精铁格子==玩家数据[id].角色.数据.道具[内容.序列] then
        玩家数据[id].角色.数据.道具[内容.序列]=nil
      else
        玩家数据[id].角色.数据.道具[内容.序列1]=nil
      end
      道具刷新(id)
    end
  elseif (玩家数据[id].道具.数据[格子1].总类==3 and  玩家数据[id].道具.数据[格子2].总类==3) then
    if 玩家数据[id].打造方式==2  then
      常规提示(id,"#Y/召唤兽装备尚未开放强化打造 暂时关闭 等待调整")
      return 0
    end
    if (玩家数据[id].道具.数据[格子1].分类==10 and  玩家数据[id].道具.数据[格子2].分类==11) or (玩家数据[id].道具.数据[格子2].分类==10 and  玩家数据[id].道具.数据[格子1].分类==11) then
    else
      常规提示(id,"#Y/制造召唤兽装备的材料需要天眼石和上古锻造图策")
      return 0
    end
    local 石头格子=0
    local 书铁格子=0
    if 玩家数据[id].道具.数据[格子1].分类==10 then
      书铁格子=格子1
      石头格子=格子2
    else
      书铁格子=格子2
      石头格子=格子1
    end
    if 玩家数据[id].道具.数据[书铁格子].级别限制>玩家数据[id].道具.数据[石头格子].级别限制 then
      常规提示(id,"上古锻造图策的等级不能高过天眼石的等级")
      return 0
    end
    local 类型序列=0
    if 玩家数据[id].道具.数据[书铁格子].种类=="护腕" then
      类型序列=24
    elseif 玩家数据[id].道具.数据[书铁格子].种类=="项圈" then
      类型序列=25
    elseif 玩家数据[id].道具.数据[书铁格子].种类=="铠甲" then
      类型序列=26
    end
    local 临时序列=math.floor((玩家数据[id].道具.数据[书铁格子].级别限制+5)/10)
    local 临时名称=self.打造物品[类型序列][临时序列]
    local 道具 = 物品类()
    道具:置对象(临时名称)
    道具.级别限制 = 玩家数据[id].道具.数据[书铁格子].级别限制
     local 灵气=玩家数据[id].道具.数据[石头格子].灵气
      if 灵气==nil then
         灵气=取随机数(20,100)
      end
        local 等级=道具.级别限制
        if 玩家数据[id].道具.数据[书铁格子].种类=="护腕" then
          道具.命中=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
      elseif 玩家数据[id].道具.数据[书铁格子].种类=="项圈" then
          道具.速度=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
        else
          道具.防御=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
       end
       local 附加范围={"伤害","灵力","敏捷","耐力","体质","力量","魔力","气血","魔法"}
       for n=1,9 do
          local 类型=附加范围[n]
          if 取随机数()<=5 then
                 if 道具[类型]==nil then
                        if 类型=="伤害" then
                        道具[类型]=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
                        elseif 类型=="灵力" then
                        道具[类型]=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
                        elseif 类型=="敏捷"  or 类型=="体质" or 类型=="力量" or 类型=="耐力" or 类型=="魔力"  then
                        道具[类型]=math.floor(取随机数(等级/20+2,等级/20+10)+(取随机数(灵气/40,灵气/20)))
                        elseif 类型=="气血" then
                        道具[类型]=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
                        elseif 类型=="魔法" then
                        道具[类型]=math.floor(取随机数(等级*0.25+5,等级+10)+(取随机数(灵气*0.15,灵气*0.5)))
                        end
                  end
            end
        end
      if 道具.第二特效==nil and 取随机数()<=1 then
         道具.第二特效="无级别限制"
      end
      道具.制造者 = 玩家数据[id].角色.数据.名称
      道具.五行=取五行()

    玩家数据[id].道具.数据[书铁格子]=道具
    玩家数据[id].道具.数据[石头格子]=nil
    if 石头格子==玩家数据[id].角色.数据.道具[内容.序列] then
      玩家数据[id].角色.数据.道具[内容.序列]=nil
    else
      玩家数据[id].角色.数据.道具[内容.序列1]=nil
    end
    常规提示(id,"制造装备成功")
    道具刷新(id)
  end
end
function 装备处理类:装备熔合处理(连接id,序号,id,内容)
  if 玩家数据[id].角色:取任务(7758)~=0 then
    常规提示(id,"请完成当前的任务再来吧")
    return
  end
  local 格子1=玩家数据[id].角色.数据.道具[内容.序列]
  local 格子2=玩家数据[id].角色.数据.道具[内容.序列1]
  local 格子3=0
  if 内容.序列2 ~= nil then
    格子3=玩家数据[id].角色.数据.道具[内容.序列2]
  end

  if 玩家数据[id].道具.数据[格子1]==nil or 玩家数据[id].道具.数据[格子2]==nil then
    道具刷新(id)
    return
  elseif 格子3 ~= 0 and 玩家数据[id].道具.数据[格子3]==nil then
    道具刷新(id)
    return
  elseif 玩家数据[id].道具.数据[格子1].总类~=2 or 玩家数据[id].道具.数据[格子2].总类~=2 then
    常规提示(id,"只有装备才可以进行熔合")
    return
  elseif 玩家数据[id].道具.数据[格子1].级别限制<=59 or 玩家数据[id].道具.数据[格子2].级别限制<=59 or 玩家数据[id].道具.数据[格子1].级别限制~= 玩家数据[id].道具.数据[格子2].级别限制 then
    常规提示(id,"60级以上同级的两件装备才可以进行熔合")
    return
  elseif 玩家数据[id].道具.数据[格子1].分类 ~= 玩家数据[id].道具.数据[格子2].分类 then
    常规提示(id,"只有同部位的装备才可以进行熔合")
    return
  elseif 玩家数据[id].道具.数据[格子1].级别限制 >= 60 then
    if 玩家数据[id].道具.数据[格子1].加星 ~= 玩家数据[id].道具.数据[格子2].加星 then
      常规提示(id,"60级装备熔炼要求星级相同")
      return
    elseif 玩家数据[id].道具.数据[格子1].加星 ~= nil and 玩家数据[id].道具.数据[格子1].加星 >= 1 then
      常规提示(id,"该装备一件达到熔合次数上限")
      return
    end
  elseif 格子3 ~=0 and 玩家数据[id].道具.数据[格子3].名称 ~= "融合石" then
    常规提示(id,"只有融合石才可以作为保障物品使用")
    return
  end
  local 等级 = 玩家数据[id].道具.数据[格子1].级别限制
   if 等级 >= 60 then
    local 检测={[1]=0,[2]=0}
    if (玩家数据[id].道具.数据[格子1].特效 ~= nil and 玩家数据[id].道具.数据[格子1].特效 == "无级别限制") or (玩家数据[id].道具.数据[格子1].第二特效 ~= nil and 玩家数据[id].道具.数据[格子1].第二特效 == "无级别限制") then
      检测[1] = 1
    end
    if (玩家数据[id].道具.数据[格子2].特效 ~= nil and 玩家数据[id].道具.数据[格子2].特效 == "无级别限制") or (玩家数据[id].道具.数据[格子2].第二特效 ~= nil and 玩家数据[id].道具.数据[格子2].第二特效 == "无级别限制") then
      检测[2] = 1
    end
    if 检测[1] == 0 or 检测[2] == 0 then
      常规提示(id,"60级以上装备熔合要求装备附带无级别特效")
      return
    end
  end
  local 星级 = 玩家数据[id].道具.数据[格子2].加星
  if 星级 == nil then
    星级 = 0
  end
  local 临时序列 = 0
  local 临时等级 = 0
  if 玩家数据[id].道具.数据[格子1].分类 == 3 then --武器
    临时序列 = 取随机数(1,18)
  elseif 玩家数据[id].道具.数据[格子1].分类 == 1 then --头盔
    临时序列 = 19
  elseif 玩家数据[id].道具.数据[格子1].分类 == 5 then --腰带
    临时序列 = 22
  elseif 玩家数据[id].道具.数据[格子1].分类 == 2 then --项链
    临时序列 = 20
  elseif 玩家数据[id].道具.数据[格子1].分类 == 4 then --衣服
    临时序列 = 21
  elseif 玩家数据[id].道具.数据[格子1].分类 == 6 then --鞋子
    临时序列 = 23
  end
  if 临时序列 == 0 then
    return
  end
  if 临时序列<=18 and 等级 <= 60 then
    临时等级 = 取随机数(6,6)
  else
    临时等级 = 等级/10+1
  end
  local 临时类型=self.打造物品[临时序列][临时等级]
  if type(临时类型)=="table" then
    临时类型=临时类型[取随机数(1,2)]
  end
  local 成功率 = 100
  if 等级 >= 160 then
    成功率 = 100 - (星级+1*5) - 20
  else
    成功率 = 50
  end
  if 取随机数() <= 成功率 then
    local 镶嵌等级1 = 0
    local 镶嵌等级2 = 0
    local 镶嵌类型 = {}
    if 玩家数据[id].道具.数据[格子1].锻炼等级 ~= nil then
      镶嵌等级1 = 玩家数据[id].道具.数据[格子1].锻炼等级
    end
    if 玩家数据[id].道具.数据[格子2].锻炼等级 ~= nil then
      镶嵌等级2 = 玩家数据[id].道具.数据[格子2].锻炼等级
    end
    if 镶嵌等级1 >= 镶嵌等级2 and 镶嵌等级1 ~= 0 then
      for i=1,#玩家数据[id].道具.数据[格子1].镶嵌类型 do
          镶嵌类型[i] = 玩家数据[id].道具.数据[格子1].镶嵌类型[i]
      end
    elseif 镶嵌等级2 ~= 0 then
      for i=1,#玩家数据[id].道具.数据[格子2].镶嵌类型 do
        镶嵌类型[i] = 玩家数据[id].道具.数据[格子2].镶嵌类型[i]
      end
    end
    if 等级 < 90 then
      任务处理类:设置熔合装备任务(id,临时类型,等级+10,临时序列,星级,镶嵌类型,1)
    else
      任务处理类:设置熔合装备任务(id,临时类型,等级,临时序列,星级,镶嵌类型,1)
    end
    玩家数据[id].道具.数据[格子1]=nil
    玩家数据[id].道具.数据[格子2]=nil
    玩家数据[id].角色.数据.道具[内容.序列]=nil
    玩家数据[id].角色.数据.道具[内容.序列1]=nil
  else
    if 格子3 ~= 0 then
      玩家数据[id].道具.数据[格子3]=nil
      玩家数据[id].角色.数据.道具[内容.序列2]=nil
      常规提示(id,"你使用了保护道具,本次合成失败,但不会损耗装备！")
    else
      玩家数据[id].道具.数据[格子1]=nil
      玩家数据[id].角色.数据.道具[内容.序列]=nil
      常规提示(id,"哎呀火候没有掌握好,熔合失败了。你损失了1件装备")
    end
  end
  道具刷新(id)
end



function 装备处理类:添加强化打造装备(id,任务id,系统制造)----鞋子走这里
  local 道具 = 物品类()
  道具:置对象(任务数据[任务id].名称)
  道具.级别限制 = 任务数据[任务id].级别
  local dz = self:高级礼包装备打造公式(任务数据[任务id].级别,任务数据[任务id].序列)
  -- for n=1,11 do
  --   if dz[n]~=nil then
  --     dz[n]=math.floor(dz[n]*(取随机数(110,120)/100))
  --   end
  -- end
  if dz[1] ~= nil then
		道具.命中 = dz[1]
	end
	if dz[2] ~= nil then
		道具.伤害 = dz[2]
	end
	if dz[3] ~= nil then
		道具.防御 = dz[3]
	end
	if dz[4] ~= nil then
		道具.魔法 = dz[4]
	end
	if dz[5] ~= nil then
		道具.灵力 = dz[5]
	end
	if dz[6] ~= nil then
		道具.气血 = dz[6]
	end
	if dz[7] ~= nil then
		道具.敏捷 = dz[7]
	end
	if dz[8] ~= nil then
		道具.体质 = dz[8]
	end
	if dz[9] ~= nil then
		道具.力量 = dz[9]
	end
	if dz[10] ~= nil then
		道具.耐力 = dz[10]
	end
	if dz[11] ~= nil then
		道具.魔力 = dz[11]
	end
	if dz[12] ~= nil then
		local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
		if 道具.分类 == 5 then
			table.insert(通用特效,"愤怒")
			table.insert(通用特效,"暴怒")
		end
		道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
	end
	if dz[13] ~= nil then
		local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
		道具.特技 = 通用特技[取随机数(1,#通用特技)]
	end
	-- 为装备赋予附加属性
  if 系统制造 ~= nil then
    道具.制造者 = "系统制造"
    if 道具.特效 ~= "无级别限制" and 道具.第二特效 ~= "无级别限制" then
      --道具.特效 = "无级别限制"
    end
  else
    道具.制造者 = 玩家数据[id].角色.数据.名称.."强化打造"
  end
  -- 生产附加
  -- if 道具.分类==
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  -------------------摩托修改强化打造需要鉴定
  if 玩家数据[id].道具.数据[制造格子].级别限制 > 0 then
  玩家数据[id].道具.数据[制造格子].鉴定=false
  end
  玩家数据[id].道具.数据[制造格子].五行=取五行()
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  随机序列=随机序列+1
  if 系统制造 ~= nil and 任务数据[任务id].类型 == 7758 and 任务数据[任务id].镶嵌等级 > 0  then
    玩家数据[id].道具.数据[制造格子].锻炼等级= 任务数据[任务id].镶嵌等级
    玩家数据[id].道具.数据[制造格子].镶嵌宝石 = {}
    玩家数据[id].道具.数据[制造格子].镶嵌类型 = 任务数据[任务id].镶嵌类型
    local 镶嵌类型 = {[1]={类型=任务数据[任务id].镶嵌类型[1],数量=1}}
    for i=2,任务数据[任务id].镶嵌等级 do
      if 任务数据[任务id].镶嵌类型[i] == 镶嵌类型[1].类型 then
        镶嵌类型[1].数量 = 镶嵌类型[1].数量 +1
      else
        if 镶嵌类型[2] ~= nil then
          镶嵌类型[2].数量 = 镶嵌类型[2].数量 +1
        else
          镶嵌类型[2] = {类型=任务数据[任务id].镶嵌类型[i],数量=1}
        end
      end
    end
    for i=1,#镶嵌类型 do
      if 镶嵌类型[i].类型 == "太阳石" then
        if 玩家数据[id].道具.数据[制造格子].伤害 == nil then
          玩家数据[id].道具.数据[制造格子].伤害 = 0
        end
        玩家数据[id].道具.数据[制造格子].伤害 = math.floor(玩家数据[id].道具.数据[制造格子].伤害+镶嵌类型[i].数量*8)
      elseif 镶嵌类型[i].类型 == "红玛瑙" then
        if 玩家数据[id].道具.数据[制造格子].命中 == nil then
          玩家数据[id].道具.数据[制造格子].命中 = 0
        end
        玩家数据[id].道具.数据[制造格子].命中 = math.floor(玩家数据[id].道具.数据[制造格子].命中+镶嵌类型[i].数量*25)
      elseif 镶嵌类型[i].类型 == "月亮石" then
        if 玩家数据[id].道具.数据[制造格子].防御 == nil then
          玩家数据[id].道具.数据[制造格子].防御 = 0
        end
        玩家数据[id].道具.数据[制造格子].防御 = math.floor(玩家数据[id].道具.数据[制造格子].防御+镶嵌类型[i].数量*12)
      elseif 镶嵌类型[i].类型 == "黑宝石" then
        if 玩家数据[id].道具.数据[制造格子].速度 == nil then
          玩家数据[id].道具.数据[制造格子].速度 = 0
        end
        玩家数据[id].道具.数据[制造格子].速度 = math.floor(玩家数据[id].道具.数据[制造格子].速度+镶嵌类型[i].数量*8)
      elseif 镶嵌类型[i].类型 == "舍利子" then
        if 玩家数据[id].道具.数据[制造格子].灵力 == nil then
          玩家数据[id].道具.数据[制造格子].灵力 = 0
        end
        玩家数据[id].道具.数据[制造格子].灵力 = math.floor(玩家数据[id].道具.数据[制造格子].灵力+镶嵌类型[i].数量*6)
      elseif 镶嵌类型[i].类型 == "光芒石" then
        if 玩家数据[id].道具.数据[制造格子].气血 == nil then
          玩家数据[id].道具.数据[制造格子].气血 = 0
        end
        玩家数据[id].道具.数据[制造格子].气血 = math.floor(玩家数据[id].道具.数据[制造格子].气血+镶嵌类型[i].数量*40)
      elseif 镶嵌类型[i].类型 == "神秘石" then
        if 玩家数据[id].道具.数据[制造格子].躲避 == nil then
          玩家数据[id].道具.数据[制造格子].躲避 = 0
        end
        玩家数据[id].道具.数据[制造格子].躲避 = math.floor(玩家数据[id].道具.数据[制造格子].躲避+镶嵌类型[i].数量*20)
      end
      玩家数据[id].道具.数据[制造格子].镶嵌宝石[#玩家数据[id].道具.数据[制造格子].镶嵌宝石+1] = 镶嵌类型[i].类型
    end
  end
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:取消任务(任务id)
  任务数据[任务id]=nil
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称) ----靴子走这里
end

function 装备处理类:添加熔合装备属性(id,任务id)
  local 道具 = 物品类()
  道具:置对象(任务数据[任务id].名称)
  道具.级别限制 = 任务数据[任务id].级别
  local 星级 = 任务数据[任务id].星级
  local 序列 = 任务数据[任务id].序列
  local 基础属性  = 1
  local a = 任务数据[任务id].级别
  local 系统制造 = 1
  if 取随机数() <= 10 then
    系统制造=取随机数(2,3)
  end
  星级=系统制造+星级
  if 序列 <= 18 then --武器
    基础属性 = 5.1 + 星级*0.5
    道具.命中 = math.floor(a*基础属性)
    道具.伤害 = math.floor(a*(基础属性-0.5))
    if 任务数据[任务id].指定.双加 == nil then
      local 范围={"力量","敏捷","体质","耐力","魔力"}
      if 取随机数()<=60 then
        local 目标 = 取随机数(1,#范围)
        道具[范围[目标]] = 取随机数(1,60+星级*40)
        table.remove(范围,目标)
        if 取随机数() <= 30 then
          local 目标 = 取随机数(1,#范围)
          道具[范围[目标]] = 取随机数(1,60+星级*40)
        end
      end
    else
      道具[任务数据[任务id].指定.双加[1]] = 取随机数(1,60+星级*40)
      道具[任务数据[任务id].指定.双加[2]] = 取随机数(1,60+星级*40)
    end
  elseif 序列 == 19 then --头盔
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.魔法 = math.floor(a*(基础属性+0.5))
  elseif 序列 == 20 then --项链
    基础属性 = 1.9 + 星级*0.1
    道具.灵力 = math.floor(a*基础属性)
  elseif 序列 == 21 then --衣服
    基础属性 = 2.4 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    if 任务数据[任务id].指定.双加 == nil then
      local 范围={"力量","敏捷","体质","耐力","魔力"}
      if 取随机数()<=60 then
        local 目标 = 取随机数(1,#范围)
        道具[范围[目标]] = 取随机数(1,60+星级*40)
        table.remove(范围,目标)
        if 取随机数() <= 30 then
          local 目标 = 取随机数(1,#范围)
          道具[范围[目标]] = 取随机数(1,60+星级*40)
        end
      end
    else
      道具[任务数据[任务id].指定.双加[1]] = 取随机数(1,60+星级*40)
      道具[任务数据[任务id].指定.双加[2]] = 取随机数(1,60+星级*40)
    end
  elseif 序列 == 22 then --腰带
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.气血 = math.floor(a*(基础属性+2))
  elseif 序列 == 23 then --鞋子
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.敏捷 = math.floor(a*(基础属性-0.2))
  end

  if 取随机数() <= 10 then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if 取随机数() <= 5 then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  if 任务数据[任务id].指定.特技 ~= nil then
    道具.特技 = 任务数据[任务id].指定.特技
  end
  -- 为装备赋予附加属性
  道具.制造者 = "系统制造"
   if 道具.特效 ~= "无级别限制" and 道具.第二特效 ~= "无级别限制" then
  --   道具.特效 = "无级别限制"
   end
  if 任务数据[任务id].指定.特效 ~= nil then
    道具.第二特效 = 任务数据[任务id].指定.特效
  end
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].五行=取五行()
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].道具.数据[制造格子].加星 = 星级
  if 系统制造 >= 2 then
    发送数据(玩家数据[id].连接id,1501,{名称="梦幻精灵",模型="普陀_接引仙女",对话="恭喜你的运气爆棚获得了一件 #G"..玩家数据[id].道具.数据[制造格子].加星.."星#R"..玩家数据[id].道具.数据[制造格子].名称})
  end
  if 任务数据[任务id].镶嵌等级 > 0 then
    玩家数据[id].道具.数据[制造格子].锻炼等级= 任务数据[任务id].镶嵌等级
    玩家数据[id].道具.数据[制造格子].镶嵌宝石 = {}
    玩家数据[id].道具.数据[制造格子].镶嵌类型 = 任务数据[任务id].镶嵌类型
    local 镶嵌类型 = {[1]={类型=任务数据[任务id].镶嵌类型[1],数量=1}}
    for i=2,任务数据[任务id].镶嵌等级 do
      if 任务数据[任务id].镶嵌类型[i] == 镶嵌类型[1].类型 then
        镶嵌类型[1].数量 = 镶嵌类型[1].数量 +1
      else
        if 镶嵌类型[2] ~= nil then
          镶嵌类型[2].数量 = 镶嵌类型[2].数量 +1
        else
          镶嵌类型[2] = {类型=任务数据[任务id].镶嵌类型[i],数量=1}
        end
      end
    end
    for i=1,#镶嵌类型 do
      if 镶嵌类型[i].类型 == "太阳石" then
        if 玩家数据[id].道具.数据[制造格子].伤害 == nil then
          玩家数据[id].道具.数据[制造格子].伤害 = 0
        end
        玩家数据[id].道具.数据[制造格子].伤害 = math.floor(玩家数据[id].道具.数据[制造格子].伤害+镶嵌类型[i].数量*8)
      elseif 镶嵌类型[i].类型 == "红玛瑙" then
        if 玩家数据[id].道具.数据[制造格子].命中 == nil then
          玩家数据[id].道具.数据[制造格子].命中 = 0
        end
        玩家数据[id].道具.数据[制造格子].命中 = math.floor(玩家数据[id].道具.数据[制造格子].命中+镶嵌类型[i].数量*25)
      elseif 镶嵌类型[i].类型 == "月亮石" then
        if 玩家数据[id].道具.数据[制造格子].防御 == nil then
          玩家数据[id].道具.数据[制造格子].防御 = 0
        end
        玩家数据[id].道具.数据[制造格子].防御 = math.floor(玩家数据[id].道具.数据[制造格子].防御+镶嵌类型[i].数量*12)
      elseif 镶嵌类型[i].类型 == "黑宝石" then
        if 玩家数据[id].道具.数据[制造格子].速度 == nil then
          玩家数据[id].道具.数据[制造格子].速度 = 0
        end
        玩家数据[id].道具.数据[制造格子].速度 = 玩家数据[id].道具.数据[制造格子].速度 + 镶嵌类型[i].数量*8
      elseif 镶嵌类型[i].类型 == "舍利子" then
        if 玩家数据[id].道具.数据[制造格子].灵力 == nil then
          玩家数据[id].道具.数据[制造格子].灵力 = 0
        end
        玩家数据[id].道具.数据[制造格子].灵力 = math.floor(玩家数据[id].道具.数据[制造格子].灵力+镶嵌类型[i].数量*6)
      elseif 镶嵌类型[i].类型 == "光芒石" then
        if 玩家数据[id].道具.数据[制造格子].气血 == nil then
          玩家数据[id].道具.数据[制造格子].灵力 = 0
        end
        玩家数据[id].道具.数据[制造格子].气血 = math.floor(玩家数据[id].道具.数据[制造格子].气血+镶嵌类型[i].数量*40)
      elseif 镶嵌类型[i].类型 == "神秘石" then
        if 玩家数据[id].道具.数据[制造格子].躲避 == nil then
          玩家数据[id].道具.数据[制造格子].躲避 = 0
        end
        玩家数据[id].道具.数据[制造格子].躲避 = 玩家数据[id].道具.数据[制造格子].躲避 + 镶嵌类型[i].数量*20
      end
      玩家数据[id].道具.数据[制造格子].镶嵌宝石[#玩家数据[id].道具.数据[制造格子].镶嵌宝石+1] = 镶嵌类型[i].类型
    end
  end
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:取消任务(任务id)
  任务数据[任务id]=nil
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)

end


function 装备处理类:给予星级装备(id,星级)
  local 名称
  local 序列 = 0
  local 随机参数 = 取随机数()
  if 随机参数 <= 10 then --武器
    序列 = 取随机数(1,18)
  elseif 随机参数 <= 20 then --头盔
    序列 = 19
  elseif 随机参数 <= 40 then --腰带
    序列 = 22
  elseif 随机参数 <= 60 then --项链
    序列 = 20
  elseif 随机参数 <= 80 then --衣服
    序列 = 21
  else --鞋子
    序列 = 23
  end
  if 序列 == 0 then
    return
  end
  名称=self.打造物品[序列][17]
  if type(名称)=="table" then
    名称=名称[取随机数(1,2)]
  end

  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 160
  local 基础属性  = 1
  local a = 160

  if 序列 <= 18 then --武器
    基础属性 = 5.1 + 星级*0.5
    道具.命中 = math.floor(a*基础属性)
    道具.伤害 = math.floor(a*(基础属性-0.5))
    local 范围={"力量","敏捷","体质","耐力","魔力"}
    if 取随机数()<=60 then
      local 目标 = 取随机数(1,#范围)
      道具[范围[目标]] = 取随机数(1,60+星级*40)
      table.remove(范围,目标)
      if 取随机数() <= 30 then
        local 目标 = 取随机数(1,#范围)
        道具[范围[目标]] = 取随机数(1,60+星级*40)
      end
    end
  elseif 序列 == 19 then --头盔
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.魔法 = math.floor(a*(基础属性+0.5))
  elseif 序列 == 20 then --项链
    基础属性 = 1.9 + 星级*0.1
    道具.灵力 = math.floor(a*基础属性)
  elseif 序列 == 21 then --衣服
    基础属性 = 2.4 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    local 范围={"力量","敏捷","体质","耐力","魔力"}
    if 取随机数()<=60 then
      local 目标 = 取随机数(1,#范围)
      道具[范围[目标]] = 取随机数(1,60+星级*40)
      table.remove(范围,目标)
      if 取随机数() <= 30 then
        local 目标 = 取随机数(1,#范围)
        道具[范围[目标]] = 取随机数(1,60+星级*40)
      end
    end
  elseif 序列 == 22 then --腰带
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.气血 = math.floor(a*(基础属性+2))
  elseif 序列 == 23 then --鞋子
    基础属性 = 0.9 + 星级*0.1
    道具.防御 = math.floor(a*基础属性)
    道具.敏捷 = math.floor(a*(基础属性-0.2))
  end
  if 取随机数() <= 10 then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if 取随机数() <= 5 then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  -- 为装备赋予附加属性
  if 道具.特效 ~= "无级别限制" and 道具.第二特效 ~= "无级别限制" then
    道具.特效 = "无级别限制"
  end
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].五行=取五行()
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].道具.数据[制造格子].加星 = 星级
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)

end


function 装备处理类:生成指定90装备(id,名称,级别,序列)
  --print(id,名称,级别,序列)
  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 120
  local dz = self:礼包装备打造公式(60,序列)
  if dz[1] ~= nil then
    道具.命中 = dz[1]
  end
  if dz[2] ~= nil then
    道具.伤害 = dz[2]
  end
  if dz[3] ~= nil then
    道具.防御 = dz[3]
  end
  if dz[4] ~= nil then
    道具.魔法 = dz[4]
  end
  if dz[5] ~= nil then
    道具.灵力 = dz[5]
  end
  if dz[6] ~= nil then
    道具.气血 = dz[6]
  end
  if dz[7] ~= nil then
    道具.敏捷 = dz[7]
  end
  if dz[8] ~= nil then
    道具.体质 = dz[8]
  end
  if dz[9] ~= nil then
    道具.力量 = dz[9]
  end
  if dz[10] ~= nil then
    道具.耐力 = dz[10]
  end
  if dz[11] ~= nil then
    道具.魔力 = dz[11]
  end
  if dz[12] ~= nil then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if dz[13] ~= nil then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  -- 为装备赋予附加属性
  --道具.制造者 = 玩家数据[id].角色.数据.名称.."强化打造"
  -- 生产附加
  -- if 道具.分类==
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:日志记录(format("生成装备：名称%s,级别%s,识别码%s",道具.名称,道具.级别限制,玩家数据[id].道具.数据[制造格子].识别码))
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)
  return 制造格子
end

function 装备处理类:生成指定装备(id,名称,级别,序列)
  --print(id,名称,级别,序列)
  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 级别
  local dz = self:礼包装备打造公式(级别,序列)
  if dz[1] ~= nil then
		道具.命中 = dz[1]
	end
	if dz[2] ~= nil then
		道具.伤害 = dz[2]
	end
	if dz[3] ~= nil then
		道具.防御 = dz[3]
	end
	if dz[4] ~= nil then
		道具.魔法 = dz[4]
	end
	if dz[5] ~= nil then
		道具.灵力 = dz[5]
	end
	if dz[6] ~= nil then
		道具.气血 = dz[6]
	end
	if dz[7] ~= nil then
		道具.敏捷 = dz[7]
	end
	if dz[8] ~= nil then
		道具.体质 = dz[8]
	end
	if dz[9] ~= nil then
		道具.力量 = dz[9]
	end
	if dz[10] ~= nil then
		道具.耐力 = dz[10]
	end
	if dz[11] ~= nil then
		道具.魔力 = dz[11]
	end
	if dz[12] ~= nil then
		local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
		if 道具.分类 == 5 then
			table.insert(通用特效,"愤怒")
			table.insert(通用特效,"暴怒")
		end
		道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
	end
	if dz[13] ~= nil then
		local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
		道具.特技 = 通用特技[取随机数(1,#通用特技)]
	end
  -- 为装备赋予附加属性
  --道具.制造者 = 玩家数据[id].角色.数据.名称.."强化打造"
  -- 生产附加
  -- if 道具.分类==
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:日志记录(format("生成装备：名称%s,级别%s,识别码%s",道具.名称,道具.级别限制,玩家数据[id].道具.数据[制造格子].识别码))
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)
  return 制造格子
end


function 装备处理类:生成指定装备礼包(id,名称,级别,序列)
  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 级别
  local dz = self:礼包装备打造公式(级别,序列)
  if 吊游定制 then
  else
    for n=1,11 do
      if dz[n]~=nil then
        dz[n]=math.floor(dz[n]*(取随机数(100,100)/100)) ---------这个是打造完属性后 随机增加数据 本来是 110-120
      end
    end
  end
  if dz[1] ~= nil then
    道具.命中 = dz[1]
  end
  if dz[2] ~= nil then
    道具.伤害 = dz[2]
  end
  if dz[3] ~= nil then
    道具.防御 = dz[3]
  end
  if dz[4] ~= nil then
    道具.魔法 = dz[4]
  end
  if dz[5] ~= nil then
    道具.灵力 = dz[5]
  end
  if dz[6] ~= nil then
    道具.气血 = dz[6]
  end
  if dz[7] ~= nil then
    道具.敏捷 = dz[7]
  end
  if dz[8] ~= nil then
    道具.体质 = dz[8]
  end
  if dz[9] ~= nil then
    道具.力量 = dz[9]
  end
  if dz[10] ~= nil then
    道具.耐力 = dz[10]
  end
  if dz[11] ~= nil then
    道具.魔力 = dz[11]
  end
  if dz[12] ~= nil then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if dz[13] ~= nil then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  -- 为装备赋予附加属性
  道具.制造者 = "商城购买"
  -- 生产附加
  -- if 道具.分类==
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:日志记录(format("生成装备：名称%s,级别%s,识别码%s",道具.名称,道具.级别限制,玩家数据[id].道具.数据[制造格子].识别码))
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)
  return 制造格子
end

function 装备处理类:生成指定高级装备礼包(id,名称,级别,序列)
  --print(id,名称,级别,序列)
  local 道具 = 物品类()
  道具:置对象(名称)
  道具.级别限制 = 级别
  local dz = self:高级礼包装备打造公式(级别,序列)
  if 吊游定制 then
  else
    for n=1,11 do
      if dz[n]~=nil then
        dz[n]=math.floor(dz[n]*(取随机数(100,100)/100)) ---------这个是打造完属性后 随机增加数据 本来是 110-120
      end
    end
  end
  if dz[1] ~= nil then
    道具.命中 = dz[1]
  end
  if dz[2] ~= nil then
    道具.伤害 = dz[2]
  end
  if dz[3] ~= nil then
    道具.防御 = dz[3]
  end
  if dz[4] ~= nil then
    道具.魔法 = dz[4]
  end
  if dz[5] ~= nil then
    道具.灵力 = dz[5]
  end
  if dz[6] ~= nil then
    道具.气血 = dz[6]
  end
  if dz[7] ~= nil then
    道具.敏捷 = dz[7]
  end
  if dz[8] ~= nil then
    道具.体质 = dz[8]
  end
  if dz[9] ~= nil then
    道具.力量 = dz[9]
  end
  if dz[10] ~= nil then
    道具.耐力 = dz[10]
  end
  if dz[11] ~= nil then
    道具.魔力 = dz[11]
  end
  if dz[12] ~= nil then
    local 通用特效 = {"无级别限制","神佑","珍宝","必中","神农","简易","绝杀","专注","精致","再生"}
    if 道具.分类 == 5 then
      table.insert(通用特效,"愤怒")
      table.insert(通用特效,"暴怒")
    end
    道具.特效 = 通用特效[取随机数(1,#通用特效)]
    if 取随机数() <= 10 then
      道具.第二特效 = 通用特效[取随机数(1,#通用特效)]
    end
  end
  if dz[13] ~= nil then
    local 通用特技 = {"修罗咒","天衣无缝","气疗术","心疗术","命疗术","凝气诀","凝神诀","气归术","命归术","四海升平","回魂咒","起死回生","水清诀","冰清诀","玉清诀","晶清诀","弱点击破","冥王爆杀","放下屠刀","河东狮吼","碎甲术","破甲术","破血狂攻","罗汉金钟","慈航普渡","太极护法","光辉之甲","圣灵之甲","野兽之力","魔兽之印","流云诀","啸风诀","笑里藏刀","绝幻魔音","凝滞术","停陷术","破碎无双"}
    道具.特技 = 通用特技[取随机数(1,#通用特技)]
  end
  -- 为装备赋予附加属性
  道具.制造者 = "商城购买"
  -- 生产附加
  -- if 道具.分类==
  local 制造格子=玩家数据[id].道具:取新编号()
  玩家数据[id].道具.数据[制造格子]=道具
  玩家数据[id].道具.数据[制造格子].耐久=取随机数(500,700)
  玩家数据[id].道具.数据[制造格子].识别码=id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
  玩家数据[id].角色.数据.道具[玩家数据[id].角色:取道具格子()]=制造格子
  玩家数据[id].角色:日志记录(format("生成装备：名称%s,级别%s,识别码%s",道具.名称,道具.级别限制,玩家数据[id].道具.数据[制造格子].识别码))
  常规提示(id,"#Y/你得到了#R/"..玩家数据[id].道具.数据[制造格子].名称)
  return 制造格子
end

function 装备处理类:打造公式1(a,b) -- 制作书等级 制作种类
  local c = {} -- 命中 速度 防御 伤害 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力
  if a == nil or b == nil then
    return false
  end
  if b == 24 then -- 护腕
    c[1] = 取随机数(a,a+10)
    if 取随机数(1,100) <= 10 then
      local sxs = {4,5,6,7,8,9,10,11,12}
      local sx1 = 取随机数(1,#sxs)
      local x1  = sxs[sx1]
      remove(sxs,sx1)
      sx1 = 取随机数(1,#sxs)
      local x2  = sxs[sx1]
      if x1<=7 then
          c[x1] = 取随机数(a,a+10)
      else
          c[x1] = 取随机数(-8,20)
      end
      if x2<=7 then
          c[x2] = 取随机数(a,a+10)
      else
          c[x2] = 取随机数(-8,20)
      end
    elseif 取随机数(1,100) <= 30 then
      local sx = 取随机数(4,12)
      if sx<=7 then
          c[sx] = 取随机数(a,a+10)
      else
          c[sx] = 取随机数(a*0.2,a*0.4)
      end
    end
  elseif b == 25 then -- 护腕
    c[2] = 取随机数(a,a+10)
    if 取随机数(1,100) <= 10 then
      local sxs = {4,5,6,7,8,9,10,11,12}
      local sx1 = 取随机数(1,#sxs)
      local x1  = sxs[sx1]
      remove(sxs,sx1)
      sx1 = 取随机数(1,#sxs)
      local x2  = sxs[sx1]
      if x1<=7 then
          c[x1] = 取随机数(a,a+10)
      else
          c[x1] = 取随机数(-8,20)
      end
      if x2<=7 then
          c[x2] = 取随机数(a,a+10)
      else
          c[x2] = 取随机数(-8,20)
      end
    elseif 取随机数(1,100) <= 30 then
      local sx = 取随机数(4,12)
      if sx<=7 then
          c[sx] = 取随机数(a,a+10)
      else
          c[sx] = 取随机数(a*0.2,a*0.4)
      end
    end
  elseif b == 26 then -- 铠甲
    c[3] = 取随机数(a,a+10)
    if 取随机数(1,100) <= 10 then
      local sxs = {4,5,6,7,8,9,10,11,12}
      local sx1 = 取随机数(1,#sxs)
      local x1  = sxs[sx1]
      remove(sxs,sx1)
      sx1 = 取随机数(1,#sxs)
      local x2  = sxs[sx1]
      if x1<=7 then
          c[x1] = 取随机数(a,a+10)
      else
          c[x1] = 取随机数(-8,20)
      end
      if x2<=7 then
          c[x2] = 取随机数(a,a+10)
      else
          c[x2] = 取随机数(-8,20)
      end
    elseif 取随机数(1,100) <= 30 then
      local sx = 取随机数(4,12)
      if sx<=7 then
          c[sx] = 取随机数(a,a+10)
      else
          c[sx] = 取随机数(a*0.2,a*0.4)
      end
    end
  end
  return c
end
function 装备处理类:打造公式(a,b,c) -- 普通打造
  local c = {} -- 命中 伤害 防御 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力 附加特效 附加特技
  if a == nil or b == nil then
    return false
  end
  local m = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造系数")
  if tonumber(m) == nil then
    m = 4.96
  else
    m = tonumber(m)
  end
  local 双加概率 =  f函数.读配置(程序目录.."配置文件.ini","主要配置","打造双加概率")
  local 双加概率1 = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造单加概率")
  if tonumber(双加概率) == nil then
    双加概率 = 10
  end
  if tonumber(双加概率1) == nil then
    双加概率1 = 30
  end
  双加概率 = 双加概率 +0
  双加概率1 = 双加概率1 +0
  if b < 19 then -- 武器
    if a >= 0 then
      -- c[1] = 取随机数(a*(m-1.26)+10,a*(m-0.26)+15)
      -- c[2] = 取随机数(a*(m-1.76)+10,a*(m-0.91)+14)
      c[1] = 取随机数(生成属性.普通.武器[a].命中.min,生成属性.普通.武器[a].命中.max)
      c[2] = 取随机数(生成属性.普通.武器[a].伤害.min,生成属性.普通.武器[a].伤害.max)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3+3)
        c[x2] = 取随机数(a*(-0.05),a*0.3+3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 19 then -- 帽子
    if a >= 0 then
      -- c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
      -- c[4] = 取随机数(a*(m-3.91)+5,a*(m-3.61)+7)
      c[3] = 取随机数(生成属性.普通.头部[a].防御.min,生成属性.普通.头部[a].防御.max)
      c[4] = 取随机数(生成属性.普通.头部[a].魔法.min,生成属性.普通.头部[a].魔法.max)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
    --   c[4] = 取随机数(a*(m-3.91)+5,a*(m-3.61)+8)
    end
  elseif b == 20 then -- 项链
    if a >= 0 then
      -- c[5] = 取随机数(a*(m-3.71)+5,a*(m-3.33)+6)
      c[5] =取随机数(生成属性.普通.项链[a].灵力.min,生成属性.普通.项链[a].灵力.max)
    -- elseif a > 60 then
    --   c[5] = 取随机数(a*(m-3.71)+6,a*(m-3.33)+7)
    end
  elseif b == 21 then -- 衣服
    if a >= 0 then
      -- c[3] = 取随机数(a*(m-3.39)+10,a*(m-2.92)+13)
      c[3] =取随机数(生成属性.普通.衣服[a].防御.min,生成属性.普通.衣服[a].防御.max)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3+3)
        c[x2] = 取随机数(a*(-0.05),a*0.3+3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    -- elseif a > 70 then
    --   c[3] = 取随机数(a*(m-3.39)+10,a*(m-2.915)+13)
    --   if 取随机数(1,100) <= 双加概率 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*(-0.05),a*0.3+3)
    --     c[x2] = 取随机数(a*(-0.05),a*0.3+3)
    --   elseif 取随机数(1,100) <= 双加概率1 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*0.2,a*0.3)
      -- end
    end
  elseif b == 22 then -- 腰带
    if a >= 0 then
    --   c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
    -- end
        -- c[6] = 取随机数(a*(m-2.86)+10,a*(m-2.26)+17)
    c[3] = 取随机数(生成属性.普通.腰带[a].防御.min,生成属性.普通.腰带[a].防御.max)
    c[6] = 取随机数(生成属性.普通.腰带[a].气血.min,生成属性.普通.腰带[a].气血.max)
    end
  elseif b == 23 then -- 鞋子
    -- if a <= 60 then
    --   c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
    -- end
    -- if a <= 40 then
    --   c[7] = 取随机数(a*(m-4.66)+5,a*(m-4.56)+6)
    -- elseif a > 40 then
    --   c[7] = 取随机数(a*(m-4.66)+7,a*(m-4.56)+7)
    -- end
    if a >= 0 then
      c[3] = 取随机数(生成属性.普通.靴子[a].防御.min,生成属性.普通.靴子[a].防御.max)
      c[7] = 取随机数(生成属性.普通.靴子[a].敏捷.min,生成属性.普通.靴子[a].敏捷.max)
    end
  end
  local tx = 取随机数()
  local txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造特效概率")
  if tonumber(txgl) == nil then
    txgl = 5
  end
  if tx <= txgl+0 then
    c[12] = 1
  end
  tx = 取随机数()
  txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造特技概率")
  if tonumber(txgl) == nil then
    txgl = 5
  end
  if tx <= txgl+0 then
    c[13] = 1
  end
  return c
end

function 装备处理类:打造公式22(a,b,c) -- 制作书等级 制作种类
  local c = {} -- 1命中 2伤害 3防御 4魔法 5灵力 6气血 7敏捷 8体质 9力量 10耐力 11魔力 12附加特效 13附加特技
  if a == nil or b == nil then
    return false
  end
  local m = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造系数")
  if tonumber(m) == nil then
    m = 4
  else
    m = tonumber(m)
  end
  local 双加概率 =  f函数.读配置(程序目录.."配置文件.ini","主要配置","打造双加概率")
  local 双加概率1 = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造单加概率")
  if tonumber(双加概率) == nil then
    双加概率 = 10
  end
  if tonumber(双加概率1) == nil then
    双加概率1 = 30
  end
  双加概率 = 双加概率 +0
  双加概率1 = 双加概率1 +0
  if b < 19 then -- 武器
    if a <= 60 then
      c[1] = 取随机数(a*(m-1.23)+12,a*(m-0.26)+5)
      c[2] = 取随机数(a*(m-1.42)+13,a*(m-0.91)+4)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.2)
      end
    elseif a > 60 then
      c[1] = 取随机数(a*(m-1.06),a*(m-0))
      c[2] = 取随机数(a*(m-1.46),a*(m-0.48))
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.1)
        c[x2] = 取随机数(a*(-0.05),a*0.1)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.2)
      end
    end
  elseif b == 19 then -- 帽子
    if a <= 60 then
      c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
      c[4] = 取随机数(a*(m-3.91)+5,a*(m-3.61)+7)
    elseif a > 60 then
      c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
      c[4] = 取随机数(a*(m-3.91)+5,a*(m-3.61)+8)
    end
  elseif b == 20 then -- 项链
    if a <= 60 then
      c[5] = 取随机数(a*(m-3.71)+5,a*(m-3.33)+6)
    elseif a > 60 then
      c[5] = 取随机数(a*(m-3.71)+6,a*(m-3.33)+7)
    end
  elseif b == 21 then -- 衣服
    if a <= 70 then
      c[3] = 取随机数(a*(m-3.39)+10,a*(m-2.92)+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    elseif a > 70 then
      c[3] = 取随机数(a*(m-3.39)+10,a*(m-2.915)+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3+3)
        c[x2] = 取随机数(a*(-0.05),a*0.3+3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 22 then -- 腰带
    if a <= 60 then
      c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
    elseif a > 60 then
      c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
    end
    c[6] = 取随机数(a*(m-2.86)+10,a*(m-2.26)+17)
  elseif b == 23 then -- 鞋子
    if a <= 60 then
      c[3] = 取随机数(a*(m-4.45)+5,a*(m-4.31)+7)
    elseif a > 60 then
      c[3] = 取随机数(a*(m-4.45)+6,a*(m-4.19))
    end
    if a <= 40 then
      c[7] = 取随机数(a*(m-4.66)+5,a*(m-4.56)+6)
    elseif a > 40 then
      c[7] = 取随机数(a*(m-4.66)+7,a*(m-4.56)+7)
    end
  end
  local tx = 取随机数()
  local txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造特效概率")
  if tonumber(txgl) == nil then
    txgl = 5
  end
  if tx <= txgl+0 then
    c[12] = 1
  end
  tx = 取随机数()
  txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","打造特技概率")
  if tonumber(txgl) == nil then
    txgl = 5
  end
  if tx <= txgl+0 then
    c[13] = 1
  end
  return c
end

function 装备处理类:礼包装备打造公式(a,b) -- 制作书等级 制作种类
  local c = {} -- 命中 伤害 防御 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力 附加特效 附加特技
  if a == nil or b == nil then
    return false
  end
  if b < 19 then -- 武器
    if a <= 50 then
      c[1] = 取随机数(a*3.7+10,a*4.7+15)
      c[2] = 取随机数(a*3.2+10,a*4.05+14)
      if 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 30 then
        local sx = {取随机数(7,11)}
        c[sx] = 取随机数(a*0.2,a*0.4)
      end
        elseif a == 60 then
      c[1] = 取随机数(220,286)
      c[2] = 取随机数(190,247)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

        elseif a == 70 then
      c[1] = 取随机数(255,331)
      c[2] = 取随机数(220,286)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end
        elseif a == 80 then
      c[1] = 取随机数(290,377)
      c[2] = 取随机数(250,325)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

        elseif a == 90 then
      c[1] = 取随机数(325,422)
      c[2] = 取随机数(280,364)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

        elseif a == 100 then
      c[1] = 取随机数(360,468)
      c[2] = 取随机数(310,403)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

        elseif a == 110 then
      c[1] = 取随机数(395,513)
      c[2] = 取随机数(340,422)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

         elseif a == 120 then
      c[1] = 取随机数(430,559)
      c[2] = 取随机数(370,481)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        end

         elseif a == 130 then
      c[1] = 取随机数(465,604)
      c[2] = 取随机数(400,520)
      -- if 取随机数(1,100) <= 50 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        --end

         elseif a == 140 then
      c[1] = 取随机数(500,650)
      c[2] = 取随机数(430,559)
      -- if 取随机数(1,100) <= 100 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
        --end

         elseif a == 150 or a == 160 then
      c[1] = 取随机数(535,695)
      c[2] = 取随机数(460,598)
      -- if 取随机数(1,100) <= 50 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 100 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
       c[x1] = 取随机数(a*0.1,a*0.3)
       c[x2] = 取随机数(a*0.1,a*0.3)
        --end
  end
    local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end

  elseif b == 19 then -- 帽子
    if a <= 50 then
      c[3] = 取随机数(a*0.48+5,a*0.60+7)
      c[4] = 取随机数(a*1+5,a*1.30+7)
    elseif a == 60 then
      c[3] = 取随机数(40,52)
      c[4] = 取随机数(75,97)
    elseif a == 70 then
      c[3] = 取随机数(40,52)
      c[4] = 取随机数(75,97)
    elseif a == 80 then
      c[3] = 取随机数(45,58)
      c[4] = 取随机数(85,110)
    elseif a == 90 then
      c[3] = 取随机数(50,65)
      c[4] = 取随机数(95,123)
    elseif a == 100 then
      c[3] = 取随机数(55,71)
      c[4] = 取随机数(105,135)
    elseif a == 110 then
      c[3] = 取随机数(60,78)
      c[4] = 取随机数(115,149)
    elseif a == 120 then
      c[3] = 取随机数(65,84)
      c[4] = 取随机数(125,162)
    elseif a == 130 then
      c[3] = 取随机数(70,97)
      c[4] = 取随机数(135,185)
    elseif a == 140 then
      c[3] = 取随机数(75,97)
      c[4] = 取随机数(145,188)
    elseif a == 150 then
      c[3] = 取随机数(80,104)
      c[4] = 取随机数(155,201)
      end
          local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end
  elseif b == 20 then -- 项链
    if a <= 50 then
      c[5] = 取随机数(a*1.2,a*1.6)
    elseif a == 60 then
      c[5] = 取随机数(77,100)
    elseif a == 70 then
      c[5] = 取随机数(89,115)
    elseif a == 80 then
      c[5] = 取随机数(101,131)
    elseif a == 90 then
      c[5] = 取随机数(113,146)
    elseif a == 100 then
      c[5] = 取随机数(125,162)
    elseif a == 110 then
      c[5] = 取随机数(137,178)
    elseif a == 120 then
      c[5] = 取随机数(149,193)
    elseif a == 130 then
      c[5] = 取随机数(161,209)
    elseif a == 140 then
      c[5] = 取随机数(173,224)
    elseif a == 150 then
      c[5] = 取随机数(185,240)
     end
         local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end


  elseif b == 21 then -- 衣服
    if a <= 50 then
      c[3] = 取随机数(a*1.53+10,a*2+13)
      if 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 30 then
        local sx = {取随机数(7,11)}
        c[sx] = 取随机数(a*0.2,a*0.4)
      end
    elseif a == 60 then
     c[3] = 取随机数(100,130)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
       end
      elseif a == 70 then
     c[3] = 取随机数(115,149)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
end
      elseif a == 80 then
       c[3] = 取随机数(130,169)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)

end
       elseif a == 90 then

       c[3] = 取随机数(145,188)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
end
        elseif a == 100 then

       c[3] = 取随机数(160,208)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
end
        elseif a == 110 then

      c[3] = 取随机数(172,227)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
end
        elseif a == 120 then

       c[3] = 取随机数(190,247)
      if 取随机数(1,100) <= 50 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)

      elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
end
        elseif a == 130 then

       c[3] = 取随机数(205,266)
      -- if 取随机数(1,100) <= 50 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
--end
        elseif a == 140 then

       c[3] = 取随机数(220,286)
      -- if 取随机数(1,100) <= 50 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)
--end
        elseif a == 150 then

       c[3] = 取随机数(235,305)
      -- if 取随机数(1,100) <= 50 then
      --   local sxs = {7,8,9,10,11}
      --   local sx1 = 取随机数(1,#sxs)
      --   local x1  = sxs[sx1]
      --   remove(sxs,sx1)
      --   sx1 = 取随机数(1,#sxs)
      --   local x2  = sxs[sx1]
      --   c[x1] = 取随机数(a*0.1,a*0.3)

      -- elseif 取随机数(1,100) <= 30 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.1,a*0.3)
        c[x2] = 取随机数(a*0.1,a*0.3)

        --end
      end
          local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end


  elseif b == 22 then -- 腰带
    if a <= 50 then
      c[3] = 取随机数(a*0.48+5,a*0.62+7)
       c[6] = 取随机数(a*2.167,a*2.75)
    elseif a == 60 then
      c[3] = 取随机数(35,45)
      c[6] = 取随机数(130,169)
    elseif a == 70 then
      c[3] = 取随机数(40,52)
      c[6] = 取随机数(150,195)
    elseif a == 80 then
      c[3] = 取随机数(45,58)
      c[6] = 取随机数(170,221)
    elseif a == 90 then
      c[3] = 取随机数(50,65)
      c[6] = 取随机数(190,247)
    elseif a == 100 then
      c[3] = 取随机数(55,71)
      c[6] = 取随机数(210,273)
    elseif a == 110 then
      c[3] = 取随机数(60,78)
      c[6] = 取随机数(230,299)
    elseif a == 120 then
      c[3] = 取随机数(65,84)
      c[6] = 取随机数(250,325)
    elseif a == 130 then
      c[3] = 取随机数(70,97)
      c[6] = 取随机数(270,351)
    elseif a == 140 then
      c[3] = 取随机数(75,97)
      c[6] = 取随机数(290,377)
    elseif a == 150 then
      c[3] = 取随机数(80,104)
      c[6] = 取随机数(310,403)
     end
         local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end

  elseif b == 23 then -- 鞋子
    if a <= 50 then
      c[3] = 取随机数(a*0.48+5,a*0.62+7)
      c[7] = 取随机数(a*0.28+5,a*0.38+6)
    elseif a == 60 then
      c[3] = 取随机数(35,45)
      c[7] = 取随机数(23,29)
    elseif a == 70 then
      c[3] = 取随机数(40,52)
      c[7] = 取随机数(26,33)
    elseif a == 80 then
      c[3] = 取随机数(45,58)
      c[7] = 取随机数(29,37)
    elseif a == 90 then
      c[3] = 取随机数(50,65)
      c[7] = 取随机数(32,41)
    elseif a == 100 then
      c[3] = 取随机数(55,71)
      c[7] = 取随机数(35,45)
    elseif a == 110 then
      c[3] = 取随机数(60,78)
      c[7] = 取随机数(38,49)
    elseif a == 120 then
      c[3] = 取随机数(65,84)
      c[7] = 取随机数(41,53)
    elseif a == 130 then
      c[3] = 取随机数(73,95)
      c[7] = 取随机数(46,59)
    elseif a == 140 then
      c[3] = 取随机数(75,97)
      c[7] = 取随机数(47,61)
    elseif a == 150 then
      c[3] = 取随机数(80,104)
      c[7] = 取随机数(50,65)

    end
        local tx = 取随机数()
    if tx <= 10 then
      c[12] = 1
    end
    tx = 取随机数()
    if tx <= 5 then
      c[13] = 1
    end
  end
  return c
end
function 装备处理类:高级礼包装备打造公式(a,b)  --强化打造 ---鞋子走这里
  local c = {} -- 命中 伤害 防御 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力 附加特效 附加特技
  if a == nil or b == nil then
    return false
  end

  --[[print("A--"..a)
  print("B--"..b)--]]
  local 双加概率 =  f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造双加概率")
  local 双加概率1 = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造单加概率")
  if tonumber(双加概率) == nil then
    双加概率 = 20
  end
  if tonumber(双加概率1) == nil then
    双加概率1 = 60
  end
  双加概率 = 双加概率 +0
  双加概率1 = 双加概率1 +0


  if b < 19 then -- 武器
    if a >= 0 then
      -- c[1] = 取随机数(a*3.7+10,a*4.7+15)
      -- c[2] = 取随机数(a*3.2+10,a*4.05+14)
      c[1] = 取随机数(生成属性.强化.武器[a].命中.min,生成属性.强化.武器[a].命中.max)
      c[2] = 取随机数(生成属性.强化.武器[a].伤害.min,生成属性.强化.武器[a].伤害.max)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05)+10,a*0.3+3+10)
        c[x2] = 取随机数(a*(-0.05)+10,a*0.3+3+10)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2+10,a*0.4+10)
      end
    -- elseif a > 60 then
    --   c[1] = 取随机数(a*3.7+10,a*4.7+15)
    --   c[2] = 取随机数(a*3.2+10,a*4.05+14)
    --   if 取随机数(1,100) <= 双加概率 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*(-0.05),a*0.3)
    --     c[x2] = 取随机数(a*(-0.05),a*0.3)
    --   elseif 取随机数(1,100) <= 双加概率1 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*0.2,a*0.3)
    --   end
    end
  elseif b == 19 then -- 帽子
    -- if a <= 60 then
    --   c[3] = 取随机数(a*0.51+5,a*0.65+7)
    --   c[4] = 取随机数(a*1.05+5,a*1.35+7)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*0.51+6,a*0.77)
    --   c[4] = 取随机数(a*1.05+5,a*1.35+8)
    -- end
    if a >= 0 then
      c[3] = 取随机数(生成属性.强化.头部[a].防御.min,生成属性.强化.头部[a].防御.max)
      c[4] = 取随机数(生成属性.强化.头部[a].魔法.min,生成属性.强化.头部[a].魔法.max)
    end
  elseif b == 20 then -- 项链
    -- if a <= 60 then
    --   c[5] = 取随机数(a*1.25+5,a*1.63+6)
    -- elseif a > 60 then
    --   c[5] = 取随机数(a*1.25+6,a*1.63+7)
    -- end
    if a > 0 then
    c[5] =取随机数(生成属性.强化.项链[a].灵力.min,生成属性.强化.项链[a].灵力.max)
    end
  elseif b == 21 then -- 衣服
    if a >= 0 then
      -- c[3] = 取随机数(a*1.57+10,a*2.04+13)
      c[3] =取随机数(生成属性.强化.衣服[a].防御.min,生成属性.强化.衣服[a].防御.max)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05)+10,a*0.3+3+10)
        c[x2] = 取随机数(a*(-0.05)+10,a*0.3+3+10)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    end
    -- elseif a > 70 then
    --   c[3] = 取随机数(a*1.57+10,a*2.045+13)
    --   if 取随机数(1,100) <= 双加概率 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*(-0.05),a*0.3+3)
    --     c[x2] = 取随机数(a*(-0.05),a*0.3+3)
    --   elseif 取随机数(1,100) <= 双加概率1 then
    --     local sxs = {7,8,9,10,11}
    --     local sx1 = 取随机数(1,#sxs)
    --     local x1  = sxs[sx1]
    --     remove(sxs,sx1)
    --     sx1 = 取随机数(1,#sxs)
    --     local x2  = sxs[sx1]
    --     c[x1] = 取随机数(a*0.2,a*0.3)
    --   end
    -- end
  elseif b == 22 then -- 腰带
    -- if a <= 60 then
    --   c[3] = 取随机数(a*0.51+5,a*0.65+7)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*0.51+6,a*0.77)
    -- end
    -- c[6] = 取随机数(a*2.1+10,a*2.7+17)
    if a >= 0 then
    c[3] = 取随机数(生成属性.强化.腰带[a].防御.min,生成属性.强化.腰带[a].防御.max)
    c[6] = 取随机数(生成属性.强化.腰带[a].气血.min,生成属性.强化.腰带[a].气血.max)
    end
  elseif b == 23 then -- 鞋子
    if a >= 0  then
    --   c[3] = 取随机数(a*0.51+5,a*0.65+7)
    -- elseif a > 60 then
    --   c[3] = 取随机数(a*0.51+6,a*0.77)
    -- end
    -- if a <= 40 then
    --   c[7] = 取随机数(a*0.3+5,a*0.4+6)
    -- elseif a > 40 then
    --   c[7] = 取随机数(a*0.3+7,a*0.4+7)
    -- end
     c[3] = 取随机数(生成属性.强化.靴子[a].防御.min,生成属性.强化.靴子[a].防御.max)
     c[7] = 取随机数(生成属性.强化.靴子[a].敏捷.min,生成属性.强化.靴子[a].敏捷.max)
    end
  end
  local tx = 取随机数()
  local txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造特效概率")
  if tonumber(txgl) == nil then
    txgl = 10
  end
  if tx <= txgl+0 then
    c[12] = 1
  end
  tx = 取随机数()
  txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造特技概率")
  if tonumber(txgl) == nil then
    txgl = 10
  end
  if tx <= txgl+0 then
    c[13] = 1
  end
  return c
end


function 装备处理类:高级礼包装备打造公式11(a,b) -- 制作书等级 制作种类
  local c = {} -- 命中 伤害 防御 魔法 灵力 气血 敏捷 体质 力量 耐力 魔力 附加特效 附加特技
  if a == nil or b == nil then
    return false
  end
  local 双加概率 =  f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造双加概率")
  local 双加概率1 = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造单加概率")
  if tonumber(双加概率) == nil then
    双加概率 = 20
  end
  if tonumber(双加概率1) == nil then
    双加概率1 = 60
  end
  双加概率 = 双加概率 +0
  双加概率1 = 双加概率1 +0
  if b < 19 then -- 武器
    if a <= 60 then
      c[1] = 取随机数(a*3.7+10,a*4.7+15)
      c[2] = 取随机数(a*3.2+10,a*4.05+14)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    elseif a > 60 then
      c[1] = 取随机数(a*3.7+10,a*4.7+15)
      c[2] = 取随机数(a*3.2+10,a*4.05+14)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3)
        c[x2] = 取随机数(a*(-0.05),a*0.3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 19 then -- 帽子
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
      c[4] = 取随机数(a*1.05+5,a*1.35+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
      c[4] = 取随机数(a*1.05+5,a*1.35+8)
    end
  elseif b == 20 then -- 项链
    if a <= 60 then
      c[5] = 取随机数(a*1.25+5,a*1.63+6)
    elseif a > 60 then
      c[5] = 取随机数(a*1.25+6,a*1.63+7)
    end
  elseif b == 21 then -- 衣服
    if a <= 70 then
      c[3] = 取随机数(a*1.57+10,a*2.04+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(-8,20)
        c[x2] = 取随机数(-8,20)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.4)
      end
    elseif a > 70 then
      c[3] = 取随机数(a*1.57+10,a*2.045+13)
      if 取随机数(1,100) <= 双加概率 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*(-0.05),a*0.3+3)
        c[x2] = 取随机数(a*(-0.05),a*0.3+3)
      elseif 取随机数(1,100) <= 双加概率1 then
        local sxs = {7,8,9,10,11}
        local sx1 = 取随机数(1,#sxs)
        local x1  = sxs[sx1]
        remove(sxs,sx1)
        sx1 = 取随机数(1,#sxs)
        local x2  = sxs[sx1]
        c[x1] = 取随机数(a*0.2,a*0.3)
      end
    end
  elseif b == 22 then -- 腰带
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
    end
    c[6] = 取随机数(a*2.1+10,a*2.7+17)
  elseif b == 23 then -- 鞋子
    if a <= 60 then
      c[3] = 取随机数(a*0.51+5,a*0.65+7)
    elseif a > 60 then
      c[3] = 取随机数(a*0.51+6,a*0.77)
    end
    if a <= 40 then
      c[7] = 取随机数(a*0.3+5,a*0.4+6)
    elseif a > 40 then
      c[7] = 取随机数(a*0.3+7,a*0.4+7)
    end
  end
  local tx = 取随机数()
  local txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造特效概率")
  if tonumber(txgl) == nil then
    txgl = 10
  end
  if tx <= txgl+0 then
    c[12] = 1
  end
  tx = 取随机数()
  txgl = f函数.读配置(程序目录.."配置文件.ini","主要配置","强化打造特技概率")
  if tonumber(txgl) == nil then
    txgl = 10
  end
  if tx <= txgl+0 then
    c[13] = 1
  end
  return c
end

function 装备处理类:指定等级物品(lv,id)
  local wps = self.打造物品[id]
  local 取随机数 = 引擎.取随机整数
  local ids = floor(lv/10+1)
  if id <= 18 and lv >= 90 and lv <= 140 then
    if ids <= 12 then
      ids = 取随机数(10,12)
    else
        ids = 取随机数(13,15)
    end
  end
  wps = wps[ids]
  if type(wps) == "table" then
    wps = wps[取随机数(1,2)]
  end
  return wps
end

function 装备处理类:强化打造()

end

function 装备处理类:取可以镶嵌(zb,bs)
  if zb == 1 and (bs == 2 or bs == 3 or bs==5) then
    return true
  elseif zb == 2 and bs == 4 then
    return true
  elseif zb == 3 and (bs == 3 or bs == 5 or bs == 7) then
    return true
  elseif zb == 4 and (bs == 1 or bs == 2 or bs == 4) then
    return true
  elseif zb == 5 and (bs == 1 or bs == 6 or bs == 7) then
    return true
  elseif zb == 6 and (bs == 6 or bs == 7) then
    return true
  end
end

function 装备处理类:取宝石合成几率(id,级别)
  if 级别<=玩家数据[id].角色:取剧情技能等级("宝石工艺")*9-5 then
      return true
  end
  local 初始几率=100-级别*7
  if 级别<=10 then
    初始几率=100
  elseif 初始几率<=20 then
    初始几率=20
  end
  if 取随机数()>初始几率 then
    return false
  else
    return true
  end
end
function 装备处理类:更新(dt) end
function 装备处理类:显示(x,y) end

return 装备处理类